--------------------------------------------------------
--! File generated by asn2aadl v2.1.5: DO NOT EDIT !
--------------------------------------------------------

package DataView

public

  with Data_Model;
  with Taste;
  with Base_Types;
  with Deployment;

DATA Simulink_Tunable_Parameter
PROPERTIES
   TASTE::Ada_Package_Name => "TASTE_Directives";
   Type_Source_Name => "Simulink-Tunable-Parameter";
   Deployment::ASN1_Module_Name => "TASTE-Directives";
   TASTE::Forbid_in_PI => true;
END Simulink_Tunable_Parameter;

DATA Timer
PROPERTIES
   TASTE::Ada_Package_Name => "TASTE_Directives";
   Type_Source_Name => "Timer";
   Deployment::ASN1_Module_Name => "TASTE-Directives";
   TASTE::Forbid_in_PI => true;
END Timer;

DATA Taste_directive
PROPERTIES
   TASTE::Ada_Package_Name => "TASTE_Directives";
   Type_Source_Name => "Taste-directive";
   Deployment::ASN1_Module_Name => "TASTE-Directives";
   TASTE::Forbid_in_PI => true;
END Taste_directive;

data Stream_Element_Buffer
    -- Root type for buffer elements
properties
    Data_Model::Data_Representation => Character;
end Stream_Element_Buffer;
DATA Basler_HRCameraMeasurement
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("/home/taste/repos/i3ds-interfaces/i3ds/types-sensors/asn/Basler-HRCamera.asn");
    TASTE::Ada_Package_Name => "Basler_HRCamera_Types";
    Deployment::ASN1_Module_Name => "Basler-HRCamera-Types";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 8389585; suggested aligned message buffer is...
    Source_Data_Size => 8389592 Bytes;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "Basler-HRCameraMeasurement";
    -- what kind of type is this?
    TASTE::ASN1_Basic_Type =>aSEQUENCE;
END Basler_HRCameraMeasurement;

DATA Basler_HRCameraMeasurement_Buffer_Max
END Basler_HRCameraMeasurement_Buffer_Max;

DATA IMPLEMENTATION Basler_HRCameraMeasurement_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type Basler_HRCameraMeasurement
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (8389592); -- Size of the buffer
    Data_Model::Base_Type => (classifier (DataView::Stream_Element_Buffer));
END Basler_HRCameraMeasurement_Buffer_Max.impl;

DATA Basler_HRCameraMeasurement_Buffer
END Basler_HRCameraMeasurement_Buffer;

DATA IMPLEMENTATION Basler_HRCameraMeasurement_Buffer.impl
    -- Buffer to hold a marshalled data of type Basler_HRCameraMeasurement
SUBCOMPONENTS
    Buffer : data Basler_HRCameraMeasurement_Buffer_Max.impl;
    Length : data Base_Types::Unsigned_32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END Basler_HRCameraMeasurement_Buffer.impl;

DATA SampleTrigger_t
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("/home/taste/repos/i3ds-interfaces/i3ds/types-base/asn/Analog.asn");
    TASTE::Ada_Package_Name => "Analog_Types";
    Deployment::ASN1_Module_Name => "Analog-Types";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 4; suggested aligned message buffer is...
    Source_Data_Size => 8 Bytes;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "SampleTrigger-t";
    -- what kind of type is this?
    TASTE::ASN1_Basic_Type =>aENUMERATED;
END SampleTrigger_t;

DATA SampleTrigger_t_Buffer_Max
END SampleTrigger_t_Buffer_Max;

DATA IMPLEMENTATION SampleTrigger_t_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type SampleTrigger_t
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (8); -- Size of the buffer
    Data_Model::Base_Type => (classifier (DataView::Stream_Element_Buffer));
END SampleTrigger_t_Buffer_Max.impl;

DATA SampleTrigger_t_Buffer
END SampleTrigger_t_Buffer;

DATA IMPLEMENTATION SampleTrigger_t_Buffer.impl
    -- Buffer to hold a marshalled data of type SampleTrigger_t
SUBCOMPONENTS
    Buffer : data SampleTrigger_t_Buffer_Max.impl;
    Length : data Base_Types::Unsigned_32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END SampleTrigger_t_Buffer.impl;

DATA IMUConfigRequest
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("/home/taste/repos/i3ds-interfaces/i3ds/types-base/asn/IMU.asn");
    TASTE::Ada_Package_Name => "IMU_Types";
    Deployment::ASN1_Module_Name => "IMU-Types";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 16; suggested aligned message buffer is...
    Source_Data_Size => 16 Bytes;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "IMUConfigRequest";
    -- what kind of type is this?
    TASTE::ASN1_Basic_Type =>aCHOICE;
END IMUConfigRequest;

DATA IMUConfigRequest_Buffer_Max
END IMUConfigRequest_Buffer_Max;

DATA IMPLEMENTATION IMUConfigRequest_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type IMUConfigRequest
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (16); -- Size of the buffer
    Data_Model::Base_Type => (classifier (DataView::Stream_Element_Buffer));
END IMUConfigRequest_Buffer_Max.impl;

DATA IMUConfigRequest_Buffer
END IMUConfigRequest_Buffer;

DATA IMPLEMENTATION IMUConfigRequest_Buffer.impl
    -- Buffer to hold a marshalled data of type IMUConfigRequest
SUBCOMPONENTS
    Buffer : data IMUConfigRequest_Buffer_Max.impl;
    Length : data Base_Types::Unsigned_32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END IMUConfigRequest_Buffer.impl;

DATA PlanarRegion
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("/home/taste/repos/i3ds-interfaces/i3ds/types-base/asn/Region.asn");
    TASTE::Ada_Package_Name => "Region_Types";
    Deployment::ASN1_Module_Name => "Region-Types";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 32; suggested aligned message buffer is...
    Source_Data_Size => 32 Bytes;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "PlanarRegion";
    -- what kind of type is this?
    TASTE::ASN1_Basic_Type =>aSEQUENCE;
END PlanarRegion;

DATA PlanarRegion_Buffer_Max
END PlanarRegion_Buffer_Max;

DATA IMPLEMENTATION PlanarRegion_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type PlanarRegion
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (32); -- Size of the buffer
    Data_Model::Base_Type => (classifier (DataView::Stream_Element_Buffer));
END PlanarRegion_Buffer_Max.impl;

DATA PlanarRegion_Buffer
END PlanarRegion_Buffer;

DATA IMPLEMENTATION PlanarRegion_Buffer.impl
    -- Buffer to hold a marshalled data of type PlanarRegion
SUBCOMPONENTS
    Buffer : data PlanarRegion_Buffer_Max.impl;
    Length : data Base_Types::Unsigned_32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END PlanarRegion_Buffer.impl;

DATA Attribute_value_t
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("/home/taste/repos/i3ds-interfaces/i3ds/types-base/asn/SampleAttribute.asn");
    TASTE::Ada_Package_Name => "SampleAttribute_Types";
    Deployment::ASN1_Module_Name => "SampleAttribute-Types";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 272; suggested aligned message buffer is...
    Source_Data_Size => 272 Bytes;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "Attribute-value-t";
    -- what kind of type is this?
    TASTE::ASN1_Basic_Type =>aCHOICE;
END Attribute_value_t;

DATA Attribute_value_t_Buffer_Max
END Attribute_value_t_Buffer_Max;

DATA IMPLEMENTATION Attribute_value_t_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type Attribute_value_t
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (272); -- Size of the buffer
    Data_Model::Base_Type => (classifier (DataView::Stream_Element_Buffer));
END Attribute_value_t_Buffer_Max.impl;

DATA Attribute_value_t_Buffer
END Attribute_value_t_Buffer;

DATA IMPLEMENTATION Attribute_value_t_Buffer.impl
    -- Buffer to hold a marshalled data of type Attribute_value_t
SUBCOMPONENTS
    Buffer : data Attribute_value_t_Buffer_Max.impl;
    Length : data Base_Types::Unsigned_32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END Attribute_value_t_Buffer.impl;

DATA AnalogConfigResponse
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("/home/taste/repos/i3ds-interfaces/i3ds/types-base/asn/Analog.asn");
    TASTE::Ada_Package_Name => "Analog_Types";
    Deployment::ASN1_Module_Name => "Analog-Types";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 304; suggested aligned message buffer is...
    Source_Data_Size => 304 Bytes;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "AnalogConfigResponse";
    -- what kind of type is this?
    TASTE::ASN1_Basic_Type =>aSEQUENCE;
END AnalogConfigResponse;

DATA AnalogConfigResponse_Buffer_Max
END AnalogConfigResponse_Buffer_Max;

DATA IMPLEMENTATION AnalogConfigResponse_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type AnalogConfigResponse
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (304); -- Size of the buffer
    Data_Model::Base_Type => (classifier (DataView::Stream_Element_Buffer));
END AnalogConfigResponse_Buffer_Max.impl;

DATA AnalogConfigResponse_Buffer
END AnalogConfigResponse_Buffer;

DATA IMPLEMENTATION AnalogConfigResponse_Buffer.impl
    -- Buffer to hold a marshalled data of type AnalogConfigResponse
SUBCOMPONENTS
    Buffer : data AnalogConfigResponse_Buffer_Max.impl;
    Length : data Base_Types::Unsigned_32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END AnalogConfigResponse_Buffer.impl;

DATA LIDARConfigRequest
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("/home/taste/repos/i3ds-interfaces/i3ds/types-base/asn/LIDAR.asn");
    TASTE::Ada_Package_Name => "LIDAR_Types";
    Deployment::ASN1_Module_Name => "LIDAR-Types";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 53; suggested aligned message buffer is...
    Source_Data_Size => 56 Bytes;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "LIDARConfigRequest";
    -- what kind of type is this?
    TASTE::ASN1_Basic_Type =>aCHOICE;
END LIDARConfigRequest;

DATA LIDARConfigRequest_Buffer_Max
END LIDARConfigRequest_Buffer_Max;

DATA IMPLEMENTATION LIDARConfigRequest_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type LIDARConfigRequest
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (56); -- Size of the buffer
    Data_Model::Base_Type => (classifier (DataView::Stream_Element_Buffer));
END LIDARConfigRequest_Buffer_Max.impl;

DATA LIDARConfigRequest_Buffer
END LIDARConfigRequest_Buffer;

DATA IMPLEMENTATION LIDARConfigRequest_Buffer.impl
    -- Buffer to hold a marshalled data of type LIDARConfigRequest
SUBCOMPONENTS
    Buffer : data LIDARConfigRequest_Buffer_Max.impl;
    Length : data Base_Types::Unsigned_32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END LIDARConfigRequest_Buffer.impl;

DATA CameraConfigResponse
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("/home/taste/repos/i3ds-interfaces/i3ds/types-base/asn/Camera.asn");
    TASTE::Ada_Package_Name => "Camera_Types";
    Deployment::ASN1_Module_Name => "Camera-Types";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 384; suggested aligned message buffer is...
    Source_Data_Size => 384 Bytes;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "CameraConfigResponse";
    -- what kind of type is this?
    TASTE::ASN1_Basic_Type =>aSEQUENCE;
END CameraConfigResponse;

DATA CameraConfigResponse_Buffer_Max
END CameraConfigResponse_Buffer_Max;

DATA IMPLEMENTATION CameraConfigResponse_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type CameraConfigResponse
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (384); -- Size of the buffer
    Data_Model::Base_Type => (classifier (DataView::Stream_Element_Buffer));
END CameraConfigResponse_Buffer_Max.impl;

DATA CameraConfigResponse_Buffer
END CameraConfigResponse_Buffer;

DATA IMPLEMENTATION CameraConfigResponse_Buffer.impl
    -- Buffer to hold a marshalled data of type CameraConfigResponse
SUBCOMPONENTS
    Buffer : data CameraConfigResponse_Buffer_Max.impl;
    Length : data Base_Types::Unsigned_32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END CameraConfigResponse_Buffer.impl;

DATA Sample_attribute_t
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("/home/taste/repos/i3ds-interfaces/i3ds/types-base/asn/SampleAttribute.asn");
    TASTE::Ada_Package_Name => "SampleAttribute_Types";
    Deployment::ASN1_Module_Name => "SampleAttribute-Types";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 296; suggested aligned message buffer is...
    Source_Data_Size => 296 Bytes;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "Sample-attribute-t";
    -- what kind of type is this?
    TASTE::ASN1_Basic_Type =>aSEQUENCE;
END Sample_attribute_t;

DATA Sample_attribute_t_Buffer_Max
END Sample_attribute_t_Buffer_Max;

DATA IMPLEMENTATION Sample_attribute_t_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type Sample_attribute_t
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (296); -- Size of the buffer
    Data_Model::Base_Type => (classifier (DataView::Stream_Element_Buffer));
END Sample_attribute_t_Buffer_Max.impl;

DATA Sample_attribute_t_Buffer
END Sample_attribute_t_Buffer;

DATA IMPLEMENTATION Sample_attribute_t_Buffer.impl
    -- Buffer to hold a marshalled data of type Sample_attribute_t
SUBCOMPONENTS
    Buffer : data Sample_attribute_t_Buffer_Max.impl;
    Length : data Base_Types::Unsigned_32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END Sample_attribute_t_Buffer.impl;

DATA Resolution
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("/home/taste/repos/i3ds-interfaces/esrocos/types-base/asn/Time.asn");
    TASTE::Ada_Package_Name => "Time_Types";
    Deployment::ASN1_Module_Name => "Time-Types";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 4; suggested aligned message buffer is...
    Source_Data_Size => 8 Bytes;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "Resolution";
    -- what kind of type is this?
    TASTE::ASN1_Basic_Type =>aENUMERATED;
END Resolution;

DATA Resolution_Buffer_Max
END Resolution_Buffer_Max;

DATA IMPLEMENTATION Resolution_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type Resolution
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (8); -- Size of the buffer
    Data_Model::Base_Type => (classifier (DataView::Stream_Element_Buffer));
END Resolution_Buffer_Max.impl;

DATA Resolution_Buffer
END Resolution_Buffer;

DATA IMPLEMENTATION Resolution_Buffer.impl
    -- Buffer to hold a marshalled data of type Resolution
SUBCOMPONENTS
    Buffer : data Resolution_Buffer_Max.impl;
    Length : data Base_Types::Unsigned_32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END Resolution_Buffer.impl;

DATA Matrix2d
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("/home/taste/repos/i3ds-interfaces/esrocos/types-base/asn/Eigen.asn");
    TASTE::Ada_Package_Name => "Eigen_Types";
    Deployment::ASN1_Module_Name => "Eigen-Types";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 56; suggested aligned message buffer is...
    Source_Data_Size => 56 Bytes;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "Matrix2d";
    -- what kind of type is this?
    TASTE::ASN1_Basic_Type =>aSEQUENCEOF;
END Matrix2d;

DATA Matrix2d_Buffer_Max
END Matrix2d_Buffer_Max;

DATA IMPLEMENTATION Matrix2d_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type Matrix2d
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (56); -- Size of the buffer
    Data_Model::Base_Type => (classifier (DataView::Stream_Element_Buffer));
END Matrix2d_Buffer_Max.impl;

DATA Matrix2d_Buffer
END Matrix2d_Buffer;

DATA IMPLEMENTATION Matrix2d_Buffer.impl
    -- Buffer to hold a marshalled data of type Matrix2d
SUBCOMPONENTS
    Buffer : data Matrix2d_Buffer_Max.impl;
    Length : data Base_Types::Unsigned_32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END Matrix2d_Buffer.impl;

DATA T_UInt32
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("/home/taste/tool-inst/share/taste-types/taste-types.asn");
    TASTE::Ada_Package_Name => "TASTE_BasicTypes";
    Deployment::ASN1_Module_Name => "TASTE-BasicTypes";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 8; suggested aligned message buffer is...
    Source_Data_Size => 8 Bytes;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "T-UInt32";
    -- what kind of type is this?
    TASTE::ASN1_Basic_Type =>aINTEGER;
END T_UInt32;

DATA T_UInt32_Buffer_Max
END T_UInt32_Buffer_Max;

DATA IMPLEMENTATION T_UInt32_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type T_UInt32
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (8); -- Size of the buffer
    Data_Model::Base_Type => (classifier (DataView::Stream_Element_Buffer));
END T_UInt32_Buffer_Max.impl;

DATA T_UInt32_Buffer
END T_UInt32_Buffer;

DATA IMPLEMENTATION T_UInt32_Buffer.impl
    -- Buffer to hold a marshalled data of type T_UInt32
SUBCOMPONENTS
    Buffer : data T_UInt32_Buffer_Max.impl;
    Length : data Base_Types::Unsigned_32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END T_UInt32_Buffer.impl;

DATA ExposureTime
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("/home/taste/repos/i3ds-interfaces/i3ds/types-base/asn/Camera.asn");
    TASTE::Ada_Package_Name => "Camera_Types";
    Deployment::ASN1_Module_Name => "Camera-Types";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 13; suggested aligned message buffer is...
    Source_Data_Size => 16 Bytes;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "ExposureTime";
    -- what kind of type is this?
    TASTE::ASN1_Basic_Type =>aREAL;
END ExposureTime;

DATA ExposureTime_Buffer_Max
END ExposureTime_Buffer_Max;

DATA IMPLEMENTATION ExposureTime_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type ExposureTime
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (16); -- Size of the buffer
    Data_Model::Base_Type => (classifier (DataView::Stream_Element_Buffer));
END ExposureTime_Buffer_Max.impl;

DATA ExposureTime_Buffer
END ExposureTime_Buffer;

DATA IMPLEMENTATION ExposureTime_Buffer.impl
    -- Buffer to hold a marshalled data of type ExposureTime
SUBCOMPONENTS
    Buffer : data ExposureTime_Buffer_Max.impl;
    Length : data Base_Types::Unsigned_32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END ExposureTime_Buffer.impl;

DATA T_UInt8
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("/home/taste/tool-inst/share/taste-types/taste-types.asn");
    TASTE::Ada_Package_Name => "TASTE_BasicTypes";
    Deployment::ASN1_Module_Name => "TASTE-BasicTypes";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 8; suggested aligned message buffer is...
    Source_Data_Size => 8 Bytes;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "T-UInt8";
    -- what kind of type is this?
    TASTE::ASN1_Basic_Type =>aINTEGER;
END T_UInt8;

DATA T_UInt8_Buffer_Max
END T_UInt8_Buffer_Max;

DATA IMPLEMENTATION T_UInt8_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type T_UInt8
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (8); -- Size of the buffer
    Data_Model::Base_Type => (classifier (DataView::Stream_Element_Buffer));
END T_UInt8_Buffer_Max.impl;

DATA T_UInt8_Buffer
END T_UInt8_Buffer;

DATA IMPLEMENTATION T_UInt8_Buffer.impl
    -- Buffer to hold a marshalled data of type T_UInt8
SUBCOMPONENTS
    Buffer : data T_UInt8_Buffer_Max.impl;
    Length : data Base_Types::Unsigned_32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END T_UInt8_Buffer.impl;

DATA Cosine_StereoCameraMeasurement
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("/home/taste/repos/i3ds-interfaces/i3ds/types-sensors/asn/Cosine-StereoCamera.asn");
    TASTE::Ada_Package_Name => "Cosine_StereoCamera_Types";
    Deployment::ASN1_Module_Name => "Cosine-StereoCamera-Types";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 16778598; suggested aligned message buffer is...
    Source_Data_Size => 16778600 Bytes;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "Cosine-StereoCameraMeasurement";
    -- what kind of type is this?
    TASTE::ASN1_Basic_Type =>aSEQUENCE;
END Cosine_StereoCameraMeasurement;

DATA Cosine_StereoCameraMeasurement_Buffer_Max
END Cosine_StereoCameraMeasurement_Buffer_Max;

DATA IMPLEMENTATION Cosine_StereoCameraMeasurement_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type Cosine_StereoCameraMeasurement
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (16778600); -- Size of the buffer
    Data_Model::Base_Type => (classifier (DataView::Stream_Element_Buffer));
END Cosine_StereoCameraMeasurement_Buffer_Max.impl;

DATA Cosine_StereoCameraMeasurement_Buffer
END Cosine_StereoCameraMeasurement_Buffer;

DATA IMPLEMENTATION Cosine_StereoCameraMeasurement_Buffer.impl
    -- Buffer to hold a marshalled data of type Cosine_StereoCameraMeasurement
SUBCOMPONENTS
    Buffer : data Cosine_StereoCameraMeasurement_Buffer_Max.impl;
    Length : data Base_Types::Unsigned_32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END Cosine_StereoCameraMeasurement_Buffer.impl;

DATA T_Int8
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("/home/taste/tool-inst/share/taste-types/taste-types.asn");
    TASTE::Ada_Package_Name => "TASTE_BasicTypes";
    Deployment::ASN1_Module_Name => "TASTE-BasicTypes";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 8; suggested aligned message buffer is...
    Source_Data_Size => 8 Bytes;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "T-Int8";
    -- what kind of type is this?
    TASTE::ASN1_Basic_Type =>aINTEGER;
END T_Int8;

DATA T_Int8_Buffer_Max
END T_Int8_Buffer_Max;

DATA IMPLEMENTATION T_Int8_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type T_Int8
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (8); -- Size of the buffer
    Data_Model::Base_Type => (classifier (DataView::Stream_Element_Buffer));
END T_Int8_Buffer_Max.impl;

DATA T_Int8_Buffer
END T_Int8_Buffer;

DATA IMPLEMENTATION T_Int8_Buffer.impl
    -- Buffer to hold a marshalled data of type T_Int8
SUBCOMPONENTS
    Buffer : data T_Int8_Buffer_Max.impl;
    Length : data Base_Types::Unsigned_32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END T_Int8_Buffer.impl;

DATA SensorRate
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("/home/taste/repos/i3ds-interfaces/i3ds/types-base/asn/SensorSuite.asn");
    TASTE::Ada_Package_Name => "SensorSuite_Types";
    Deployment::ASN1_Module_Name => "SensorSuite-Types";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 13; suggested aligned message buffer is...
    Source_Data_Size => 16 Bytes;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "SensorRate";
    -- what kind of type is this?
    TASTE::ASN1_Basic_Type =>aREAL;
END SensorRate;

DATA SensorRate_Buffer_Max
END SensorRate_Buffer_Max;

DATA IMPLEMENTATION SensorRate_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type SensorRate
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (16); -- Size of the buffer
    Data_Model::Base_Type => (classifier (DataView::Stream_Element_Buffer));
END SensorRate_Buffer_Max.impl;

DATA SensorRate_Buffer
END SensorRate_Buffer;

DATA IMPLEMENTATION SensorRate_Buffer.impl
    -- Buffer to hold a marshalled data of type SensorRate
SUBCOMPONENTS
    Buffer : data SensorRate_Buffer_Max.impl;
    Length : data Base_Types::Unsigned_32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END SensorRate_Buffer.impl;

DATA Vector6d
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("/home/taste/repos/i3ds-interfaces/esrocos/types-base/asn/Eigen.asn");
    TASTE::Ada_Package_Name => "Eigen_Types";
    Deployment::ASN1_Module_Name => "Eigen-Types";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 79; suggested aligned message buffer is...
    Source_Data_Size => 80 Bytes;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "Vector6d";
    -- what kind of type is this?
    TASTE::ASN1_Basic_Type =>aSEQUENCEOF;
END Vector6d;

DATA Vector6d_Buffer_Max
END Vector6d_Buffer_Max;

DATA IMPLEMENTATION Vector6d_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type Vector6d
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (80); -- Size of the buffer
    Data_Model::Base_Type => (classifier (DataView::Stream_Element_Buffer));
END Vector6d_Buffer_Max.impl;

DATA Vector6d_Buffer
END Vector6d_Buffer;

DATA IMPLEMENTATION Vector6d_Buffer.impl
    -- Buffer to hold a marshalled data of type Vector6d
SUBCOMPONENTS
    Buffer : data Vector6d_Buffer_Max.impl;
    Length : data Base_Types::Unsigned_32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END Vector6d_Buffer.impl;

DATA PolarRegion
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("/home/taste/repos/i3ds-interfaces/i3ds/types-base/asn/Region.asn");
    TASTE::Ada_Package_Name => "Region_Types";
    Deployment::ASN1_Module_Name => "Region-Types";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 52; suggested aligned message buffer is...
    Source_Data_Size => 56 Bytes;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "PolarRegion";
    -- what kind of type is this?
    TASTE::ASN1_Basic_Type =>aSEQUENCE;
END PolarRegion;

DATA PolarRegion_Buffer_Max
END PolarRegion_Buffer_Max;

DATA IMPLEMENTATION PolarRegion_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type PolarRegion
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (56); -- Size of the buffer
    Data_Model::Base_Type => (classifier (DataView::Stream_Element_Buffer));
END PolarRegion_Buffer_Max.impl;

DATA PolarRegion_Buffer
END PolarRegion_Buffer;

DATA IMPLEMENTATION PolarRegion_Buffer.impl
    -- Buffer to hold a marshalled data of type PolarRegion
SUBCOMPONENTS
    Buffer : data PolarRegion_Buffer_Max.impl;
    Length : data Base_Types::Unsigned_32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END PolarRegion_Buffer.impl;

DATA Transform3d
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("/home/taste/repos/i3ds-interfaces/esrocos/types-base/asn/Eigen.asn");
    TASTE::Ada_Package_Name => "Eigen_Types";
    Deployment::ASN1_Module_Name => "Eigen-Types";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 210; suggested aligned message buffer is...
    Source_Data_Size => 216 Bytes;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "Transform3d";
    -- what kind of type is this?
    TASTE::ASN1_Basic_Type =>aSEQUENCEOF;
END Transform3d;

DATA Transform3d_Buffer_Max
END Transform3d_Buffer_Max;

DATA IMPLEMENTATION Transform3d_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type Transform3d
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (216); -- Size of the buffer
    Data_Model::Base_Type => (classifier (DataView::Stream_Element_Buffer));
END Transform3d_Buffer_Max.impl;

DATA Transform3d_Buffer
END Transform3d_Buffer;

DATA IMPLEMENTATION Transform3d_Buffer.impl
    -- Buffer to hold a marshalled data of type Transform3d
SUBCOMPONENTS
    Buffer : data Transform3d_Buffer_Max.impl;
    Length : data Base_Types::Unsigned_32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END Transform3d_Buffer.impl;

DATA Attribute_key_t
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("/home/taste/repos/i3ds-interfaces/i3ds/types-base/asn/SampleAttribute.asn");
    TASTE::Ada_Package_Name => "SampleAttribute_Types";
    Deployment::ASN1_Module_Name => "SampleAttribute-Types";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 20; suggested aligned message buffer is...
    Source_Data_Size => 24 Bytes;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "Attribute-key-t";
    -- what kind of type is this?
    TASTE::ASN1_Basic_Type =>aSTRING;
END Attribute_key_t;

DATA Attribute_key_t_Buffer_Max
END Attribute_key_t_Buffer_Max;

DATA IMPLEMENTATION Attribute_key_t_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type Attribute_key_t
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (24); -- Size of the buffer
    Data_Model::Base_Type => (classifier (DataView::Stream_Element_Buffer));
END Attribute_key_t_Buffer_Max.impl;

DATA Attribute_key_t_Buffer
END Attribute_key_t_Buffer;

DATA IMPLEMENTATION Attribute_key_t_Buffer.impl
    -- Buffer to hold a marshalled data of type Attribute_key_t
SUBCOMPONENTS
    Buffer : data Attribute_key_t_Buffer_Max.impl;
    Length : data Base_Types::Unsigned_32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END Attribute_key_t_Buffer.impl;

DATA Basler_ToFMeasurement
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("/home/taste/repos/i3ds-interfaces/i3ds/types-sensors/asn/Basler-ToFCamera.asn");
    TASTE::Ada_Package_Name => "Basler_ToFCamera_Types";
    Deployment::ASN1_Module_Name => "Basler-ToFCamera-Types";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 4070709; suggested aligned message buffer is...
    Source_Data_Size => 4070712 Bytes;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "Basler-ToFMeasurement";
    -- what kind of type is this?
    TASTE::ASN1_Basic_Type =>aSEQUENCE;
END Basler_ToFMeasurement;

DATA Basler_ToFMeasurement_Buffer_Max
END Basler_ToFMeasurement_Buffer_Max;

DATA IMPLEMENTATION Basler_ToFMeasurement_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type Basler_ToFMeasurement
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (4070712); -- Size of the buffer
    Data_Model::Base_Type => (classifier (DataView::Stream_Element_Buffer));
END Basler_ToFMeasurement_Buffer_Max.impl;

DATA Basler_ToFMeasurement_Buffer
END Basler_ToFMeasurement_Buffer;

DATA IMPLEMENTATION Basler_ToFMeasurement_Buffer.impl
    -- Buffer to hold a marshalled data of type Basler_ToFMeasurement
SUBCOMPONENTS
    Buffer : data Basler_ToFMeasurement_Buffer_Max.impl;
    Length : data Base_Types::Unsigned_32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END Basler_ToFMeasurement_Buffer.impl;

DATA T_Boolean
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("/home/taste/tool-inst/share/taste-types/taste-types.asn");
    TASTE::Ada_Package_Name => "TASTE_BasicTypes";
    Deployment::ASN1_Module_Name => "TASTE-BasicTypes";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 1; suggested aligned message buffer is...
    Source_Data_Size => 8 Bytes;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "T-Boolean";
    -- what kind of type is this?
    TASTE::ASN1_Basic_Type =>aBOOLEAN;
END T_Boolean;

DATA T_Boolean_Buffer_Max
END T_Boolean_Buffer_Max;

DATA IMPLEMENTATION T_Boolean_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type T_Boolean
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (8); -- Size of the buffer
    Data_Model::Base_Type => (classifier (DataView::Stream_Element_Buffer));
END T_Boolean_Buffer_Max.impl;

DATA T_Boolean_Buffer
END T_Boolean_Buffer;

DATA IMPLEMENTATION T_Boolean_Buffer.impl
    -- Buffer to hold a marshalled data of type T_Boolean
SUBCOMPONENTS
    Buffer : data T_Boolean_Buffer_Max.impl;
    Length : data Base_Types::Unsigned_32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END T_Boolean_Buffer.impl;

DATA RadarConfigResponse
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("/home/taste/repos/i3ds-interfaces/i3ds/types-base/asn/Radar.asn");
    TASTE::Ada_Package_Name => "Radar_Types";
    Deployment::ASN1_Module_Name => "Radar-Types";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 312; suggested aligned message buffer is...
    Source_Data_Size => 312 Bytes;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "RadarConfigResponse";
    -- what kind of type is this?
    TASTE::ASN1_Basic_Type =>aSEQUENCE;
END RadarConfigResponse;

DATA RadarConfigResponse_Buffer_Max
END RadarConfigResponse_Buffer_Max;

DATA IMPLEMENTATION RadarConfigResponse_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type RadarConfigResponse
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (312); -- Size of the buffer
    Data_Model::Base_Type => (classifier (DataView::Stream_Element_Buffer));
END RadarConfigResponse_Buffer_Max.impl;

DATA RadarConfigResponse_Buffer
END RadarConfigResponse_Buffer;

DATA IMPLEMENTATION RadarConfigResponse_Buffer.impl
    -- Buffer to hold a marshalled data of type RadarConfigResponse
SUBCOMPONENTS
    Buffer : data RadarConfigResponse_Buffer_Max.impl;
    Length : data Base_Types::Unsigned_32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END RadarConfigResponse_Buffer.impl;

DATA IMUMeasurement
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("/home/taste/repos/i3ds-interfaces/i3ds/types-base/asn/IMU.asn");
    TASTE::Ada_Package_Name => "IMU_Types";
    Deployment::ASN1_Module_Name => "IMU-Types";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 91; suggested aligned message buffer is...
    Source_Data_Size => 96 Bytes;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "IMUMeasurement";
    -- what kind of type is this?
    TASTE::ASN1_Basic_Type =>aSEQUENCE;
END IMUMeasurement;

DATA IMUMeasurement_Buffer_Max
END IMUMeasurement_Buffer_Max;

DATA IMPLEMENTATION IMUMeasurement_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type IMUMeasurement
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (96); -- Size of the buffer
    Data_Model::Base_Type => (classifier (DataView::Stream_Element_Buffer));
END IMUMeasurement_Buffer_Max.impl;

DATA IMUMeasurement_Buffer
END IMUMeasurement_Buffer;

DATA IMPLEMENTATION IMUMeasurement_Buffer.impl
    -- Buffer to hold a marshalled data of type IMUMeasurement
SUBCOMPONENTS
    Buffer : data IMUMeasurement_Buffer_Max.impl;
    Length : data Base_Types::Unsigned_32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END IMUMeasurement_Buffer.impl;

DATA StarTrackerConfigResponse
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("/home/taste/repos/i3ds-interfaces/i3ds/types-base/asn/StarTracker.asn");
    TASTE::Ada_Package_Name => "StarTracker_Types";
    Deployment::ASN1_Module_Name => "StarTracker-Types";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 280; suggested aligned message buffer is...
    Source_Data_Size => 280 Bytes;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "StarTrackerConfigResponse";
    -- what kind of type is this?
    TASTE::ASN1_Basic_Type =>aSEQUENCE;
END StarTrackerConfigResponse;

DATA StarTrackerConfigResponse_Buffer_Max
END StarTrackerConfigResponse_Buffer_Max;

DATA IMPLEMENTATION StarTrackerConfigResponse_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type StarTrackerConfigResponse
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (280); -- Size of the buffer
    Data_Model::Base_Type => (classifier (DataView::Stream_Element_Buffer));
END StarTrackerConfigResponse_Buffer_Max.impl;

DATA StarTrackerConfigResponse_Buffer
END StarTrackerConfigResponse_Buffer;

DATA IMPLEMENTATION StarTrackerConfigResponse_Buffer.impl
    -- Buffer to hold a marshalled data of type StarTrackerConfigResponse
SUBCOMPONENTS
    Buffer : data StarTrackerConfigResponse_Buffer_Max.impl;
    Length : data Base_Types::Unsigned_32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END StarTrackerConfigResponse_Buffer.impl;

DATA SensorGain
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("/home/taste/repos/i3ds-interfaces/i3ds/types-base/asn/Camera.asn");
    TASTE::Ada_Package_Name => "Camera_Types";
    Deployment::ASN1_Module_Name => "Camera-Types";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 13; suggested aligned message buffer is...
    Source_Data_Size => 16 Bytes;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "SensorGain";
    -- what kind of type is this?
    TASTE::ASN1_Basic_Type =>aREAL;
END SensorGain;

DATA SensorGain_Buffer_Max
END SensorGain_Buffer_Max;

DATA IMPLEMENTATION SensorGain_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type SensorGain
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (16); -- Size of the buffer
    Data_Model::Base_Type => (classifier (DataView::Stream_Element_Buffer));
END SensorGain_Buffer_Max.impl;

DATA SensorGain_Buffer
END SensorGain_Buffer;

DATA IMPLEMENTATION SensorGain_Buffer.impl
    -- Buffer to hold a marshalled data of type SensorGain
SUBCOMPONENTS
    Buffer : data SensorGain_Buffer_Max.impl;
    Length : data Base_Types::Unsigned_32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END SensorGain_Buffer.impl;

DATA ToFConfigResponse
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("/home/taste/repos/i3ds-interfaces/i3ds/types-base/asn/ToFCamera.asn");
    TASTE::Ada_Package_Name => "ToFCamera_Types";
    Deployment::ASN1_Module_Name => "ToFCamera-Types";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 272; suggested aligned message buffer is...
    Source_Data_Size => 272 Bytes;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "ToFConfigResponse";
    -- what kind of type is this?
    TASTE::ASN1_Basic_Type =>aCHOICE;
END ToFConfigResponse;

DATA ToFConfigResponse_Buffer_Max
END ToFConfigResponse_Buffer_Max;

DATA IMPLEMENTATION ToFConfigResponse_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type ToFConfigResponse
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (272); -- Size of the buffer
    Data_Model::Base_Type => (classifier (DataView::Stream_Element_Buffer));
END ToFConfigResponse_Buffer_Max.impl;

DATA ToFConfigResponse_Buffer
END ToFConfigResponse_Buffer;

DATA IMPLEMENTATION ToFConfigResponse_Buffer.impl
    -- Buffer to hold a marshalled data of type ToFConfigResponse
SUBCOMPONENTS
    Buffer : data ToFConfigResponse_Buffer_Max.impl;
    Length : data Base_Types::Unsigned_32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END ToFConfigResponse_Buffer.impl;

DATA ToFConfigRequest
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("/home/taste/repos/i3ds-interfaces/i3ds/types-base/asn/ToFCamera.asn");
    TASTE::Ada_Package_Name => "ToFCamera_Types";
    Deployment::ASN1_Module_Name => "ToFCamera-Types";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 40; suggested aligned message buffer is...
    Source_Data_Size => 40 Bytes;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "ToFConfigRequest";
    -- what kind of type is this?
    TASTE::ASN1_Basic_Type =>aCHOICE;
END ToFConfigRequest;

DATA ToFConfigRequest_Buffer_Max
END ToFConfigRequest_Buffer_Max;

DATA IMPLEMENTATION ToFConfigRequest_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type ToFConfigRequest
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (40); -- Size of the buffer
    Data_Model::Base_Type => (classifier (DataView::Stream_Element_Buffer));
END ToFConfigRequest_Buffer_Max.impl;

DATA ToFConfigRequest_Buffer
END ToFConfigRequest_Buffer;

DATA IMPLEMENTATION ToFConfigRequest_Buffer.impl
    -- Buffer to hold a marshalled data of type ToFConfigRequest
SUBCOMPONENTS
    Buffer : data ToFConfigRequest_Buffer_Max.impl;
    Length : data Base_Types::Unsigned_32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END ToFConfigRequest_Buffer.impl;

DATA T_Int16
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("/home/taste/repos/i3ds-interfaces/esrocos/types-base/asn/taste-extended.asn");
    TASTE::Ada_Package_Name => "TASTE_ExtendedTypes";
    Deployment::ASN1_Module_Name => "TASTE-ExtendedTypes";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 8; suggested aligned message buffer is...
    Source_Data_Size => 8 Bytes;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "T-Int16";
    -- what kind of type is this?
    TASTE::ASN1_Basic_Type =>aINTEGER;
END T_Int16;

DATA T_Int16_Buffer_Max
END T_Int16_Buffer_Max;

DATA IMPLEMENTATION T_Int16_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type T_Int16
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (8); -- Size of the buffer
    Data_Model::Base_Type => (classifier (DataView::Stream_Element_Buffer));
END T_Int16_Buffer_Max.impl;

DATA T_Int16_Buffer
END T_Int16_Buffer;

DATA IMPLEMENTATION T_Int16_Buffer.impl
    -- Buffer to hold a marshalled data of type T_Int16
SUBCOMPONENTS
    Buffer : data T_Int16_Buffer_Max.impl;
    Length : data Base_Types::Unsigned_32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END T_Int16_Buffer.impl;

DATA Affine3d
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("/home/taste/repos/i3ds-interfaces/esrocos/types-base/asn/Eigen.asn");
    TASTE::Ada_Package_Name => "Eigen_Types";
    Deployment::ASN1_Module_Name => "Eigen-Types";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 210; suggested aligned message buffer is...
    Source_Data_Size => 216 Bytes;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "Affine3d";
    -- what kind of type is this?
    TASTE::ASN1_Basic_Type =>aSEQUENCEOF;
END Affine3d;

DATA Affine3d_Buffer_Max
END Affine3d_Buffer_Max;

DATA IMPLEMENTATION Affine3d_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type Affine3d
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (216); -- Size of the buffer
    Data_Model::Base_Type => (classifier (DataView::Stream_Element_Buffer));
END Affine3d_Buffer_Max.impl;

DATA Affine3d_Buffer
END Affine3d_Buffer;

DATA IMPLEMENTATION Affine3d_Buffer.impl
    -- Buffer to hold a marshalled data of type Affine3d
SUBCOMPONENTS
    Buffer : data Affine3d_Buffer_Max.impl;
    Length : data Base_Types::Unsigned_32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END Affine3d_Buffer.impl;

DATA IMUConfiguration
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("/home/taste/repos/i3ds-interfaces/i3ds/types-base/asn/IMU.asn");
    TASTE::Ada_Package_Name => "IMU_Types";
    Deployment::ASN1_Module_Name => "IMU-Types";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 280; suggested aligned message buffer is...
    Source_Data_Size => 280 Bytes;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "IMUConfiguration";
    -- what kind of type is this?
    TASTE::ASN1_Basic_Type =>aSEQUENCE;
END IMUConfiguration;

DATA IMUConfiguration_Buffer_Max
END IMUConfiguration_Buffer_Max;

DATA IMPLEMENTATION IMUConfiguration_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type IMUConfiguration
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (280); -- Size of the buffer
    Data_Model::Base_Type => (classifier (DataView::Stream_Element_Buffer));
END IMUConfiguration_Buffer_Max.impl;

DATA IMUConfiguration_Buffer
END IMUConfiguration_Buffer;

DATA IMPLEMENTATION IMUConfiguration_Buffer.impl
    -- Buffer to hold a marshalled data of type IMUConfiguration
SUBCOMPONENTS
    Buffer : data IMUConfiguration_Buffer_Max.impl;
    Length : data Base_Types::Unsigned_32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END IMUConfiguration_Buffer.impl;

DATA IlluminationPattern
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("/home/taste/repos/i3ds-interfaces/i3ds/types-base/asn/Camera.asn");
    TASTE::Ada_Package_Name => "Camera_Types";
    Deployment::ASN1_Module_Name => "Camera-Types";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 8; suggested aligned message buffer is...
    Source_Data_Size => 8 Bytes;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "IlluminationPattern";
    -- what kind of type is this?
    TASTE::ASN1_Basic_Type =>aINTEGER;
END IlluminationPattern;

DATA IlluminationPattern_Buffer_Max
END IlluminationPattern_Buffer_Max;

DATA IMPLEMENTATION IlluminationPattern_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type IlluminationPattern
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (8); -- Size of the buffer
    Data_Model::Base_Type => (classifier (DataView::Stream_Element_Buffer));
END IlluminationPattern_Buffer_Max.impl;

DATA IlluminationPattern_Buffer
END IlluminationPattern_Buffer;

DATA IMPLEMENTATION IlluminationPattern_Buffer.impl
    -- Buffer to hold a marshalled data of type IlluminationPattern
SUBCOMPONENTS
    Buffer : data IlluminationPattern_Buffer_Max.impl;
    Length : data Base_Types::Unsigned_32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END IlluminationPattern_Buffer.impl;

DATA SampleValidity
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("/home/taste/repos/i3ds-interfaces/i3ds/types-base/asn/SampleAttribute.asn");
    TASTE::Ada_Package_Name => "SampleAttribute_Types";
    Deployment::ASN1_Module_Name => "SampleAttribute-Types";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 4; suggested aligned message buffer is...
    Source_Data_Size => 8 Bytes;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "SampleValidity";
    -- what kind of type is this?
    TASTE::ASN1_Basic_Type =>aENUMERATED;
END SampleValidity;

DATA SampleValidity_Buffer_Max
END SampleValidity_Buffer_Max;

DATA IMPLEMENTATION SampleValidity_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type SampleValidity
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (8); -- Size of the buffer
    Data_Model::Base_Type => (classifier (DataView::Stream_Element_Buffer));
END SampleValidity_Buffer_Max.impl;

DATA SampleValidity_Buffer
END SampleValidity_Buffer;

DATA IMPLEMENTATION SampleValidity_Buffer.impl
    -- Buffer to hold a marshalled data of type SampleValidity
SUBCOMPONENTS
    Buffer : data SampleValidity_Buffer_Max.impl;
    Length : data Base_Types::Unsigned_32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END SampleValidity_Buffer.impl;

DATA SensorStatus
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("/home/taste/repos/i3ds-interfaces/i3ds/types-base/asn/SensorSuite.asn");
    TASTE::Ada_Package_Name => "SensorSuite_Types";
    Deployment::ASN1_Module_Name => "SensorSuite-Types";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 296; suggested aligned message buffer is...
    Source_Data_Size => 296 Bytes;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "SensorStatus";
    -- what kind of type is this?
    TASTE::ASN1_Basic_Type =>aSEQUENCE;
END SensorStatus;

DATA SensorStatus_Buffer_Max
END SensorStatus_Buffer_Max;

DATA IMPLEMENTATION SensorStatus_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type SensorStatus
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (296); -- Size of the buffer
    Data_Model::Base_Type => (classifier (DataView::Stream_Element_Buffer));
END SensorStatus_Buffer_Max.impl;

DATA SensorStatus_Buffer
END SensorStatus_Buffer;

DATA IMPLEMENTATION SensorStatus_Buffer.impl
    -- Buffer to hold a marshalled data of type SensorStatus
SUBCOMPONENTS
    Buffer : data SensorStatus_Buffer_Max.impl;
    Length : data Base_Types::Unsigned_32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END SensorStatus_Buffer.impl;

DATA T_UInt16
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("/home/taste/repos/i3ds-interfaces/esrocos/types-base/asn/taste-extended.asn");
    TASTE::Ada_Package_Name => "TASTE_ExtendedTypes";
    Deployment::ASN1_Module_Name => "TASTE-ExtendedTypes";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 8; suggested aligned message buffer is...
    Source_Data_Size => 8 Bytes;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "T-UInt16";
    -- what kind of type is this?
    TASTE::ASN1_Basic_Type =>aINTEGER;
END T_UInt16;

DATA T_UInt16_Buffer_Max
END T_UInt16_Buffer_Max;

DATA IMPLEMENTATION T_UInt16_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type T_UInt16
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (8); -- Size of the buffer
    Data_Model::Base_Type => (classifier (DataView::Stream_Element_Buffer));
END T_UInt16_Buffer_Max.impl;

DATA T_UInt16_Buffer
END T_UInt16_Buffer;

DATA IMPLEMENTATION T_UInt16_Buffer.impl
    -- Buffer to hold a marshalled data of type T_UInt16
SUBCOMPONENTS
    Buffer : data T_UInt16_Buffer_Max.impl;
    Length : data Base_Types::Unsigned_32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END T_UInt16_Buffer.impl;

DATA T_String
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("/home/taste/repos/i3ds-interfaces/esrocos/types-base/asn/taste-extended.asn");
    TASTE::Ada_Package_Name => "TASTE_ExtendedTypes";
    Deployment::ASN1_Module_Name => "TASTE-ExtendedTypes";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 260; suggested aligned message buffer is...
    Source_Data_Size => 264 Bytes;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "T-String";
    -- what kind of type is this?
    TASTE::ASN1_Basic_Type =>aSTRING;
END T_String;

DATA T_String_Buffer_Max
END T_String_Buffer_Max;

DATA IMPLEMENTATION T_String_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type T_String
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (264); -- Size of the buffer
    Data_Model::Base_Type => (classifier (DataView::Stream_Element_Buffer));
END T_String_Buffer_Max.impl;

DATA T_String_Buffer
END T_String_Buffer;

DATA IMPLEMENTATION T_String_Buffer.impl
    -- Buffer to hold a marshalled data of type T_String
SUBCOMPONENTS
    Buffer : data T_String_Buffer_Max.impl;
    Length : data Base_Types::Unsigned_32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END T_String_Buffer.impl;

DATA T_Double
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("/home/taste/repos/i3ds-interfaces/esrocos/types-base/asn/taste-extended.asn");
    TASTE::Ada_Package_Name => "TASTE_ExtendedTypes";
    Deployment::ASN1_Module_Name => "TASTE-ExtendedTypes";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 13; suggested aligned message buffer is...
    Source_Data_Size => 16 Bytes;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "T-Double";
    -- what kind of type is this?
    TASTE::ASN1_Basic_Type =>aREAL;
END T_Double;

DATA T_Double_Buffer_Max
END T_Double_Buffer_Max;

DATA IMPLEMENTATION T_Double_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type T_Double
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (16); -- Size of the buffer
    Data_Model::Base_Type => (classifier (DataView::Stream_Element_Buffer));
END T_Double_Buffer_Max.impl;

DATA T_Double_Buffer
END T_Double_Buffer;

DATA IMPLEMENTATION T_Double_Buffer.impl
    -- Buffer to hold a marshalled data of type T_Double
SUBCOMPONENTS
    Buffer : data T_Double_Buffer_Max.impl;
    Length : data Base_Types::Unsigned_32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END T_Double_Buffer.impl;

DATA Vector4d
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("/home/taste/repos/i3ds-interfaces/esrocos/types-base/asn/Eigen.asn");
    TASTE::Ada_Package_Name => "Eigen_Types";
    Deployment::ASN1_Module_Name => "Eigen-Types";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 53; suggested aligned message buffer is...
    Source_Data_Size => 56 Bytes;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "Vector4d";
    -- what kind of type is this?
    TASTE::ASN1_Basic_Type =>aSEQUENCEOF;
END Vector4d;

DATA Vector4d_Buffer_Max
END Vector4d_Buffer_Max;

DATA IMPLEMENTATION Vector4d_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type Vector4d
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (56); -- Size of the buffer
    Data_Model::Base_Type => (classifier (DataView::Stream_Element_Buffer));
END Vector4d_Buffer_Max.impl;

DATA Vector4d_Buffer
END Vector4d_Buffer;

DATA IMPLEMENTATION Vector4d_Buffer.impl
    -- Buffer to hold a marshalled data of type Vector4d
SUBCOMPONENTS
    Buffer : data Vector4d_Buffer_Max.impl;
    Length : data Base_Types::Unsigned_32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END Vector4d_Buffer.impl;

DATA Matrix4d
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("/home/taste/repos/i3ds-interfaces/esrocos/types-base/asn/Eigen.asn");
    TASTE::Ada_Package_Name => "Eigen_Types";
    Deployment::ASN1_Module_Name => "Eigen-Types";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 210; suggested aligned message buffer is...
    Source_Data_Size => 216 Bytes;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "Matrix4d";
    -- what kind of type is this?
    TASTE::ASN1_Basic_Type =>aSEQUENCEOF;
END Matrix4d;

DATA Matrix4d_Buffer_Max
END Matrix4d_Buffer_Max;

DATA IMPLEMENTATION Matrix4d_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type Matrix4d
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (216); -- Size of the buffer
    Data_Model::Base_Type => (classifier (DataView::Stream_Element_Buffer));
END Matrix4d_Buffer_Max.impl;

DATA Matrix4d_Buffer
END Matrix4d_Buffer;

DATA IMPLEMENTATION Matrix4d_Buffer.impl
    -- Buffer to hold a marshalled data of type Matrix4d
SUBCOMPONENTS
    Buffer : data Matrix4d_Buffer_Max.impl;
    Length : data Base_Types::Unsigned_32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END Matrix4d_Buffer.impl;

DATA Depth_validity_t
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("/home/taste/repos/i3ds-interfaces/i3ds/types-base/asn/DepthMap.asn");
    TASTE::Ada_Package_Name => "DepthMap_Types";
    Deployment::ASN1_Module_Name => "DepthMap-Types";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 4; suggested aligned message buffer is...
    Source_Data_Size => 8 Bytes;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "Depth-validity-t";
    -- what kind of type is this?
    TASTE::ASN1_Basic_Type =>aENUMERATED;
END Depth_validity_t;

DATA Depth_validity_t_Buffer_Max
END Depth_validity_t_Buffer_Max;

DATA IMPLEMENTATION Depth_validity_t_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type Depth_validity_t
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (8); -- Size of the buffer
    Data_Model::Base_Type => (classifier (DataView::Stream_Element_Buffer));
END Depth_validity_t_Buffer_Max.impl;

DATA Depth_validity_t_Buffer
END Depth_validity_t_Buffer;

DATA IMPLEMENTATION Depth_validity_t_Buffer.impl
    -- Buffer to hold a marshalled data of type Depth_validity_t
SUBCOMPONENTS
    Buffer : data Depth_validity_t_Buffer_Max.impl;
    Length : data Base_Types::Unsigned_32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END Depth_validity_t_Buffer.impl;

DATA Vector2d
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("/home/taste/repos/i3ds-interfaces/esrocos/types-base/asn/Eigen.asn");
    TASTE::Ada_Package_Name => "Eigen_Types";
    Deployment::ASN1_Module_Name => "Eigen-Types";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 40; suggested aligned message buffer is...
    Source_Data_Size => 40 Bytes;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "Vector2d";
    -- what kind of type is this?
    TASTE::ASN1_Basic_Type =>aSEQUENCEOF;
END Vector2d;

DATA Vector2d_Buffer_Max
END Vector2d_Buffer_Max;

DATA IMPLEMENTATION Vector2d_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type Vector2d
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (40); -- Size of the buffer
    Data_Model::Base_Type => (classifier (DataView::Stream_Element_Buffer));
END Vector2d_Buffer_Max.impl;

DATA Vector2d_Buffer
END Vector2d_Buffer;

DATA IMPLEMENTATION Vector2d_Buffer.impl
    -- Buffer to hold a marshalled data of type Vector2d
SUBCOMPONENTS
    Buffer : data Vector2d_Buffer_Max.impl;
    Length : data Base_Types::Unsigned_32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END Vector2d_Buffer.impl;

DATA Beamagine_LIDARMeasurement
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("/home/taste/repos/i3ds-interfaces/i3ds/types-sensors/asn/Beamagine-LIDAR.asn");
    TASTE::Ada_Package_Name => "Beamagine_LIDAR_Types";
    Deployment::ASN1_Module_Name => "Beamagine-LIDAR-Types";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 6280344; suggested aligned message buffer is...
    Source_Data_Size => 6280344 Bytes;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "Beamagine-LIDARMeasurement";
    -- what kind of type is this?
    TASTE::ASN1_Basic_Type =>aSEQUENCE;
END Beamagine_LIDARMeasurement;

DATA Beamagine_LIDARMeasurement_Buffer_Max
END Beamagine_LIDARMeasurement_Buffer_Max;

DATA IMPLEMENTATION Beamagine_LIDARMeasurement_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type Beamagine_LIDARMeasurement
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (6280344); -- Size of the buffer
    Data_Model::Base_Type => (classifier (DataView::Stream_Element_Buffer));
END Beamagine_LIDARMeasurement_Buffer_Max.impl;

DATA Beamagine_LIDARMeasurement_Buffer
END Beamagine_LIDARMeasurement_Buffer;

DATA IMPLEMENTATION Beamagine_LIDARMeasurement_Buffer.impl
    -- Buffer to hold a marshalled data of type Beamagine_LIDARMeasurement
SUBCOMPONENTS
    Buffer : data Beamagine_LIDARMeasurement_Buffer_Max.impl;
    Length : data Base_Types::Unsigned_32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END Beamagine_LIDARMeasurement_Buffer.impl;

DATA AngleAxisd
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("/home/taste/repos/i3ds-interfaces/esrocos/types-base/asn/Eigen.asn");
    TASTE::Ada_Package_Name => "Eigen_Types";
    Deployment::ASN1_Module_Name => "Eigen-Types";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 53; suggested aligned message buffer is...
    Source_Data_Size => 56 Bytes;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "AngleAxisd";
    -- what kind of type is this?
    TASTE::ASN1_Basic_Type =>aSEQUENCEOF;
END AngleAxisd;

DATA AngleAxisd_Buffer_Max
END AngleAxisd_Buffer_Max;

DATA IMPLEMENTATION AngleAxisd_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type AngleAxisd
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (56); -- Size of the buffer
    Data_Model::Base_Type => (classifier (DataView::Stream_Element_Buffer));
END AngleAxisd_Buffer_Max.impl;

DATA AngleAxisd_Buffer
END AngleAxisd_Buffer;

DATA IMPLEMENTATION AngleAxisd_Buffer.impl
    -- Buffer to hold a marshalled data of type AngleAxisd
SUBCOMPONENTS
    Buffer : data AngleAxisd_Buffer_Max.impl;
    Length : data Base_Types::Unsigned_32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END AngleAxisd_Buffer.impl;

DATA StarTrackerConfigRequest
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("/home/taste/repos/i3ds-interfaces/i3ds/types-base/asn/StarTracker.asn");
    TASTE::Ada_Package_Name => "StarTracker_Types";
    Deployment::ASN1_Module_Name => "StarTracker-Types";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 16; suggested aligned message buffer is...
    Source_Data_Size => 16 Bytes;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "StarTrackerConfigRequest";
    -- what kind of type is this?
    TASTE::ASN1_Basic_Type =>aCHOICE;
END StarTrackerConfigRequest;

DATA StarTrackerConfigRequest_Buffer_Max
END StarTrackerConfigRequest_Buffer_Max;

DATA IMPLEMENTATION StarTrackerConfigRequest_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type StarTrackerConfigRequest
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (16); -- Size of the buffer
    Data_Model::Base_Type => (classifier (DataView::Stream_Element_Buffer));
END StarTrackerConfigRequest_Buffer_Max.impl;

DATA StarTrackerConfigRequest_Buffer
END StarTrackerConfigRequest_Buffer;

DATA IMPLEMENTATION StarTrackerConfigRequest_Buffer.impl
    -- Buffer to hold a marshalled data of type StarTrackerConfigRequest
SUBCOMPONENTS
    Buffer : data StarTrackerConfigRequest_Buffer_Max.impl;
    Length : data Base_Types::Unsigned_32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END StarTrackerConfigRequest_Buffer.impl;

DATA FlashStrength
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("/home/taste/repos/i3ds-interfaces/i3ds/types-base/asn/Camera.asn");
    TASTE::Ada_Package_Name => "Camera_Types";
    Deployment::ASN1_Module_Name => "Camera-Types";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 13; suggested aligned message buffer is...
    Source_Data_Size => 16 Bytes;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "FlashStrength";
    -- what kind of type is this?
    TASTE::ASN1_Basic_Type =>aREAL;
END FlashStrength;

DATA FlashStrength_Buffer_Max
END FlashStrength_Buffer_Max;

DATA IMPLEMENTATION FlashStrength_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type FlashStrength
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (16); -- Size of the buffer
    Data_Model::Base_Type => (classifier (DataView::Stream_Element_Buffer));
END FlashStrength_Buffer_Max.impl;

DATA FlashStrength_Buffer
END FlashStrength_Buffer;

DATA IMPLEMENTATION FlashStrength_Buffer.impl
    -- Buffer to hold a marshalled data of type FlashStrength
SUBCOMPONENTS
    Buffer : data FlashStrength_Buffer_Max.impl;
    Length : data Base_Types::Unsigned_32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END FlashStrength_Buffer.impl;

DATA LIDARConfigResponse
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("/home/taste/repos/i3ds-interfaces/i3ds/types-base/asn/LIDAR.asn");
    TASTE::Ada_Package_Name => "LIDAR_Types";
    Deployment::ASN1_Module_Name => "LIDAR-Types";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 323; suggested aligned message buffer is...
    Source_Data_Size => 328 Bytes;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "LIDARConfigResponse";
    -- what kind of type is this?
    TASTE::ASN1_Basic_Type =>aSEQUENCE;
END LIDARConfigResponse;

DATA LIDARConfigResponse_Buffer_Max
END LIDARConfigResponse_Buffer_Max;

DATA IMPLEMENTATION LIDARConfigResponse_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type LIDARConfigResponse
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (328); -- Size of the buffer
    Data_Model::Base_Type => (classifier (DataView::Stream_Element_Buffer));
END LIDARConfigResponse_Buffer_Max.impl;

DATA LIDARConfigResponse_Buffer
END LIDARConfigResponse_Buffer;

DATA IMPLEMENTATION LIDARConfigResponse_Buffer.impl
    -- Buffer to hold a marshalled data of type LIDARConfigResponse
SUBCOMPONENTS
    Buffer : data LIDARConfigResponse_Buffer_Max.impl;
    Length : data Base_Types::Unsigned_32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END LIDARConfigResponse_Buffer.impl;

DATA CameraConfigRequest
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("/home/taste/repos/i3ds-interfaces/i3ds/types-base/asn/Camera.asn");
    TASTE::Ada_Package_Name => "Camera_Types";
    Deployment::ASN1_Module_Name => "Camera-Types";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 40; suggested aligned message buffer is...
    Source_Data_Size => 40 Bytes;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "CameraConfigRequest";
    -- what kind of type is this?
    TASTE::ASN1_Basic_Type =>aCHOICE;
END CameraConfigRequest;

DATA CameraConfigRequest_Buffer_Max
END CameraConfigRequest_Buffer_Max;

DATA IMPLEMENTATION CameraConfigRequest_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type CameraConfigRequest
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (40); -- Size of the buffer
    Data_Model::Base_Type => (classifier (DataView::Stream_Element_Buffer));
END CameraConfigRequest_Buffer_Max.impl;

DATA CameraConfigRequest_Buffer
END CameraConfigRequest_Buffer;

DATA IMPLEMENTATION CameraConfigRequest_Buffer.impl
    -- Buffer to hold a marshalled data of type CameraConfigRequest
SUBCOMPONENTS
    Buffer : data CameraConfigRequest_Buffer_Max.impl;
    Length : data Base_Types::Unsigned_32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END CameraConfigRequest_Buffer.impl;

DATA Frame_mode_t
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("/home/taste/repos/i3ds-interfaces/i3ds/types-base/asn/Frame.asn");
    TASTE::Ada_Package_Name => "Frame_Types";
    Deployment::ASN1_Module_Name => "Frame-Types";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 4; suggested aligned message buffer is...
    Source_Data_Size => 8 Bytes;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "Frame-mode-t";
    -- what kind of type is this?
    TASTE::ASN1_Basic_Type =>aENUMERATED;
END Frame_mode_t;

DATA Frame_mode_t_Buffer_Max
END Frame_mode_t_Buffer_Max;

DATA IMPLEMENTATION Frame_mode_t_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type Frame_mode_t
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (8); -- Size of the buffer
    Data_Model::Base_Type => (classifier (DataView::Stream_Element_Buffer));
END Frame_mode_t_Buffer_Max.impl;

DATA Frame_mode_t_Buffer
END Frame_mode_t_Buffer;

DATA IMPLEMENTATION Frame_mode_t_Buffer.impl
    -- Buffer to hold a marshalled data of type Frame_mode_t
SUBCOMPONENTS
    Buffer : data Frame_mode_t_Buffer_Max.impl;
    Length : data Base_Types::Unsigned_32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END Frame_mode_t_Buffer.impl;

DATA Temperature
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("/home/taste/repos/i3ds-interfaces/esrocos/types-base/asn/Temperature.asn");
    TASTE::Ada_Package_Name => "Temperature_Types";
    Deployment::ASN1_Module_Name => "Temperature-Types";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 13; suggested aligned message buffer is...
    Source_Data_Size => 16 Bytes;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "Temperature";
    -- what kind of type is this?
    TASTE::ASN1_Basic_Type =>aSEQUENCE;
END Temperature;

DATA Temperature_Buffer_Max
END Temperature_Buffer_Max;

DATA IMPLEMENTATION Temperature_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type Temperature
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (16); -- Size of the buffer
    Data_Model::Base_Type => (classifier (DataView::Stream_Element_Buffer));
END Temperature_Buffer_Max.impl;

DATA Temperature_Buffer
END Temperature_Buffer;

DATA IMPLEMENTATION Temperature_Buffer.impl
    -- Buffer to hold a marshalled data of type Temperature
SUBCOMPONENTS
    Buffer : data Temperature_Buffer_Max.impl;
    Length : data Base_Types::Unsigned_32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END Temperature_Buffer.impl;

DATA T_Int64
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("/home/taste/repos/i3ds-interfaces/esrocos/types-base/asn/taste-extended.asn");
    TASTE::Ada_Package_Name => "TASTE_ExtendedTypes";
    Deployment::ASN1_Module_Name => "TASTE-ExtendedTypes";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 8; suggested aligned message buffer is...
    Source_Data_Size => 8 Bytes;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "T-Int64";
    -- what kind of type is this?
    TASTE::ASN1_Basic_Type =>aINTEGER;
END T_Int64;

DATA T_Int64_Buffer_Max
END T_Int64_Buffer_Max;

DATA IMPLEMENTATION T_Int64_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type T_Int64
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (8); -- Size of the buffer
    Data_Model::Base_Type => (classifier (DataView::Stream_Element_Buffer));
END T_Int64_Buffer_Max.impl;

DATA T_Int64_Buffer
END T_Int64_Buffer;

DATA IMPLEMENTATION T_Int64_Buffer.impl
    -- Buffer to hold a marshalled data of type T_Int64
SUBCOMPONENTS
    Buffer : data T_Int64_Buffer_Max.impl;
    Length : data Base_Types::Unsigned_32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END T_Int64_Buffer.impl;

DATA Matrix3d
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("/home/taste/repos/i3ds-interfaces/esrocos/types-base/asn/Eigen.asn");
    TASTE::Ada_Package_Name => "Eigen_Types";
    Deployment::ASN1_Module_Name => "Eigen-Types";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 118; suggested aligned message buffer is...
    Source_Data_Size => 120 Bytes;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "Matrix3d";
    -- what kind of type is this?
    TASTE::ASN1_Basic_Type =>aSEQUENCEOF;
END Matrix3d;

DATA Matrix3d_Buffer_Max
END Matrix3d_Buffer_Max;

DATA IMPLEMENTATION Matrix3d_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type Matrix3d
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (120); -- Size of the buffer
    Data_Model::Base_Type => (classifier (DataView::Stream_Element_Buffer));
END Matrix3d_Buffer_Max.impl;

DATA Matrix3d_Buffer
END Matrix3d_Buffer;

DATA IMPLEMENTATION Matrix3d_Buffer.impl
    -- Buffer to hold a marshalled data of type Matrix3d
SUBCOMPONENTS
    Buffer : data Matrix3d_Buffer_Max.impl;
    Length : data Base_Types::Unsigned_32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END Matrix3d_Buffer.impl;

DATA RadarConfigRequest
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("/home/taste/repos/i3ds-interfaces/i3ds/types-base/asn/Radar.asn");
    TASTE::Ada_Package_Name => "Radar_Types";
    Deployment::ASN1_Module_Name => "Radar-Types";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 40; suggested aligned message buffer is...
    Source_Data_Size => 40 Bytes;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "RadarConfigRequest";
    -- what kind of type is this?
    TASTE::ASN1_Basic_Type =>aCHOICE;
END RadarConfigRequest;

DATA RadarConfigRequest_Buffer_Max
END RadarConfigRequest_Buffer_Max;

DATA IMPLEMENTATION RadarConfigRequest_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type RadarConfigRequest
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (40); -- Size of the buffer
    Data_Model::Base_Type => (classifier (DataView::Stream_Element_Buffer));
END RadarConfigRequest_Buffer_Max.impl;

DATA RadarConfigRequest_Buffer
END RadarConfigRequest_Buffer;

DATA IMPLEMENTATION RadarConfigRequest_Buffer.impl
    -- Buffer to hold a marshalled data of type RadarConfigRequest
SUBCOMPONENTS
    Buffer : data RadarConfigRequest_Buffer_Max.impl;
    Length : data Base_Types::Unsigned_32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END RadarConfigRequest_Buffer.impl;

DATA Quaterniond
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("/home/taste/repos/i3ds-interfaces/esrocos/types-base/asn/Eigen.asn");
    TASTE::Ada_Package_Name => "Eigen_Types";
    Deployment::ASN1_Module_Name => "Eigen-Types";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 53; suggested aligned message buffer is...
    Source_Data_Size => 56 Bytes;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "Quaterniond";
    -- what kind of type is this?
    TASTE::ASN1_Basic_Type =>aSEQUENCEOF;
END Quaterniond;

DATA Quaterniond_Buffer_Max
END Quaterniond_Buffer_Max;

DATA IMPLEMENTATION Quaterniond_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type Quaterniond
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (56); -- Size of the buffer
    Data_Model::Base_Type => (classifier (DataView::Stream_Element_Buffer));
END Quaterniond_Buffer_Max.impl;

DATA Quaterniond_Buffer
END Quaterniond_Buffer;

DATA IMPLEMENTATION Quaterniond_Buffer.impl
    -- Buffer to hold a marshalled data of type Quaterniond
SUBCOMPONENTS
    Buffer : data Quaterniond_Buffer_Max.impl;
    Length : data Base_Types::Unsigned_32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END Quaterniond_Buffer.impl;

DATA SensorState
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("/home/taste/repos/i3ds-interfaces/i3ds/types-base/asn/SensorSuite.asn");
    TASTE::Ada_Package_Name => "SensorSuite_Types";
    Deployment::ASN1_Module_Name => "SensorSuite-Types";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 4; suggested aligned message buffer is...
    Source_Data_Size => 8 Bytes;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "SensorState";
    -- what kind of type is this?
    TASTE::ASN1_Basic_Type =>aENUMERATED;
END SensorState;

DATA SensorState_Buffer_Max
END SensorState_Buffer_Max;

DATA IMPLEMENTATION SensorState_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type SensorState
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (8); -- Size of the buffer
    Data_Model::Base_Type => (classifier (DataView::Stream_Element_Buffer));
END SensorState_Buffer_Max.impl;

DATA SensorState_Buffer
END SensorState_Buffer;

DATA IMPLEMENTATION SensorState_Buffer.impl
    -- Buffer to hold a marshalled data of type SensorState
SUBCOMPONENTS
    Buffer : data SensorState_Buffer_Max.impl;
    Length : data Base_Types::Unsigned_32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END SensorState_Buffer.impl;

DATA Cosine_HRCameraMeasurement
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("/home/taste/repos/i3ds-interfaces/i3ds/types-sensors/asn/Cosine-HRCamera.asn");
    TASTE::Ada_Package_Name => "Cosine_HRCamera_Types";
    Deployment::ASN1_Module_Name => "Cosine-HRCamera-Types";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 8389880; suggested aligned message buffer is...
    Source_Data_Size => 8389880 Bytes;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "Cosine-HRCameraMeasurement";
    -- what kind of type is this?
    TASTE::ASN1_Basic_Type =>aSEQUENCE;
END Cosine_HRCameraMeasurement;

DATA Cosine_HRCameraMeasurement_Buffer_Max
END Cosine_HRCameraMeasurement_Buffer_Max;

DATA IMPLEMENTATION Cosine_HRCameraMeasurement_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type Cosine_HRCameraMeasurement
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (8389880); -- Size of the buffer
    Data_Model::Base_Type => (classifier (DataView::Stream_Element_Buffer));
END Cosine_HRCameraMeasurement_Buffer_Max.impl;

DATA Cosine_HRCameraMeasurement_Buffer
END Cosine_HRCameraMeasurement_Buffer;

DATA IMPLEMENTATION Cosine_HRCameraMeasurement_Buffer.impl
    -- Buffer to hold a marshalled data of type Cosine_HRCameraMeasurement
SUBCOMPONENTS
    Buffer : data Cosine_HRCameraMeasurement_Buffer_Max.impl;
    Length : data Base_Types::Unsigned_32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END Cosine_HRCameraMeasurement_Buffer.impl;

DATA Isometry3d
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("/home/taste/repos/i3ds-interfaces/esrocos/types-base/asn/Eigen.asn");
    TASTE::Ada_Package_Name => "Eigen_Types";
    Deployment::ASN1_Module_Name => "Eigen-Types";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 210; suggested aligned message buffer is...
    Source_Data_Size => 216 Bytes;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "Isometry3d";
    -- what kind of type is this?
    TASTE::ASN1_Basic_Type =>aSEQUENCEOF;
END Isometry3d;

DATA Isometry3d_Buffer_Max
END Isometry3d_Buffer_Max;

DATA IMPLEMENTATION Isometry3d_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type Isometry3d
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (216); -- Size of the buffer
    Data_Model::Base_Type => (classifier (DataView::Stream_Element_Buffer));
END Isometry3d_Buffer_Max.impl;

DATA Isometry3d_Buffer
END Isometry3d_Buffer;

DATA IMPLEMENTATION Isometry3d_Buffer.impl
    -- Buffer to hold a marshalled data of type Isometry3d
SUBCOMPONENTS
    Buffer : data Isometry3d_Buffer_Max.impl;
    Length : data Base_Types::Unsigned_32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END Isometry3d_Buffer.impl;

DATA SampleMode_t
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("/home/taste/repos/i3ds-interfaces/i3ds/types-base/asn/Analog.asn");
    TASTE::Ada_Package_Name => "Analog_Types";
    Deployment::ASN1_Module_Name => "Analog-Types";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 4; suggested aligned message buffer is...
    Source_Data_Size => 8 Bytes;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "SampleMode-t";
    -- what kind of type is this?
    TASTE::ASN1_Basic_Type =>aENUMERATED;
END SampleMode_t;

DATA SampleMode_t_Buffer_Max
END SampleMode_t_Buffer_Max;

DATA IMPLEMENTATION SampleMode_t_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type SampleMode_t
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (8); -- Size of the buffer
    Data_Model::Base_Type => (classifier (DataView::Stream_Element_Buffer));
END SampleMode_t_Buffer_Max.impl;

DATA SampleMode_t_Buffer
END SampleMode_t_Buffer;

DATA IMPLEMENTATION SampleMode_t_Buffer.impl
    -- Buffer to hold a marshalled data of type SampleMode_t
SUBCOMPONENTS
    Buffer : data SampleMode_t_Buffer_Max.impl;
    Length : data Base_Types::Unsigned_32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END SampleMode_t_Buffer.impl;

DATA VectorXd
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("/home/taste/repos/i3ds-interfaces/esrocos/types-base/asn/Eigen.asn");
    TASTE::Ada_Package_Name => "Eigen_Types";
    Deployment::ASN1_Module_Name => "Eigen-Types";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 1301; suggested aligned message buffer is...
    Source_Data_Size => 1304 Bytes;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "VectorXd";
    -- what kind of type is this?
    TASTE::ASN1_Basic_Type =>aSEQUENCEOF;
END VectorXd;

DATA VectorXd_Buffer_Max
END VectorXd_Buffer_Max;

DATA IMPLEMENTATION VectorXd_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type VectorXd
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (1304); -- Size of the buffer
    Data_Model::Base_Type => (classifier (DataView::Stream_Element_Buffer));
END VectorXd_Buffer_Max.impl;

DATA VectorXd_Buffer
END VectorXd_Buffer;

DATA IMPLEMENTATION VectorXd_Buffer.impl
    -- Buffer to hold a marshalled data of type VectorXd
SUBCOMPONENTS
    Buffer : data VectorXd_Buffer_Max.impl;
    Length : data Base_Types::Unsigned_32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END VectorXd_Buffer.impl;

DATA Cosine_TIRMeasurement
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("/home/taste/repos/i3ds-interfaces/i3ds/types-sensors/asn/Cosine-TIRCamera.asn");
    TASTE::Ada_Package_Name => "Cosine_TIRCamera_Types";
    Deployment::ASN1_Module_Name => "Cosine-TIRCamera-Types";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 614776; suggested aligned message buffer is...
    Source_Data_Size => 614776 Bytes;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "Cosine-TIRMeasurement";
    -- what kind of type is this?
    TASTE::ASN1_Basic_Type =>aSEQUENCE;
END Cosine_TIRMeasurement;

DATA Cosine_TIRMeasurement_Buffer_Max
END Cosine_TIRMeasurement_Buffer_Max;

DATA IMPLEMENTATION Cosine_TIRMeasurement_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type Cosine_TIRMeasurement
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (614776); -- Size of the buffer
    Data_Model::Base_Type => (classifier (DataView::Stream_Element_Buffer));
END Cosine_TIRMeasurement_Buffer_Max.impl;

DATA Cosine_TIRMeasurement_Buffer
END Cosine_TIRMeasurement_Buffer;

DATA IMPLEMENTATION Cosine_TIRMeasurement_Buffer.impl
    -- Buffer to hold a marshalled data of type Cosine_TIRMeasurement
SUBCOMPONENTS
    Buffer : data Cosine_TIRMeasurement_Buffer_Max.impl;
    Length : data Base_Types::Unsigned_32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END Cosine_TIRMeasurement_Buffer.impl;

DATA T_Float
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("/home/taste/repos/i3ds-interfaces/esrocos/types-base/asn/taste-extended.asn");
    TASTE::Ada_Package_Name => "TASTE_ExtendedTypes";
    Deployment::ASN1_Module_Name => "TASTE-ExtendedTypes";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 13; suggested aligned message buffer is...
    Source_Data_Size => 16 Bytes;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "T-Float";
    -- what kind of type is this?
    TASTE::ASN1_Basic_Type =>aREAL;
END T_Float;

DATA T_Float_Buffer_Max
END T_Float_Buffer_Max;

DATA IMPLEMENTATION T_Float_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type T_Float
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (16); -- Size of the buffer
    Data_Model::Base_Type => (classifier (DataView::Stream_Element_Buffer));
END T_Float_Buffer_Max.impl;

DATA T_Float_Buffer
END T_Float_Buffer;

DATA IMPLEMENTATION T_Float_Buffer.impl
    -- Buffer to hold a marshalled data of type T_Float
SUBCOMPONENTS
    Buffer : data T_Float_Buffer_Max.impl;
    Length : data Base_Types::Unsigned_32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END T_Float_Buffer.impl;

DATA Vector3d
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("/home/taste/repos/i3ds-interfaces/esrocos/types-base/asn/Eigen.asn");
    TASTE::Ada_Package_Name => "Eigen_Types";
    Deployment::ASN1_Module_Name => "Eigen-Types";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 40; suggested aligned message buffer is...
    Source_Data_Size => 40 Bytes;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "Vector3d";
    -- what kind of type is this?
    TASTE::ASN1_Basic_Type =>aSEQUENCEOF;
END Vector3d;

DATA Vector3d_Buffer_Max
END Vector3d_Buffer_Max;

DATA IMPLEMENTATION Vector3d_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type Vector3d
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (40); -- Size of the buffer
    Data_Model::Base_Type => (classifier (DataView::Stream_Element_Buffer));
END Vector3d_Buffer_Max.impl;

DATA Vector3d_Buffer
END Vector3d_Buffer;

DATA IMPLEMENTATION Vector3d_Buffer.impl
    -- Buffer to hold a marshalled data of type Vector3d
SUBCOMPONENTS
    Buffer : data Vector3d_Buffer_Max.impl;
    Length : data Base_Types::Unsigned_32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END Vector3d_Buffer.impl;

DATA MatrixXd
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("/home/taste/repos/i3ds-interfaces/esrocos/types-base/asn/Eigen.asn");
    TASTE::Ada_Package_Name => "Eigen_Types";
    Deployment::ASN1_Module_Name => "Eigen-Types";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 5214; suggested aligned message buffer is...
    Source_Data_Size => 5216 Bytes;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "MatrixXd";
    -- what kind of type is this?
    TASTE::ASN1_Basic_Type =>aSEQUENCEOF;
END MatrixXd;

DATA MatrixXd_Buffer_Max
END MatrixXd_Buffer_Max;

DATA IMPLEMENTATION MatrixXd_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type MatrixXd
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (5216); -- Size of the buffer
    Data_Model::Base_Type => (classifier (DataView::Stream_Element_Buffer));
END MatrixXd_Buffer_Max.impl;

DATA MatrixXd_Buffer
END MatrixXd_Buffer;

DATA IMPLEMENTATION MatrixXd_Buffer.impl
    -- Buffer to hold a marshalled data of type MatrixXd
SUBCOMPONENTS
    Buffer : data MatrixXd_Buffer_Max.impl;
    Length : data Base_Types::Unsigned_32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END MatrixXd_Buffer.impl;

DATA StateCommand
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("/home/taste/repos/i3ds-interfaces/i3ds/types-base/asn/SensorSuite.asn");
    TASTE::Ada_Package_Name => "SensorSuite_Types";
    Deployment::ASN1_Module_Name => "SensorSuite-Types";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 4; suggested aligned message buffer is...
    Source_Data_Size => 8 Bytes;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "StateCommand";
    -- what kind of type is this?
    TASTE::ASN1_Basic_Type =>aENUMERATED;
END StateCommand;

DATA StateCommand_Buffer_Max
END StateCommand_Buffer_Max;

DATA IMPLEMENTATION StateCommand_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type StateCommand
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (8); -- Size of the buffer
    Data_Model::Base_Type => (classifier (DataView::Stream_Element_Buffer));
END StateCommand_Buffer_Max.impl;

DATA StateCommand_Buffer
END StateCommand_Buffer;

DATA IMPLEMENTATION StateCommand_Buffer.impl
    -- Buffer to hold a marshalled data of type StateCommand
SUBCOMPONENTS
    Buffer : data StateCommand_Buffer_Max.impl;
    Length : data Base_Types::Unsigned_32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END StateCommand_Buffer.impl;

DATA Matrix6d
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("/home/taste/repos/i3ds-interfaces/esrocos/types-base/asn/Eigen.asn");
    TASTE::Ada_Package_Name => "Eigen_Types";
    Deployment::ASN1_Module_Name => "Eigen-Types";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 471; suggested aligned message buffer is...
    Source_Data_Size => 472 Bytes;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "Matrix6d";
    -- what kind of type is this?
    TASTE::ASN1_Basic_Type =>aSEQUENCEOF;
END Matrix6d;

DATA Matrix6d_Buffer_Max
END Matrix6d_Buffer_Max;

DATA IMPLEMENTATION Matrix6d_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type Matrix6d
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (472); -- Size of the buffer
    Data_Model::Base_Type => (classifier (DataView::Stream_Element_Buffer));
END Matrix6d_Buffer_Max.impl;

DATA Matrix6d_Buffer
END Matrix6d_Buffer;

DATA IMPLEMENTATION Matrix6d_Buffer.impl
    -- Buffer to hold a marshalled data of type Matrix6d
SUBCOMPONENTS
    Buffer : data Matrix6d_Buffer_Max.impl;
    Length : data Base_Types::Unsigned_32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END Matrix6d_Buffer.impl;

DATA T_UInt64
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("/home/taste/repos/i3ds-interfaces/esrocos/types-base/asn/taste-extended.asn");
    TASTE::Ada_Package_Name => "TASTE_ExtendedTypes";
    Deployment::ASN1_Module_Name => "TASTE-ExtendedTypes";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 8; suggested aligned message buffer is...
    Source_Data_Size => 8 Bytes;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "T-UInt64";
    -- what kind of type is this?
    TASTE::ASN1_Basic_Type =>aINTEGER;
END T_UInt64;

DATA T_UInt64_Buffer_Max
END T_UInt64_Buffer_Max;

DATA IMPLEMENTATION T_UInt64_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type T_UInt64
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (8); -- Size of the buffer
    Data_Model::Base_Type => (classifier (DataView::Stream_Element_Buffer));
END T_UInt64_Buffer_Max.impl;

DATA T_UInt64_Buffer
END T_UInt64_Buffer;

DATA IMPLEMENTATION T_UInt64_Buffer.impl
    -- Buffer to hold a marshalled data of type T_UInt64
SUBCOMPONENTS
    Buffer : data T_UInt64_Buffer_Max.impl;
    Length : data Base_Types::Unsigned_32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END T_UInt64_Buffer.impl;

DATA StarTrackerMeasurement
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("/home/taste/repos/i3ds-interfaces/i3ds/types-base/asn/StarTracker.asn");
    TASTE::Ada_Package_Name => "StarTracker_Types";
    Deployment::ASN1_Module_Name => "StarTracker-Types";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 65; suggested aligned message buffer is...
    Source_Data_Size => 72 Bytes;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "StarTrackerMeasurement";
    -- what kind of type is this?
    TASTE::ASN1_Basic_Type =>aSEQUENCE;
END StarTrackerMeasurement;

DATA StarTrackerMeasurement_Buffer_Max
END StarTrackerMeasurement_Buffer_Max;

DATA IMPLEMENTATION StarTrackerMeasurement_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type StarTrackerMeasurement
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (72); -- Size of the buffer
    Data_Model::Base_Type => (classifier (DataView::Stream_Element_Buffer));
END StarTrackerMeasurement_Buffer_Max.impl;

DATA StarTrackerMeasurement_Buffer
END StarTrackerMeasurement_Buffer;

DATA IMPLEMENTATION StarTrackerMeasurement_Buffer.impl
    -- Buffer to hold a marshalled data of type StarTrackerMeasurement
SUBCOMPONENTS
    Buffer : data StarTrackerMeasurement_Buffer_Max.impl;
    Length : data Base_Types::Unsigned_32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END StarTrackerMeasurement_Buffer.impl;

DATA AnalogConfigRequest
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("/home/taste/repos/i3ds-interfaces/i3ds/types-base/asn/Analog.asn");
    TASTE::Ada_Package_Name => "Analog_Types";
    Deployment::ASN1_Module_Name => "Analog-Types";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 16; suggested aligned message buffer is...
    Source_Data_Size => 16 Bytes;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "AnalogConfigRequest";
    -- what kind of type is this?
    TASTE::ASN1_Basic_Type =>aCHOICE;
END AnalogConfigRequest;

DATA AnalogConfigRequest_Buffer_Max
END AnalogConfigRequest_Buffer_Max;

DATA IMPLEMENTATION AnalogConfigRequest_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type AnalogConfigRequest
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (16); -- Size of the buffer
    Data_Model::Base_Type => (classifier (DataView::Stream_Element_Buffer));
END AnalogConfigRequest_Buffer_Max.impl;

DATA AnalogConfigRequest_Buffer
END AnalogConfigRequest_Buffer;

DATA IMPLEMENTATION AnalogConfigRequest_Buffer.impl
    -- Buffer to hold a marshalled data of type AnalogConfigRequest
SUBCOMPONENTS
    Buffer : data AnalogConfigRequest_Buffer_Max.impl;
    Length : data Base_Types::Unsigned_32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END AnalogConfigRequest_Buffer.impl;

DATA Time
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("/home/taste/repos/i3ds-interfaces/esrocos/types-base/asn/Time.asn");
    TASTE::Ada_Package_Name => "Time_Types";
    Deployment::ASN1_Module_Name => "Time-Types";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 16; suggested aligned message buffer is...
    Source_Data_Size => 16 Bytes;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "Time";
    -- what kind of type is this?
    TASTE::ASN1_Basic_Type =>aSEQUENCE;
END Time;

DATA Time_Buffer_Max
END Time_Buffer_Max;

DATA IMPLEMENTATION Time_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type Time
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (16); -- Size of the buffer
    Data_Model::Base_Type => (classifier (DataView::Stream_Element_Buffer));
END Time_Buffer_Max.impl;

DATA Time_Buffer
END Time_Buffer;

DATA IMPLEMENTATION Time_Buffer.impl
    -- Buffer to hold a marshalled data of type Time
SUBCOMPONENTS
    Buffer : data Time_Buffer_Max.impl;
    Length : data Base_Types::Unsigned_32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END Time_Buffer.impl;

DATA Hertz_RadarMeasurement
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("/home/taste/repos/i3ds-interfaces/i3ds/types-sensors/asn/Hertz-Radar.asn");
    TASTE::Ada_Package_Name => "Hertz_Radar_Types";
    Deployment::ASN1_Module_Name => "Hertz-Radar-Types";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 195114; suggested aligned message buffer is...
    Source_Data_Size => 195120 Bytes;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "Hertz-RadarMeasurement";
    -- what kind of type is this?
    TASTE::ASN1_Basic_Type =>aSEQUENCE;
END Hertz_RadarMeasurement;

DATA Hertz_RadarMeasurement_Buffer_Max
END Hertz_RadarMeasurement_Buffer_Max;

DATA IMPLEMENTATION Hertz_RadarMeasurement_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type Hertz_RadarMeasurement
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (195120); -- Size of the buffer
    Data_Model::Base_Type => (classifier (DataView::Stream_Element_Buffer));
END Hertz_RadarMeasurement_Buffer_Max.impl;

DATA Hertz_RadarMeasurement_Buffer
END Hertz_RadarMeasurement_Buffer;

DATA IMPLEMENTATION Hertz_RadarMeasurement_Buffer.impl
    -- Buffer to hold a marshalled data of type Hertz_RadarMeasurement
SUBCOMPONENTS
    Buffer : data Hertz_RadarMeasurement_Buffer_Max.impl;
    Length : data Base_Types::Unsigned_32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END Hertz_RadarMeasurement_Buffer.impl;

DATA Point
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("/home/taste/repos/i3ds-interfaces/esrocos/types-base/asn/Point.asn");
    TASTE::Ada_Package_Name => "Point_Types";
    Deployment::ASN1_Module_Name => "Point-Types";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 40; suggested aligned message buffer is...
    Source_Data_Size => 40 Bytes;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "Point";
    -- what kind of type is this?
    TASTE::ASN1_Basic_Type =>aSEQUENCEOF;
END Point;

DATA Point_Buffer_Max
END Point_Buffer_Max;

DATA IMPLEMENTATION Point_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type Point
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (40); -- Size of the buffer
    Data_Model::Base_Type => (classifier (DataView::Stream_Element_Buffer));
END Point_Buffer_Max.impl;

DATA Point_Buffer
END Point_Buffer;

DATA IMPLEMENTATION Point_Buffer.impl
    -- Buffer to hold a marshalled data of type Point
SUBCOMPONENTS
    Buffer : data Point_Buffer_Max.impl;
    Length : data Base_Types::Unsigned_32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END Point_Buffer.impl;

DATA T_Int32
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("/home/taste/tool-inst/share/taste-types/taste-types.asn");
    TASTE::Ada_Package_Name => "TASTE_BasicTypes";
    Deployment::ASN1_Module_Name => "TASTE-BasicTypes";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 8; suggested aligned message buffer is...
    Source_Data_Size => 8 Bytes;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "T-Int32";
    -- what kind of type is this?
    TASTE::ASN1_Basic_Type =>aINTEGER;
END T_Int32;

DATA T_Int32_Buffer_Max
END T_Int32_Buffer_Max;

DATA IMPLEMENTATION T_Int32_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type T_Int32
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (8); -- Size of the buffer
    Data_Model::Base_Type => (classifier (DataView::Stream_Element_Buffer));
END T_Int32_Buffer_Max.impl;

DATA T_Int32_Buffer
END T_Int32_Buffer;

DATA IMPLEMENTATION T_Int32_Buffer.impl
    -- Buffer to hold a marshalled data of type T_Int32
SUBCOMPONENTS
    Buffer : data T_Int32_Buffer_Max.impl;
    Length : data Base_Types::Unsigned_32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END T_Int32_Buffer.impl;

end DataView;
