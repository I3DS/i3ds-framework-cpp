#ifndef i3ds_asn1_GENERATED_ASN1SCC_base_H
#define i3ds_asn1_GENERATED_ASN1SCC_base_H
/*
Code automatically generated by asn1scc tool
*/
#include <i3ds_asn1/asn1crt.hpp>
#include <i3ds_asn1/asn1crt_encoding.hpp>

#include <i3ds_asn1/taste-extended.hpp>
#include <i3ds_asn1/taste-types.hpp>
#include <i3ds_asn1/userdefs-base.hpp>

namespace i3ds_asn1 {


/*-- Base_Angle --------------------------------------------*/
typedef struct {
    T_Double rad;

} Base_Angle;

void Base_Angle_Initialize(Base_Angle* pVal);

#define i3ds_asn1_ERR_BASE_ANGLE		4698  /**/
#define i3ds_asn1_i3ds_asn1_ERR_BASE_ANGLE_RAD_2		4693  /**/
flag Base_Angle_IsConstraintValid(const Base_Angle* pVal, int* pErrCode);

#define i3ds_asn1_ERR_UPER_ENCODE_BASE_ANGLE		4699  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_ANGLE_RAD_2		4694  /**/
#define i3ds_asn1_Base_Angle_REQUIRED_BYTES_FOR_ENCODING       13 
#define i3ds_asn1_Base_Angle_REQUIRED_BITS_FOR_ENCODING        104

flag Base_Angle_Encode(const Base_Angle* pVal, BitStream* pBitStrm, int* pErrCode, flag bCheckConstraints);

#define i3ds_asn1_ERR_UPER_DECODE_BASE_ANGLE		4700  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_ANGLE_RAD_2		4695  /**/
flag Base_Angle_Decode(Base_Angle* pVal, BitStream* pBitStrm, int* pErrCode);
/*-- Base_commands_Motion2D --------------------------------------------*/
typedef struct {
    T_Double translation;
    T_Double rotation;
    Base_Angle heading;

} Base_commands_Motion2D;

void Base_commands_Motion2D_Initialize(Base_commands_Motion2D* pVal);

#define i3ds_asn1_ERR_BASE_COMMANDS_MOTION2D		5472  /**/
#define i3ds_asn1_i3ds_asn1_ERR_BASE_COMMANDS_MOTION2D_TRANSLATION_2		5431  /**/
#define i3ds_asn1_i3ds_asn1_ERR_BASE_COMMANDS_MOTION2D_ROTATION_2		5443  /**/
#define i3ds_asn1_i3ds_asn1_ERR_BASE_COMMANDS_MOTION2D_HEADING_2		5467  /**/
flag Base_commands_Motion2D_IsConstraintValid(const Base_commands_Motion2D* pVal, int* pErrCode);

#define i3ds_asn1_ERR_UPER_ENCODE_BASE_COMMANDS_MOTION2D		5473  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_COMMANDS_MOTION2D_TRANSLATION_2		5432  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_COMMANDS_MOTION2D_ROTATION_2		5444  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_COMMANDS_MOTION2D_HEADING_2		5468  /**/
#define i3ds_asn1_Base_commands_Motion2D_REQUIRED_BYTES_FOR_ENCODING       39 
#define i3ds_asn1_Base_commands_Motion2D_REQUIRED_BITS_FOR_ENCODING        312

flag Base_commands_Motion2D_Encode(const Base_commands_Motion2D* pVal, BitStream* pBitStrm, int* pErrCode, flag bCheckConstraints);

#define i3ds_asn1_ERR_UPER_DECODE_BASE_COMMANDS_MOTION2D		5474  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_COMMANDS_MOTION2D_TRANSLATION_2		5433  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_COMMANDS_MOTION2D_ROTATION_2		5445  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_COMMANDS_MOTION2D_HEADING_2		5469  /**/
flag Base_commands_Motion2D_Decode(Base_commands_Motion2D* pVal, BitStream* pBitStrm, int* pErrCode);
/*-- Base_PoseUpdateThreshold --------------------------------------------*/
typedef struct {
    T_Double distance;
    T_Double angle;

} Base_PoseUpdateThreshold;

void Base_PoseUpdateThreshold_Initialize(Base_PoseUpdateThreshold* pVal);

#define i3ds_asn1_i3ds_asn1_ERR_BASE_POSEUPDATETHRESHOLD		4846  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_BASE_POSEUPDATETHRESHOLD_DISTANCE_2		4829  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_BASE_POSEUPDATETHRESHOLD_ANGLE_2		4841  /**/
flag Base_PoseUpdateThreshold_IsConstraintValid(const Base_PoseUpdateThreshold* pVal, int* pErrCode);

#define i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_POSEUPDATETHRESHOLD		4847  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_POSEUPDATETHRESHOLD_DISTANCE_2		4830  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_POSEUPDATETHRESHOLD_ANGLE_2		4842  /**/
#define i3ds_asn1_Base_PoseUpdateThreshold_REQUIRED_BYTES_FOR_ENCODING       26 
#define i3ds_asn1_Base_PoseUpdateThreshold_REQUIRED_BITS_FOR_ENCODING        208

flag Base_PoseUpdateThreshold_Encode(const Base_PoseUpdateThreshold* pVal, BitStream* pBitStrm, int* pErrCode, flag bCheckConstraints);

#define i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_POSEUPDATETHRESHOLD		4848  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_POSEUPDATETHRESHOLD_DISTANCE_2		4831  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_POSEUPDATETHRESHOLD_ANGLE_2		4843  /**/
flag Base_PoseUpdateThreshold_Decode(Base_PoseUpdateThreshold* pVal, BitStream* pBitStrm, int* pErrCode);
/*-- Base_Temperature --------------------------------------------*/
typedef struct {
    T_Double kelvin;

} Base_Temperature;

void Base_Temperature_Initialize(Base_Temperature* pVal);

#define i3ds_asn1_ERR_BASE_TEMPERATURE		4884  /**/
#define i3ds_asn1_i3ds_asn1_ERR_BASE_TEMPERATURE_KELVIN_2		4879  /**/
flag Base_Temperature_IsConstraintValid(const Base_Temperature* pVal, int* pErrCode);

#define i3ds_asn1_ERR_UPER_ENCODE_BASE_TEMPERATURE		4885  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_TEMPERATURE_KELVIN_2		4880  /**/
#define i3ds_asn1_Base_Temperature_REQUIRED_BYTES_FOR_ENCODING       13 
#define i3ds_asn1_Base_Temperature_REQUIRED_BITS_FOR_ENCODING        104

flag Base_Temperature_Encode(const Base_Temperature* pVal, BitStream* pBitStrm, int* pErrCode, flag bCheckConstraints);

#define i3ds_asn1_ERR_UPER_DECODE_BASE_TEMPERATURE		4886  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_TEMPERATURE_KELVIN_2		4881  /**/
flag Base_Temperature_Decode(Base_Temperature* pVal, BitStream* pBitStrm, int* pErrCode);
/*-- Base_commands_Speed6D --------------------------------------------*/
typedef struct {
    T_Double surge;
    T_Double sway;
    T_Double heave;
    T_Double roll;
    T_Double pitch;
    T_Double yaw;

} Base_commands_Speed6D;

void Base_commands_Speed6D_Initialize(Base_commands_Speed6D* pVal);

#define i3ds_asn1_ERR_BASE_COMMANDS_SPEED6D		5551  /**/
#define i3ds_asn1_i3ds_asn1_ERR_BASE_COMMANDS_SPEED6D_SURGE_2		5486  /**/
#define i3ds_asn1_i3ds_asn1_ERR_BASE_COMMANDS_SPEED6D_SWAY_2		5498  /**/
#define i3ds_asn1_i3ds_asn1_ERR_BASE_COMMANDS_SPEED6D_HEAVE_2		5510  /**/
#define i3ds_asn1_i3ds_asn1_ERR_BASE_COMMANDS_SPEED6D_ROLL_2		5522  /**/
#define i3ds_asn1_i3ds_asn1_ERR_BASE_COMMANDS_SPEED6D_PITCH_2		5534  /**/
#define i3ds_asn1_i3ds_asn1_ERR_BASE_COMMANDS_SPEED6D_YAW_2		5546  /**/
flag Base_commands_Speed6D_IsConstraintValid(const Base_commands_Speed6D* pVal, int* pErrCode);

#define i3ds_asn1_ERR_UPER_ENCODE_BASE_COMMANDS_SPEED6D		5552  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_COMMANDS_SPEED6D_SURGE_2		5487  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_COMMANDS_SPEED6D_SWAY_2		5499  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_COMMANDS_SPEED6D_HEAVE_2		5511  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_COMMANDS_SPEED6D_ROLL_2		5523  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_COMMANDS_SPEED6D_PITCH_2		5535  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_COMMANDS_SPEED6D_YAW_2		5547  /**/
#define i3ds_asn1_Base_commands_Speed6D_REQUIRED_BYTES_FOR_ENCODING       78 
#define i3ds_asn1_Base_commands_Speed6D_REQUIRED_BITS_FOR_ENCODING        624

flag Base_commands_Speed6D_Encode(const Base_commands_Speed6D* pVal, BitStream* pBitStrm, int* pErrCode, flag bCheckConstraints);

#define i3ds_asn1_ERR_UPER_DECODE_BASE_COMMANDS_SPEED6D		5553  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_COMMANDS_SPEED6D_SURGE_2		5488  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_COMMANDS_SPEED6D_SWAY_2		5500  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_COMMANDS_SPEED6D_HEAVE_2		5512  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_COMMANDS_SPEED6D_ROLL_2		5524  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_COMMANDS_SPEED6D_PITCH_2		5536  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_COMMANDS_SPEED6D_YAW_2		5548  /**/
flag Base_commands_Speed6D_Decode(Base_commands_Speed6D* pVal, BitStream* pBitStrm, int* pErrCode);
/*-- Wrappers_AngleAxisd --------------------------------------------*/


typedef struct {
    int nCount; 
    
    T_Double arr[3];
} Wrappers_AngleAxisd_axis;
typedef struct {
    T_Double angle;
    Wrappers_AngleAxisd_axis axis;

} Wrappers_AngleAxisd;

void Wrappers_AngleAxisd_axis_Initialize(Wrappers_AngleAxisd_axis* pVal);
void Wrappers_AngleAxisd_Initialize(Wrappers_AngleAxisd* pVal);

#define i3ds_asn1_ERR_WRAPPERS_ANGLEAXISD		9867  /**/
#define i3ds_asn1_i3ds_asn1_ERR_WRAPPERS_ANGLEAXISD_ANGLE_2		9843  /**/
#define i3ds_asn1_i3ds_asn1_ERR_WRAPPERS_ANGLEAXISD_AXIS		9860  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_WRAPPERS_ANGLEAXISD_AXIS_ELM_2		9855  /**/
flag Wrappers_AngleAxisd_IsConstraintValid(const Wrappers_AngleAxisd* pVal, int* pErrCode);

#define i3ds_asn1_ERR_UPER_ENCODE_WRAPPERS_ANGLEAXISD		9868  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_WRAPPERS_ANGLEAXISD_ANGLE_2		9844  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_WRAPPERS_ANGLEAXISD_AXIS		9861  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_WRAPPERS_ANGLEAXISD_AXIS_ELM_2		9856  /**/
#define i3ds_asn1_Wrappers_AngleAxisd_REQUIRED_BYTES_FOR_ENCODING       53 
#define i3ds_asn1_Wrappers_AngleAxisd_REQUIRED_BITS_FOR_ENCODING        418

flag Wrappers_AngleAxisd_Encode(const Wrappers_AngleAxisd* pVal, BitStream* pBitStrm, int* pErrCode, flag bCheckConstraints);

#define i3ds_asn1_ERR_UPER_DECODE_WRAPPERS_ANGLEAXISD		9869  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_WRAPPERS_ANGLEAXISD_ANGLE_2		9845  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_WRAPPERS_ANGLEAXISD_AXIS		9862  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_WRAPPERS_ANGLEAXISD_AXIS_ELM_2		9857  /**/
flag Wrappers_AngleAxisd_Decode(Wrappers_AngleAxisd* pVal, BitStream* pBitStrm, int* pErrCode);
/*-- Wrappers_Vector2d --------------------------------------------*/


typedef struct {
    int nCount; 
    
    T_Double arr[2];
} Wrappers_Vector2d_data;
typedef struct {
    Wrappers_Vector2d_data data;

} Wrappers_Vector2d;

void Wrappers_Vector2d_data_Initialize(Wrappers_Vector2d_data* pVal);
void Wrappers_Vector2d_Initialize(Wrappers_Vector2d* pVal);

#define i3ds_asn1_ERR_WRAPPERS_VECTOR2D		9893  /**/
#define i3ds_asn1_i3ds_asn1_ERR_WRAPPERS_VECTOR2D_DATA		9886  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_WRAPPERS_VECTOR2D_DATA_ELM_2		9881  /**/
flag Wrappers_Vector2d_IsConstraintValid(const Wrappers_Vector2d* pVal, int* pErrCode);

#define i3ds_asn1_ERR_UPER_ENCODE_WRAPPERS_VECTOR2D		9894  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_WRAPPERS_VECTOR2D_DATA		9887  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_WRAPPERS_VECTOR2D_DATA_ELM_2		9882  /**/
#define i3ds_asn1_Wrappers_Vector2d_REQUIRED_BYTES_FOR_ENCODING       27 
#define i3ds_asn1_Wrappers_Vector2d_REQUIRED_BITS_FOR_ENCODING        209

flag Wrappers_Vector2d_Encode(const Wrappers_Vector2d* pVal, BitStream* pBitStrm, int* pErrCode, flag bCheckConstraints);

#define i3ds_asn1_ERR_UPER_DECODE_WRAPPERS_VECTOR2D		9895  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_WRAPPERS_VECTOR2D_DATA		9888  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_WRAPPERS_VECTOR2D_DATA_ELM_2		9883  /**/
flag Wrappers_Vector2d_Decode(Wrappers_Vector2d* pVal, BitStream* pBitStrm, int* pErrCode);
/*-- Base_Pose2D --------------------------------------------*/
typedef struct {
    Wrappers_Vector2d position;
    T_Double orientation;

} Base_Pose2D;

void Base_Pose2D_Initialize(Base_Pose2D* pVal);

#define i3ds_asn1_i3ds_asn1_ERR_BASE_POSE2D		4815  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_BASE_POSE2D_POSITION_2		4798  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_BASE_POSE2D_ORIENTATION_2		4810  /**/
flag Base_Pose2D_IsConstraintValid(const Base_Pose2D* pVal, int* pErrCode);

#define i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_POSE2D		4816  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_POSE2D_POSITION_2		4799  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_POSE2D_ORIENTATION_2		4811  /**/
#define i3ds_asn1_Base_Pose2D_REQUIRED_BYTES_FOR_ENCODING       40 
#define i3ds_asn1_Base_Pose2D_REQUIRED_BITS_FOR_ENCODING        313

flag Base_Pose2D_Encode(const Base_Pose2D* pVal, BitStream* pBitStrm, int* pErrCode, flag bCheckConstraints);

#define i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_POSE2D		4817  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_POSE2D_POSITION_2		4800  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_POSE2D_ORIENTATION_2		4812  /**/
flag Base_Pose2D_Decode(Base_Pose2D* pVal, BitStream* pBitStrm, int* pErrCode);
/*-- Base_Pose2D_m --------------------------------------------*/
typedef struct {
    Wrappers_Vector2d position;
    T_Double orientation;

} Base_Pose2D_m;

void Base_Pose2D_m_Initialize(Base_Pose2D_m* pVal);

#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_BASE_POSE2D_M		10301  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_BASE_POSE2D_M_POSITION_2		10284  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_BASE_POSE2D_M_ORIENTATION_2		10296  /**/
flag Base_Pose2D_m_IsConstraintValid(const Base_Pose2D_m* pVal, int* pErrCode);

#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_POSE2D_M		10302  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_POSE2D_M_POSITION_2		10285  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_POSE2D_M_ORIENTATION_2		10297  /**/
#define i3ds_asn1_Base_Pose2D_m_REQUIRED_BYTES_FOR_ENCODING       40 
#define i3ds_asn1_Base_Pose2D_m_REQUIRED_BITS_FOR_ENCODING        313

flag Base_Pose2D_m_Encode(const Base_Pose2D_m* pVal, BitStream* pBitStrm, int* pErrCode, flag bCheckConstraints);

#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_POSE2D_M		10303  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_POSE2D_M_POSITION_2		10286  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_POSE2D_M_ORIENTATION_2		10298  /**/
flag Base_Pose2D_m_Decode(Base_Pose2D_m* pVal, BitStream* pBitStrm, int* pErrCode);
/*-- Wrappers_Matrix2d --------------------------------------------*/


typedef struct {
    int nCount; 
    
    T_Double arr[4];
} Wrappers_Matrix2d_data;
typedef struct {
    Wrappers_Matrix2d_data data;

} Wrappers_Matrix2d;

void Wrappers_Matrix2d_data_Initialize(Wrappers_Matrix2d_data* pVal);
void Wrappers_Matrix2d_Initialize(Wrappers_Matrix2d* pVal);

#define i3ds_asn1_ERR_WRAPPERS_MATRIX2D		9919  /**/
#define i3ds_asn1_i3ds_asn1_ERR_WRAPPERS_MATRIX2D_DATA		9912  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_WRAPPERS_MATRIX2D_DATA_ELM_2		9907  /**/
flag Wrappers_Matrix2d_IsConstraintValid(const Wrappers_Matrix2d* pVal, int* pErrCode);

#define i3ds_asn1_ERR_UPER_ENCODE_WRAPPERS_MATRIX2D		9920  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_WRAPPERS_MATRIX2D_DATA		9913  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_WRAPPERS_MATRIX2D_DATA_ELM_2		9908  /**/
#define i3ds_asn1_Wrappers_Matrix2d_REQUIRED_BYTES_FOR_ENCODING       53 
#define i3ds_asn1_Wrappers_Matrix2d_REQUIRED_BITS_FOR_ENCODING        418

flag Wrappers_Matrix2d_Encode(const Wrappers_Matrix2d* pVal, BitStream* pBitStrm, int* pErrCode, flag bCheckConstraints);

#define i3ds_asn1_ERR_UPER_DECODE_WRAPPERS_MATRIX2D		9921  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_WRAPPERS_MATRIX2D_DATA		9914  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_WRAPPERS_MATRIX2D_DATA_ELM_2		9909  /**/
flag Wrappers_Matrix2d_Decode(Wrappers_Matrix2d* pVal, BitStream* pBitStrm, int* pErrCode);
/*-- Wrappers_Vector3d --------------------------------------------*/


typedef struct {
    int nCount; 
    
    T_Double arr[3];
} Wrappers_Vector3d_data;
typedef struct {
    Wrappers_Vector3d_data data;

} Wrappers_Vector3d;

void Wrappers_Vector3d_data_Initialize(Wrappers_Vector3d_data* pVal);
void Wrappers_Vector3d_Initialize(Wrappers_Vector3d* pVal);

#define i3ds_asn1_ERR_WRAPPERS_VECTOR3D		9945  /**/
#define i3ds_asn1_i3ds_asn1_ERR_WRAPPERS_VECTOR3D_DATA		9938  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_WRAPPERS_VECTOR3D_DATA_ELM_2		9933  /**/
flag Wrappers_Vector3d_IsConstraintValid(const Wrappers_Vector3d* pVal, int* pErrCode);

#define i3ds_asn1_ERR_UPER_ENCODE_WRAPPERS_VECTOR3D		9946  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_WRAPPERS_VECTOR3D_DATA		9939  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_WRAPPERS_VECTOR3D_DATA_ELM_2		9934  /**/
#define i3ds_asn1_Wrappers_Vector3d_REQUIRED_BYTES_FOR_ENCODING       40 
#define i3ds_asn1_Wrappers_Vector3d_REQUIRED_BITS_FOR_ENCODING        314

flag Wrappers_Vector3d_Encode(const Wrappers_Vector3d* pVal, BitStream* pBitStrm, int* pErrCode, flag bCheckConstraints);

#define i3ds_asn1_ERR_UPER_DECODE_WRAPPERS_VECTOR3D		9947  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_WRAPPERS_VECTOR3D_DATA		9940  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_WRAPPERS_VECTOR3D_DATA_ELM_2		9935  /**/
flag Wrappers_Vector3d_Decode(Wrappers_Vector3d* pVal, BitStream* pBitStrm, int* pErrCode);
/*-- Base_Wrench --------------------------------------------*/
typedef struct {
    Wrappers_Vector3d force;
    Wrappers_Vector3d torque;

} Base_Wrench;

void Base_Wrench_Initialize(Base_Wrench* pVal);

#define i3ds_asn1_ERR_BASE_WRENCH		4679  /**/
#define i3ds_asn1_i3ds_asn1_ERR_BASE_WRENCH_FORCE_2		4643  /**/
#define i3ds_asn1_i3ds_asn1_ERR_BASE_WRENCH_TORQUE_2		4674  /**/
flag Base_Wrench_IsConstraintValid(const Base_Wrench* pVal, int* pErrCode);

#define i3ds_asn1_ERR_UPER_ENCODE_BASE_WRENCH		4680  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_WRENCH_FORCE_2		4644  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_WRENCH_TORQUE_2		4675  /**/
#define i3ds_asn1_Base_Wrench_REQUIRED_BYTES_FOR_ENCODING       79 
#define i3ds_asn1_Base_Wrench_REQUIRED_BITS_FOR_ENCODING        628

flag Base_Wrench_Encode(const Base_Wrench* pVal, BitStream* pBitStrm, int* pErrCode, flag bCheckConstraints);

#define i3ds_asn1_ERR_UPER_DECODE_BASE_WRENCH		4681  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_WRENCH_FORCE_2		4645  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_WRENCH_TORQUE_2		4676  /**/
flag Base_Wrench_Decode(Base_Wrench* pVal, BitStream* pBitStrm, int* pErrCode);
/*-- Base_Waypoint --------------------------------------------*/
typedef struct {
    Wrappers_Vector3d position;
    T_Double heading;
    T_Double tol_position;
    T_Double tol_heading;

} Base_Waypoint;

void Base_Waypoint_Initialize(Base_Waypoint* pVal);

#define i3ds_asn1_ERR_BASE_WAYPOINT		5094  /**/
#define i3ds_asn1_i3ds_asn1_ERR_BASE_WAYPOINT_POSITION_2		5053  /**/
#define i3ds_asn1_i3ds_asn1_ERR_BASE_WAYPOINT_HEADING_2		5065  /**/
#define i3ds_asn1_i3ds_asn1_ERR_BASE_WAYPOINT_TOL_POSITION_2		5077  /**/
#define i3ds_asn1_i3ds_asn1_ERR_BASE_WAYPOINT_TOL_HEADING_2		5089  /**/
flag Base_Waypoint_IsConstraintValid(const Base_Waypoint* pVal, int* pErrCode);

#define i3ds_asn1_ERR_UPER_ENCODE_BASE_WAYPOINT		5095  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_WAYPOINT_POSITION_2		5054  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_WAYPOINT_HEADING_2		5066  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_WAYPOINT_TOL_POSITION_2		5078  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_WAYPOINT_TOL_HEADING_2		5090  /**/
#define i3ds_asn1_Base_Waypoint_REQUIRED_BYTES_FOR_ENCODING       79 
#define i3ds_asn1_Base_Waypoint_REQUIRED_BITS_FOR_ENCODING        626

flag Base_Waypoint_Encode(const Base_Waypoint* pVal, BitStream* pBitStrm, int* pErrCode, flag bCheckConstraints);

#define i3ds_asn1_ERR_UPER_DECODE_BASE_WAYPOINT		5096  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_WAYPOINT_POSITION_2		5055  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_WAYPOINT_HEADING_2		5067  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_WAYPOINT_TOL_POSITION_2		5079  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_WAYPOINT_TOL_HEADING_2		5091  /**/
flag Base_Waypoint_Decode(Base_Waypoint* pVal, BitStream* pBitStrm, int* pErrCode);
/*-- Base_Waypoint_m --------------------------------------------*/
typedef struct {
    Wrappers_Vector3d position;
    T_Double heading;
    T_Double tol_position;
    T_Double tol_heading;

} Base_Waypoint_m;

void Base_Waypoint_m_Initialize(Base_Waypoint_m* pVal);

#define i3ds_asn1_i3ds_asn1_ERR_BASE_WAYPOINT_M		10668  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_BASE_WAYPOINT_M_POSITION_2		10627  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_BASE_WAYPOINT_M_HEADING_2		10639  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_BASE_WAYPOINT_M_TOL_POSITION_2		10651  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_BASE_WAYPOINT_M_TOL_HEADING_2		10663  /**/
flag Base_Waypoint_m_IsConstraintValid(const Base_Waypoint_m* pVal, int* pErrCode);

#define i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_WAYPOINT_M		10669  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_WAYPOINT_M_POSITION_2		10628  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_WAYPOINT_M_HEADING_2		10640  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_WAYPOINT_M_TOL_POSITION_2		10652  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_WAYPOINT_M_TOL_HEADING_2		10664  /**/
#define i3ds_asn1_Base_Waypoint_m_REQUIRED_BYTES_FOR_ENCODING       79 
#define i3ds_asn1_Base_Waypoint_m_REQUIRED_BITS_FOR_ENCODING        626

flag Base_Waypoint_m_Encode(const Base_Waypoint_m* pVal, BitStream* pBitStrm, int* pErrCode, flag bCheckConstraints);

#define i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_WAYPOINT_M		10670  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_WAYPOINT_M_POSITION_2		10629  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_WAYPOINT_M_HEADING_2		10641  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_WAYPOINT_M_TOL_POSITION_2		10653  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_WAYPOINT_M_TOL_HEADING_2		10665  /**/
flag Base_Waypoint_m_Decode(Base_Waypoint_m* pVal, BitStream* pBitStrm, int* pErrCode);


typedef struct {
    int nCount; 
    
    Base_Waypoint_m arr[200];
} Std_orogen_typekits_mtype_std_vector_base_Waypoint;

void Std_orogen_typekits_mtype_std_vector_base_Waypoint_Initialize(Std_orogen_typekits_mtype_std_vector_base_Waypoint* pVal);

#define i3ds_asn1_ERR_STD_OROGEN_TYPEKITS_MTYPE_STD_VECTOR_BASE_WAYPOINT		4069  /**/
#define i3ds_asn1_i3ds_asn1_ERR_STD_OROGEN_TYPEKITS_MTYPE_STD_VECTOR_BASE_WAYPOINT_ELM_2		4064  /**/
flag Std_orogen_typekits_mtype_std_vector_base_Waypoint_IsConstraintValid(const Std_orogen_typekits_mtype_std_vector_base_Waypoint* pVal, int* pErrCode);

#define i3ds_asn1_ERR_UPER_ENCODE_STD_OROGEN_TYPEKITS_MTYPE_STD_VECTOR_BASE_WAYPOINT		4070  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_STD_OROGEN_TYPEKITS_MTYPE_STD_VECTOR_BASE_WAYPOINT_ELM_2		4065  /**/
#define i3ds_asn1_Std_orogen_typekits_mtype_std_vector_base_Waypoint_REQUIRED_BYTES_FOR_ENCODING       15651 
#define i3ds_asn1_Std_orogen_typekits_mtype_std_vector_base_Waypoint_REQUIRED_BITS_FOR_ENCODING        125208

flag Std_orogen_typekits_mtype_std_vector_base_Waypoint_Encode(const Std_orogen_typekits_mtype_std_vector_base_Waypoint* pVal, BitStream* pBitStrm, int* pErrCode, flag bCheckConstraints);

#define i3ds_asn1_ERR_UPER_DECODE_STD_OROGEN_TYPEKITS_MTYPE_STD_VECTOR_BASE_WAYPOINT		4071  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_STD_OROGEN_TYPEKITS_MTYPE_STD_VECTOR_BASE_WAYPOINT_ELM_2		4066  /**/
flag Std_orogen_typekits_mtype_std_vector_base_Waypoint_Decode(Std_orogen_typekits_mtype_std_vector_base_Waypoint* pVal, BitStream* pBitStrm, int* pErrCode);
/*-- Base_Wrench_m --------------------------------------------*/
typedef struct {
    Wrappers_Vector3d force;
    Wrappers_Vector3d torque;

} Base_Wrench_m;

void Base_Wrench_m_Initialize(Base_Wrench_m* pVal);

#define i3ds_asn1_i3ds_asn1_ERR_BASE_WRENCH_M		10737  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_BASE_WRENCH_M_FORCE_2		10701  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_BASE_WRENCH_M_TORQUE_2		10732  /**/
flag Base_Wrench_m_IsConstraintValid(const Base_Wrench_m* pVal, int* pErrCode);

#define i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_WRENCH_M		10738  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_WRENCH_M_FORCE_2		10702  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_WRENCH_M_TORQUE_2		10733  /**/
#define i3ds_asn1_Base_Wrench_m_REQUIRED_BYTES_FOR_ENCODING       79 
#define i3ds_asn1_Base_Wrench_m_REQUIRED_BITS_FOR_ENCODING        628

flag Base_Wrench_m_Encode(const Base_Wrench_m* pVal, BitStream* pBitStrm, int* pErrCode, flag bCheckConstraints);

#define i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_WRENCH_M		10739  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_WRENCH_M_FORCE_2		10703  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_WRENCH_M_TORQUE_2		10734  /**/
flag Base_Wrench_m_Decode(Base_Wrench_m* pVal, BitStream* pBitStrm, int* pErrCode);


typedef struct {
    int nCount; 
    
    Base_Wrench_m arr[200];
} Std_orogen_typekits_mtype_std_vector_base_Wrench;

void Std_orogen_typekits_mtype_std_vector_base_Wrench_Initialize(Std_orogen_typekits_mtype_std_vector_base_Wrench* pVal);

#define i3ds_asn1_ERR_STD_OROGEN_TYPEKITS_MTYPE_STD_VECTOR_BASE_WRENCH		4150  /**/
#define i3ds_asn1_i3ds_asn1_ERR_STD_OROGEN_TYPEKITS_MTYPE_STD_VECTOR_BASE_WRENCH_ELM_2		4145  /**/
flag Std_orogen_typekits_mtype_std_vector_base_Wrench_IsConstraintValid(const Std_orogen_typekits_mtype_std_vector_base_Wrench* pVal, int* pErrCode);

#define i3ds_asn1_ERR_UPER_ENCODE_STD_OROGEN_TYPEKITS_MTYPE_STD_VECTOR_BASE_WRENCH		4151  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_STD_OROGEN_TYPEKITS_MTYPE_STD_VECTOR_BASE_WRENCH_ELM_2		4146  /**/
#define i3ds_asn1_Std_orogen_typekits_mtype_std_vector_base_Wrench_REQUIRED_BYTES_FOR_ENCODING       15701 
#define i3ds_asn1_Std_orogen_typekits_mtype_std_vector_base_Wrench_REQUIRED_BITS_FOR_ENCODING        125608

flag Std_orogen_typekits_mtype_std_vector_base_Wrench_Encode(const Std_orogen_typekits_mtype_std_vector_base_Wrench* pVal, BitStream* pBitStrm, int* pErrCode, flag bCheckConstraints);

#define i3ds_asn1_ERR_UPER_DECODE_STD_OROGEN_TYPEKITS_MTYPE_STD_VECTOR_BASE_WRENCH		4152  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_STD_OROGEN_TYPEKITS_MTYPE_STD_VECTOR_BASE_WRENCH_ELM_2		4147  /**/
flag Std_orogen_typekits_mtype_std_vector_base_Wrench_Decode(Std_orogen_typekits_mtype_std_vector_base_Wrench* pVal, BitStream* pBitStrm, int* pErrCode);
/*-- Wrappers_Matrix3d --------------------------------------------*/


typedef struct {
    int nCount; 
    
    T_Double arr[9];
} Wrappers_Matrix3d_data;
typedef struct {
    Wrappers_Matrix3d_data data;

} Wrappers_Matrix3d;

void Wrappers_Matrix3d_data_Initialize(Wrappers_Matrix3d_data* pVal);
void Wrappers_Matrix3d_Initialize(Wrappers_Matrix3d* pVal);

#define i3ds_asn1_ERR_WRAPPERS_MATRIX3D		9971  /**/
#define i3ds_asn1_i3ds_asn1_ERR_WRAPPERS_MATRIX3D_DATA		9964  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_WRAPPERS_MATRIX3D_DATA_ELM_2		9959  /**/
flag Wrappers_Matrix3d_IsConstraintValid(const Wrappers_Matrix3d* pVal, int* pErrCode);

#define i3ds_asn1_ERR_UPER_ENCODE_WRAPPERS_MATRIX3D		9972  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_WRAPPERS_MATRIX3D_DATA		9965  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_WRAPPERS_MATRIX3D_DATA_ELM_2		9960  /**/
#define i3ds_asn1_Wrappers_Matrix3d_REQUIRED_BYTES_FOR_ENCODING       118 
#define i3ds_asn1_Wrappers_Matrix3d_REQUIRED_BITS_FOR_ENCODING        940

flag Wrappers_Matrix3d_Encode(const Wrappers_Matrix3d* pVal, BitStream* pBitStrm, int* pErrCode, flag bCheckConstraints);

#define i3ds_asn1_ERR_UPER_DECODE_WRAPPERS_MATRIX3D		9973  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_WRAPPERS_MATRIX3D_DATA		9966  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_WRAPPERS_MATRIX3D_DATA_ELM_2		9961  /**/
flag Wrappers_Matrix3d_Decode(Wrappers_Matrix3d* pVal, BitStream* pBitStrm, int* pErrCode);
/*-- Wrappers_Vector4d --------------------------------------------*/


typedef struct {
    int nCount; 
    
    T_Double arr[4];
} Wrappers_Vector4d_data;
typedef struct {
    Wrappers_Vector4d_data data;

} Wrappers_Vector4d;

void Wrappers_Vector4d_data_Initialize(Wrappers_Vector4d_data* pVal);
void Wrappers_Vector4d_Initialize(Wrappers_Vector4d* pVal);

#define i3ds_asn1_ERR_WRAPPERS_VECTOR4D		9997  /**/
#define i3ds_asn1_i3ds_asn1_ERR_WRAPPERS_VECTOR4D_DATA		9990  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_WRAPPERS_VECTOR4D_DATA_ELM_2		9985  /**/
flag Wrappers_Vector4d_IsConstraintValid(const Wrappers_Vector4d* pVal, int* pErrCode);

#define i3ds_asn1_ERR_UPER_ENCODE_WRAPPERS_VECTOR4D		9998  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_WRAPPERS_VECTOR4D_DATA		9991  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_WRAPPERS_VECTOR4D_DATA_ELM_2		9986  /**/
#define i3ds_asn1_Wrappers_Vector4d_REQUIRED_BYTES_FOR_ENCODING       53 
#define i3ds_asn1_Wrappers_Vector4d_REQUIRED_BITS_FOR_ENCODING        418

flag Wrappers_Vector4d_Encode(const Wrappers_Vector4d* pVal, BitStream* pBitStrm, int* pErrCode, flag bCheckConstraints);

#define i3ds_asn1_ERR_UPER_DECODE_WRAPPERS_VECTOR4D		9999  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_WRAPPERS_VECTOR4D_DATA		9992  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_WRAPPERS_VECTOR4D_DATA_ELM_2		9987  /**/
flag Wrappers_Vector4d_Decode(Wrappers_Vector4d* pVal, BitStream* pBitStrm, int* pErrCode);


typedef struct {
    int nCount; 
    
    Wrappers_Vector4d arr[200];
} Std_vector_Wrappers_Vector4d;

void Std_vector_Wrappers_Vector4d_Initialize(Std_vector_Wrappers_Vector4d* pVal);

#define i3ds_asn1_ERR_STD_VECTOR_WRAPPERS_VECTOR4D		4188  /**/
#define i3ds_asn1_i3ds_asn1_ERR_STD_VECTOR_WRAPPERS_VECTOR4D_ELM_2		4183  /**/
flag Std_vector_Wrappers_Vector4d_IsConstraintValid(const Std_vector_Wrappers_Vector4d* pVal, int* pErrCode);

#define i3ds_asn1_ERR_UPER_ENCODE_STD_VECTOR_WRAPPERS_VECTOR4D		4189  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_STD_VECTOR_WRAPPERS_VECTOR4D_ELM_2		4184  /**/
#define Std_vector_i3ds_asn1_Wrappers_Vector4d_REQUIRED_BYTES_FOR_ENCODING       10451 
#define Std_vector_i3ds_asn1_Wrappers_Vector4d_REQUIRED_BITS_FOR_ENCODING        83608

flag Std_vector_Wrappers_Vector4d_Encode(const Std_vector_Wrappers_Vector4d* pVal, BitStream* pBitStrm, int* pErrCode, flag bCheckConstraints);

#define i3ds_asn1_ERR_UPER_DECODE_STD_VECTOR_WRAPPERS_VECTOR4D		4190  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_STD_VECTOR_WRAPPERS_VECTOR4D_ELM_2		4185  /**/
flag Std_vector_Wrappers_Vector4d_Decode(Std_vector_Wrappers_Vector4d* pVal, BitStream* pBitStrm, int* pErrCode);
/*-- Wrappers_Matrix4d --------------------------------------------*/


typedef struct {
    int nCount; 
    
    T_Double arr[16];
} Wrappers_Matrix4d_data;
typedef struct {
    Wrappers_Matrix4d_data data;

} Wrappers_Matrix4d;

void Wrappers_Matrix4d_data_Initialize(Wrappers_Matrix4d_data* pVal);
void Wrappers_Matrix4d_Initialize(Wrappers_Matrix4d* pVal);

#define i3ds_asn1_ERR_WRAPPERS_MATRIX4D		10023  /**/
#define i3ds_asn1_i3ds_asn1_ERR_WRAPPERS_MATRIX4D_DATA		10016  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_WRAPPERS_MATRIX4D_DATA_ELM_2		10011  /**/
flag Wrappers_Matrix4d_IsConstraintValid(const Wrappers_Matrix4d* pVal, int* pErrCode);

#define i3ds_asn1_ERR_UPER_ENCODE_WRAPPERS_MATRIX4D		10024  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_WRAPPERS_MATRIX4D_DATA		10017  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_WRAPPERS_MATRIX4D_DATA_ELM_2		10012  /**/
#define i3ds_asn1_Wrappers_Matrix4d_REQUIRED_BYTES_FOR_ENCODING       209 
#define i3ds_asn1_Wrappers_Matrix4d_REQUIRED_BITS_FOR_ENCODING        1668

flag Wrappers_Matrix4d_Encode(const Wrappers_Matrix4d* pVal, BitStream* pBitStrm, int* pErrCode, flag bCheckConstraints);

#define i3ds_asn1_ERR_UPER_DECODE_WRAPPERS_MATRIX4D		10025  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_WRAPPERS_MATRIX4D_DATA		10018  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_WRAPPERS_MATRIX4D_DATA_ELM_2		10013  /**/
flag Wrappers_Matrix4d_Decode(Wrappers_Matrix4d* pVal, BitStream* pBitStrm, int* pErrCode);
/*-- Wrappers_Vector6d --------------------------------------------*/


typedef struct {
    int nCount; 
    
    T_Double arr[6];
} Wrappers_Vector6d_data;
typedef struct {
    Wrappers_Vector6d_data data;

} Wrappers_Vector6d;

void Wrappers_Vector6d_data_Initialize(Wrappers_Vector6d_data* pVal);
void Wrappers_Vector6d_Initialize(Wrappers_Vector6d* pVal);

#define i3ds_asn1_ERR_WRAPPERS_VECTOR6D		10049  /**/
#define i3ds_asn1_i3ds_asn1_ERR_WRAPPERS_VECTOR6D_DATA		10042  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_WRAPPERS_VECTOR6D_DATA_ELM_2		10037  /**/
flag Wrappers_Vector6d_IsConstraintValid(const Wrappers_Vector6d* pVal, int* pErrCode);

#define i3ds_asn1_ERR_UPER_ENCODE_WRAPPERS_VECTOR6D		10050  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_WRAPPERS_VECTOR6D_DATA		10043  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_WRAPPERS_VECTOR6D_DATA_ELM_2		10038  /**/
#define i3ds_asn1_Wrappers_Vector6d_REQUIRED_BYTES_FOR_ENCODING       79 
#define i3ds_asn1_Wrappers_Vector6d_REQUIRED_BITS_FOR_ENCODING        627

flag Wrappers_Vector6d_Encode(const Wrappers_Vector6d* pVal, BitStream* pBitStrm, int* pErrCode, flag bCheckConstraints);

#define i3ds_asn1_ERR_UPER_DECODE_WRAPPERS_VECTOR6D		10051  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_WRAPPERS_VECTOR6D_DATA		10044  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_WRAPPERS_VECTOR6D_DATA_ELM_2		10039  /**/
flag Wrappers_Vector6d_Decode(Wrappers_Vector6d* pVal, BitStream* pBitStrm, int* pErrCode);
/*-- Wrappers_Matrix6d --------------------------------------------*/


typedef struct {
    int nCount; 
    
    T_Double arr[36];
} Wrappers_Matrix6d_data;
typedef struct {
    Wrappers_Matrix6d_data data;

} Wrappers_Matrix6d;

void Wrappers_Matrix6d_data_Initialize(Wrappers_Matrix6d_data* pVal);
void Wrappers_Matrix6d_Initialize(Wrappers_Matrix6d* pVal);

#define i3ds_asn1_ERR_WRAPPERS_MATRIX6D		10075  /**/
#define i3ds_asn1_i3ds_asn1_ERR_WRAPPERS_MATRIX6D_DATA		10068  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_WRAPPERS_MATRIX6D_DATA_ELM_2		10063  /**/
flag Wrappers_Matrix6d_IsConstraintValid(const Wrappers_Matrix6d* pVal, int* pErrCode);

#define i3ds_asn1_ERR_UPER_ENCODE_WRAPPERS_MATRIX6D		10076  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_WRAPPERS_MATRIX6D_DATA		10069  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_WRAPPERS_MATRIX6D_DATA_ELM_2		10064  /**/
#define i3ds_asn1_Wrappers_Matrix6d_REQUIRED_BYTES_FOR_ENCODING       469 
#define i3ds_asn1_Wrappers_Matrix6d_REQUIRED_BITS_FOR_ENCODING        3750

flag Wrappers_Matrix6d_Encode(const Wrappers_Matrix6d* pVal, BitStream* pBitStrm, int* pErrCode, flag bCheckConstraints);

#define i3ds_asn1_ERR_UPER_DECODE_WRAPPERS_MATRIX6D		10077  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_WRAPPERS_MATRIX6D_DATA		10070  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_WRAPPERS_MATRIX6D_DATA_ELM_2		10065  /**/
flag Wrappers_Matrix6d_Decode(Wrappers_Matrix6d* pVal, BitStream* pBitStrm, int* pErrCode);
/*-- Base_TwistWithCovariance --------------------------------------------*/
typedef struct {
    Wrappers_Vector3d vel;
    Wrappers_Vector3d rot;
    Wrappers_Matrix6d cov;

} Base_TwistWithCovariance;

void Base_TwistWithCovariance_Initialize(Base_TwistWithCovariance* pVal);

#define i3ds_asn1_ERR_BASE_TWISTWITHCOVARIANCE		4610  /**/
#define i3ds_asn1_i3ds_asn1_ERR_BASE_TWISTWITHCOVARIANCE_VEL_2		4543  /**/
#define i3ds_asn1_i3ds_asn1_ERR_BASE_TWISTWITHCOVARIANCE_ROT_2		4574  /**/
#define i3ds_asn1_i3ds_asn1_ERR_BASE_TWISTWITHCOVARIANCE_COV_2		4605  /**/
flag Base_TwistWithCovariance_IsConstraintValid(const Base_TwistWithCovariance* pVal, int* pErrCode);

#define i3ds_asn1_ERR_UPER_ENCODE_BASE_TWISTWITHCOVARIANCE		4611  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_TWISTWITHCOVARIANCE_VEL_2		4544  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_TWISTWITHCOVARIANCE_ROT_2		4575  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_TWISTWITHCOVARIANCE_COV_2		4606  /**/
#define i3ds_asn1_Base_TwistWithCovariance_REQUIRED_BYTES_FOR_ENCODING       548 
#define i3ds_asn1_Base_TwistWithCovariance_REQUIRED_BITS_FOR_ENCODING        4378

flag Base_TwistWithCovariance_Encode(const Base_TwistWithCovariance* pVal, BitStream* pBitStrm, int* pErrCode, flag bCheckConstraints);

#define i3ds_asn1_ERR_UPER_DECODE_BASE_TWISTWITHCOVARIANCE		4612  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_TWISTWITHCOVARIANCE_VEL_2		4545  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_TWISTWITHCOVARIANCE_ROT_2		4576  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_TWISTWITHCOVARIANCE_COV_2		4607  /**/
flag Base_TwistWithCovariance_Decode(Base_TwistWithCovariance* pVal, BitStream* pBitStrm, int* pErrCode);
/*-- Base_TwistWithCovariance_m --------------------------------------------*/
typedef struct {
    Wrappers_Vector3d vel;
    Wrappers_Vector3d rot;
    Wrappers_Matrix6d cov;

} Base_TwistWithCovariance_m;

void Base_TwistWithCovariance_m_Initialize(Base_TwistWithCovariance_m* pVal);

#define i3ds_asn1_i3ds_asn1_ERR_BASE_TWISTWITHCOVARIANCE_M		10594  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_BASE_TWISTWITHCOVARIANCE_M_VEL_2		10527  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_BASE_TWISTWITHCOVARIANCE_M_ROT_2		10558  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_BASE_TWISTWITHCOVARIANCE_M_COV_2		10589  /**/
flag Base_TwistWithCovariance_m_IsConstraintValid(const Base_TwistWithCovariance_m* pVal, int* pErrCode);

#define i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_TWISTWITHCOVARIANCE_M		10595  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_TWISTWITHCOVARIANCE_M_VEL_2		10528  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_TWISTWITHCOVARIANCE_M_ROT_2		10559  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_TWISTWITHCOVARIANCE_M_COV_2		10590  /**/
#define i3ds_asn1_Base_TwistWithCovariance_m_REQUIRED_BYTES_FOR_ENCODING       548 
#define i3ds_asn1_Base_TwistWithCovariance_m_REQUIRED_BITS_FOR_ENCODING        4378

flag Base_TwistWithCovariance_m_Encode(const Base_TwistWithCovariance_m* pVal, BitStream* pBitStrm, int* pErrCode, flag bCheckConstraints);

#define i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_TWISTWITHCOVARIANCE_M		10596  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_TWISTWITHCOVARIANCE_M_VEL_2		10529  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_TWISTWITHCOVARIANCE_M_ROT_2		10560  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_TWISTWITHCOVARIANCE_M_COV_2		10591  /**/
flag Base_TwistWithCovariance_m_Decode(Base_TwistWithCovariance_m* pVal, BitStream* pBitStrm, int* pErrCode);
/*-- Wrappers_Quaterniond --------------------------------------------*/


typedef struct {
    int nCount; 
    
    T_Double arr[3];
} Wrappers_Quaterniond_im;
typedef struct {
    Wrappers_Quaterniond_im im;
    T_Double re;

} Wrappers_Quaterniond;

void Wrappers_Quaterniond_im_Initialize(Wrappers_Quaterniond_im* pVal);
void Wrappers_Quaterniond_Initialize(Wrappers_Quaterniond* pVal);

#define i3ds_asn1_ERR_WRAPPERS_QUATERNIOND		10163  /**/
#define i3ds_asn1_i3ds_asn1_ERR_WRAPPERS_QUATERNIOND_IM		10144  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_WRAPPERS_QUATERNIOND_IM_ELM_2		10139  /**/
#define i3ds_asn1_i3ds_asn1_ERR_WRAPPERS_QUATERNIOND_RE_2		10158  /**/
flag Wrappers_Quaterniond_IsConstraintValid(const Wrappers_Quaterniond* pVal, int* pErrCode);

#define i3ds_asn1_ERR_UPER_ENCODE_WRAPPERS_QUATERNIOND		10164  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_WRAPPERS_QUATERNIOND_IM		10145  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_WRAPPERS_QUATERNIOND_IM_ELM_2		10140  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_WRAPPERS_QUATERNIOND_RE_2		10159  /**/
#define i3ds_asn1_Wrappers_Quaterniond_REQUIRED_BYTES_FOR_ENCODING       53 
#define i3ds_asn1_Wrappers_Quaterniond_REQUIRED_BITS_FOR_ENCODING        418

flag Wrappers_Quaterniond_Encode(const Wrappers_Quaterniond* pVal, BitStream* pBitStrm, int* pErrCode, flag bCheckConstraints);

#define i3ds_asn1_ERR_UPER_DECODE_WRAPPERS_QUATERNIOND		10165  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_WRAPPERS_QUATERNIOND_IM		10146  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_WRAPPERS_QUATERNIOND_IM_ELM_2		10141  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_WRAPPERS_QUATERNIOND_RE_2		10160  /**/
flag Wrappers_Quaterniond_Decode(Wrappers_Quaterniond* pVal, BitStream* pBitStrm, int* pErrCode);
/*-- Base_Pose --------------------------------------------*/
typedef struct {
    Wrappers_Vector3d position;
    Wrappers_Quaterniond orientation;

} Base_Pose;

void Base_Pose_Initialize(Base_Pose* pVal);

#define i3ds_asn1_ERR_BASE_POSE		4398  /**/
#define i3ds_asn1_i3ds_asn1_ERR_BASE_POSE_POSITION_2		4350  /**/
#define i3ds_asn1_i3ds_asn1_ERR_BASE_POSE_ORIENTATION_2		4393  /**/
flag Base_Pose_IsConstraintValid(const Base_Pose* pVal, int* pErrCode);

#define i3ds_asn1_ERR_UPER_ENCODE_BASE_POSE		4399  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_POSE_POSITION_2		4351  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_POSE_ORIENTATION_2		4394  /**/
#define i3ds_asn1_Base_Pose_REQUIRED_BYTES_FOR_ENCODING       92 
#define i3ds_asn1_Base_Pose_REQUIRED_BITS_FOR_ENCODING        732

flag Base_Pose_Encode(const Base_Pose* pVal, BitStream* pBitStrm, int* pErrCode, flag bCheckConstraints);

#define i3ds_asn1_ERR_UPER_DECODE_BASE_POSE		4400  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_POSE_POSITION_2		4352  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_POSE_ORIENTATION_2		4395  /**/
flag Base_Pose_Decode(Base_Pose* pVal, BitStream* pBitStrm, int* pErrCode);
/*-- Base_TransformWithCovariance --------------------------------------------*/
typedef struct {
    Wrappers_Vector3d translation;
    Wrappers_Quaterniond orientation;
    Wrappers_Matrix6d cov;

} Base_TransformWithCovariance;

void Base_TransformWithCovariance_Initialize(Base_TransformWithCovariance* pVal);

#define i3ds_asn1_ERR_BASE_TRANSFORMWITHCOVARIANCE		4510  /**/
#define i3ds_asn1_i3ds_asn1_ERR_BASE_TRANSFORMWITHCOVARIANCE_TRANSLATION_2		4431  /**/
#define i3ds_asn1_i3ds_asn1_ERR_BASE_TRANSFORMWITHCOVARIANCE_ORIENTATION_2		4474  /**/
#define i3ds_asn1_i3ds_asn1_ERR_BASE_TRANSFORMWITHCOVARIANCE_COV_2		4505  /**/
flag Base_TransformWithCovariance_IsConstraintValid(const Base_TransformWithCovariance* pVal, int* pErrCode);

#define i3ds_asn1_ERR_UPER_ENCODE_BASE_TRANSFORMWITHCOVARIANCE		4511  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_TRANSFORMWITHCOVARIANCE_TRANSLATION_2		4432  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_TRANSFORMWITHCOVARIANCE_ORIENTATION_2		4475  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_TRANSFORMWITHCOVARIANCE_COV_2		4506  /**/
#define i3ds_asn1_Base_TransformWithCovariance_REQUIRED_BYTES_FOR_ENCODING       561 
#define i3ds_asn1_Base_TransformWithCovariance_REQUIRED_BITS_FOR_ENCODING        4482

flag Base_TransformWithCovariance_Encode(const Base_TransformWithCovariance* pVal, BitStream* pBitStrm, int* pErrCode, flag bCheckConstraints);

#define i3ds_asn1_ERR_UPER_DECODE_BASE_TRANSFORMWITHCOVARIANCE		4512  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_TRANSFORMWITHCOVARIANCE_TRANSLATION_2		4433  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_TRANSFORMWITHCOVARIANCE_ORIENTATION_2		4476  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_TRANSFORMWITHCOVARIANCE_COV_2		4507  /**/
flag Base_TransformWithCovariance_Decode(Base_TransformWithCovariance* pVal, BitStream* pBitStrm, int* pErrCode);
/*-- Base_Pose_m --------------------------------------------*/
typedef struct {
    Wrappers_Vector3d position;
    Wrappers_Quaterniond orientation;

} Base_Pose_m;

void Base_Pose_m_Initialize(Base_Pose_m* pVal);

#define i3ds_asn1_i3ds_asn1_ERR_BASE_POSE_M		10382  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_BASE_POSE_M_POSITION_2		10334  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_BASE_POSE_M_ORIENTATION_2		10377  /**/
flag Base_Pose_m_IsConstraintValid(const Base_Pose_m* pVal, int* pErrCode);

#define i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_POSE_M		10383  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_POSE_M_POSITION_2		10335  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_POSE_M_ORIENTATION_2		10378  /**/
#define i3ds_asn1_Base_Pose_m_REQUIRED_BYTES_FOR_ENCODING       92 
#define i3ds_asn1_Base_Pose_m_REQUIRED_BITS_FOR_ENCODING        732

flag Base_Pose_m_Encode(const Base_Pose_m* pVal, BitStream* pBitStrm, int* pErrCode, flag bCheckConstraints);

#define i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_POSE_M		10384  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_POSE_M_POSITION_2		10336  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_POSE_M_ORIENTATION_2		10379  /**/
flag Base_Pose_m_Decode(Base_Pose_m* pVal, BitStream* pBitStrm, int* pErrCode);
/*-- Base_TransformWithCovariance_m --------------------------------------------*/
typedef struct {
    Wrappers_Vector3d translation;
    Wrappers_Quaterniond orientation;
    Wrappers_Matrix6d cov;

} Base_TransformWithCovariance_m;

void Base_TransformWithCovariance_m_Initialize(Base_TransformWithCovariance_m* pVal);

#define i3ds_asn1_i3ds_asn1_ERR_BASE_TRANSFORMWITHCOVARIANCE_M		10494  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_BASE_TRANSFORMWITHCOVARIANCE_M_TRANSLATION_2		10415  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_BASE_TRANSFORMWITHCOVARIANCE_M_ORIENTATION_2		10458  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_BASE_TRANSFORMWITHCOVARIANCE_M_COV_2		10489  /**/
flag Base_TransformWithCovariance_m_IsConstraintValid(const Base_TransformWithCovariance_m* pVal, int* pErrCode);

#define i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_TRANSFORMWITHCOVARIANCE_M		10495  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_TRANSFORMWITHCOVARIANCE_M_TRANSLATION_2		10416  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_TRANSFORMWITHCOVARIANCE_M_ORIENTATION_2		10459  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_TRANSFORMWITHCOVARIANCE_M_COV_2		10490  /**/
#define i3ds_asn1_Base_TransformWithCovariance_m_REQUIRED_BYTES_FOR_ENCODING       561 
#define i3ds_asn1_Base_TransformWithCovariance_m_REQUIRED_BITS_FOR_ENCODING        4482

flag Base_TransformWithCovariance_m_Encode(const Base_TransformWithCovariance_m* pVal, BitStream* pBitStrm, int* pErrCode, flag bCheckConstraints);

#define i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_TRANSFORMWITHCOVARIANCE_M		10496  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_TRANSFORMWITHCOVARIANCE_M_TRANSLATION_2		10417  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_TRANSFORMWITHCOVARIANCE_M_ORIENTATION_2		10460  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_TRANSFORMWITHCOVARIANCE_M_COV_2		10491  /**/
flag Base_TransformWithCovariance_m_Decode(Base_TransformWithCovariance_m* pVal, BitStream* pBitStrm, int* pErrCode);
/*-- Wrappers_VectorXd --------------------------------------------*/


typedef struct {
    int nCount; 
    
    T_Double arr[200];
} Wrappers_VectorXd_data;
typedef struct {
    Wrappers_VectorXd_data data;

} Wrappers_VectorXd;

void Wrappers_VectorXd_data_Initialize(Wrappers_VectorXd_data* pVal);
void Wrappers_VectorXd_Initialize(Wrappers_VectorXd* pVal);

#define i3ds_asn1_ERR_WRAPPERS_VECTORXD		10189  /**/
#define i3ds_asn1_i3ds_asn1_ERR_WRAPPERS_VECTORXD_DATA		10182  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_WRAPPERS_VECTORXD_DATA_ELM_2		10177  /**/
flag Wrappers_VectorXd_IsConstraintValid(const Wrappers_VectorXd* pVal, int* pErrCode);

#define i3ds_asn1_ERR_UPER_ENCODE_WRAPPERS_VECTORXD		10190  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_WRAPPERS_VECTORXD_DATA		10183  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_WRAPPERS_VECTORXD_DATA_ELM_2		10178  /**/
#define i3ds_asn1_Wrappers_VectorXd_REQUIRED_BYTES_FOR_ENCODING       2601 
#define i3ds_asn1_Wrappers_VectorXd_REQUIRED_BITS_FOR_ENCODING        20808

flag Wrappers_VectorXd_Encode(const Wrappers_VectorXd* pVal, BitStream* pBitStrm, int* pErrCode, flag bCheckConstraints);

#define i3ds_asn1_ERR_UPER_DECODE_WRAPPERS_VECTORXD		10191  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_WRAPPERS_VECTORXD_DATA		10184  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_WRAPPERS_VECTORXD_DATA_ELM_2		10179  /**/
flag Wrappers_VectorXd_Decode(Wrappers_VectorXd* pVal, BitStream* pBitStrm, int* pErrCode);
/*-- Base_JointState --------------------------------------------*/
typedef struct {
    T_Double position;
    T_Float speed;
    T_Float effort;
    T_Float raw;
    T_Float acceleration;

} Base_JointState;

void Base_JointState_Initialize(Base_JointState* pVal);

#define i3ds_asn1_ERR_BASE_JOINTSTATE		4765  /**/
#define i3ds_asn1_i3ds_asn1_ERR_BASE_JOINTSTATE_POSITION_2		4712  /**/
#define i3ds_asn1_i3ds_asn1_ERR_BASE_JOINTSTATE_SPEED_2		4724  /**/
#define i3ds_asn1_i3ds_asn1_ERR_BASE_JOINTSTATE_EFFORT_2		4736  /**/
#define i3ds_asn1_i3ds_asn1_ERR_BASE_JOINTSTATE_RAW_2		4748  /**/
#define i3ds_asn1_i3ds_asn1_ERR_BASE_JOINTSTATE_ACCELERATION_2		4760  /**/
flag Base_JointState_IsConstraintValid(const Base_JointState* pVal, int* pErrCode);

#define i3ds_asn1_ERR_UPER_ENCODE_BASE_JOINTSTATE		4766  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_JOINTSTATE_POSITION_2		4713  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_JOINTSTATE_SPEED_2		4725  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_JOINTSTATE_EFFORT_2		4737  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_JOINTSTATE_RAW_2		4749  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_JOINTSTATE_ACCELERATION_2		4761  /**/
#define i3ds_asn1_Base_JointState_REQUIRED_BYTES_FOR_ENCODING       65 
#define i3ds_asn1_Base_JointState_REQUIRED_BITS_FOR_ENCODING        520

flag Base_JointState_Encode(const Base_JointState* pVal, BitStream* pBitStrm, int* pErrCode, flag bCheckConstraints);

#define i3ds_asn1_ERR_UPER_DECODE_BASE_JOINTSTATE		4767  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_JOINTSTATE_POSITION_2		4714  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_JOINTSTATE_SPEED_2		4726  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_JOINTSTATE_EFFORT_2		4738  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_JOINTSTATE_RAW_2		4750  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_JOINTSTATE_ACCELERATION_2		4762  /**/
flag Base_JointState_Decode(Base_JointState* pVal, BitStream* pBitStrm, int* pErrCode);


typedef struct {
    int nCount; 
    
    Base_JointState arr[200];
} Base_JointTrajectory;

void Base_JointTrajectory_Initialize(Base_JointTrajectory* pVal);

#define i3ds_asn1_ERR_BASE_JOINTTRAJECTORY		3909  /**/
#define i3ds_asn1_i3ds_asn1_ERR_BASE_JOINTTRAJECTORY_ELM_2		3904  /**/
flag Base_JointTrajectory_IsConstraintValid(const Base_JointTrajectory* pVal, int* pErrCode);

#define i3ds_asn1_ERR_UPER_ENCODE_BASE_JOINTTRAJECTORY		3910  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_JOINTTRAJECTORY_ELM_2		3905  /**/
#define i3ds_asn1_Base_JointTrajectory_REQUIRED_BYTES_FOR_ENCODING       13001 
#define i3ds_asn1_Base_JointTrajectory_REQUIRED_BITS_FOR_ENCODING        104008

flag Base_JointTrajectory_Encode(const Base_JointTrajectory* pVal, BitStream* pBitStrm, int* pErrCode, flag bCheckConstraints);

#define i3ds_asn1_ERR_UPER_DECODE_BASE_JOINTTRAJECTORY		3911  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_JOINTTRAJECTORY_ELM_2		3906  /**/
flag Base_JointTrajectory_Decode(Base_JointTrajectory* pVal, BitStream* pBitStrm, int* pErrCode);
/*-- Base_JointLimitRange --------------------------------------------*/
typedef struct {
    Base_JointState min;
    Base_JointState max;

} Base_JointLimitRange;

void Base_JointLimitRange_Initialize(Base_JointLimitRange* pVal);

#define i3ds_asn1_ERR_BASE_JOINTLIMITRANGE		5245  /**/
#define i3ds_asn1_i3ds_asn1_ERR_BASE_JOINTLIMITRANGE_MIN_2		5168  /**/
#define i3ds_asn1_i3ds_asn1_ERR_BASE_JOINTLIMITRANGE_MAX_2		5240  /**/
flag Base_JointLimitRange_IsConstraintValid(const Base_JointLimitRange* pVal, int* pErrCode);

#define i3ds_asn1_ERR_UPER_ENCODE_BASE_JOINTLIMITRANGE		5246  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_JOINTLIMITRANGE_MIN_2		5169  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_JOINTLIMITRANGE_MAX_2		5241  /**/
#define i3ds_asn1_Base_JointLimitRange_REQUIRED_BYTES_FOR_ENCODING       130 
#define i3ds_asn1_Base_JointLimitRange_REQUIRED_BITS_FOR_ENCODING        1040

flag Base_JointLimitRange_Encode(const Base_JointLimitRange* pVal, BitStream* pBitStrm, int* pErrCode, flag bCheckConstraints);

#define i3ds_asn1_ERR_UPER_DECODE_BASE_JOINTLIMITRANGE		5247  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_JOINTLIMITRANGE_MIN_2		5170  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_JOINTLIMITRANGE_MAX_2		5242  /**/
flag Base_JointLimitRange_Decode(Base_JointLimitRange* pVal, BitStream* pBitStrm, int* pErrCode);
/*-- Base_Pressure --------------------------------------------*/
typedef struct {
    T_Float pascal;

} Base_Pressure;

void Base_Pressure_Initialize(Base_Pressure* pVal);

#define i3ds_asn1_ERR_BASE_PRESSURE		4865  /**/
#define i3ds_asn1_i3ds_asn1_ERR_BASE_PRESSURE_PASCAL_2		4860  /**/
flag Base_Pressure_IsConstraintValid(const Base_Pressure* pVal, int* pErrCode);

#define i3ds_asn1_ERR_UPER_ENCODE_BASE_PRESSURE		4866  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_PRESSURE_PASCAL_2		4861  /**/
#define i3ds_asn1_Base_Pressure_REQUIRED_BYTES_FOR_ENCODING       13 
#define i3ds_asn1_Base_Pressure_REQUIRED_BITS_FOR_ENCODING        104

flag Base_Pressure_Encode(const Base_Pressure* pVal, BitStream* pBitStrm, int* pErrCode, flag bCheckConstraints);

#define i3ds_asn1_ERR_UPER_DECODE_BASE_PRESSURE		4867  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_PRESSURE_PASCAL_2		4862  /**/
flag Base_Pressure_Decode(Base_Pressure* pVal, BitStream* pBitStrm, int* pErrCode);
/*-- Base_Time --------------------------------------------*/
typedef struct {
    T_Int64 microseconds;

} Base_Time;

void Base_Time_Initialize(Base_Time* pVal);

#define i3ds_asn1_ERR_BASE_TIME		4903  /**/
#define i3ds_asn1_i3ds_asn1_ERR_BASE_TIME_MICROSECONDS_2		4898  /**/
flag Base_Time_IsConstraintValid(const Base_Time* pVal, int* pErrCode);

#define i3ds_asn1_ERR_UPER_ENCODE_BASE_TIME		4904  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_TIME_MICROSECONDS_2		4899  /**/
#define i3ds_asn1_Base_Time_REQUIRED_BYTES_FOR_ENCODING       8 
#define i3ds_asn1_Base_Time_REQUIRED_BITS_FOR_ENCODING        64

flag Base_Time_Encode(const Base_Time* pVal, BitStream* pBitStrm, int* pErrCode, flag bCheckConstraints);

#define i3ds_asn1_ERR_UPER_DECODE_BASE_TIME		4905  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_TIME_MICROSECONDS_2		4900  /**/
flag Base_Time_Decode(Base_Time* pVal, BitStream* pBitStrm, int* pErrCode);
/*-- Base_TimeStamped_Base_commands_Motion2D --------------------------------------------*/
typedef struct {
    T_Double translation;
    T_Double rotation;
    Base_Angle heading;
    Base_Time time;

} Base_TimeStamped_Base_commands_Motion2D;

void Base_TimeStamped_Base_commands_Motion2D_Initialize(Base_TimeStamped_Base_commands_Motion2D* pVal);

#define i3ds_asn1_i3ds_asn1_ERR_BASE_TIMESTAMPED_BASE_COMMANDS_MOTION2D		5324  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_BASE_TIMESTAMPED_BASE_COMMANDS_MOTION2D_TRANSLATION_2		5259  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_BASE_TIMESTAMPED_BASE_COMMANDS_MOTION2D_ROTATION_2		5271  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_BASE_TIMESTAMPED_BASE_COMMANDS_MOTION2D_HEADING_2		5295  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_BASE_TIMESTAMPED_BASE_COMMANDS_MOTION2D_TIME_2		5319  /**/
flag Base_TimeStamped_Base_commands_Motion2D_IsConstraintValid(const Base_TimeStamped_Base_commands_Motion2D* pVal, int* pErrCode);

#define i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_TIMESTAMPED_BASE_COMMANDS_MOTION2D		5325  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_TIMESTAMPED_BASE_COMMANDS_MOTION2D_TRANSLATION_2		5260  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_TIMESTAMPED_BASE_COMMANDS_MOTION2D_ROTATION_2		5272  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_TIMESTAMPED_BASE_COMMANDS_MOTION2D_HEADING_2		5296  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_TIMESTAMPED_BASE_COMMANDS_MOTION2D_TIME_2		5320  /**/
#define Base_TimeStamped_i3ds_asn1_Base_commands_Motion2D_REQUIRED_BYTES_FOR_ENCODING       47 
#define Base_TimeStamped_i3ds_asn1_Base_commands_Motion2D_REQUIRED_BITS_FOR_ENCODING        376

flag Base_TimeStamped_Base_commands_Motion2D_Encode(const Base_TimeStamped_Base_commands_Motion2D* pVal, BitStream* pBitStrm, int* pErrCode, flag bCheckConstraints);

#define i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_TIMESTAMPED_BASE_COMMANDS_MOTION2D		5326  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_TIMESTAMPED_BASE_COMMANDS_MOTION2D_TRANSLATION_2		5261  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_TIMESTAMPED_BASE_COMMANDS_MOTION2D_ROTATION_2		5273  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_TIMESTAMPED_BASE_COMMANDS_MOTION2D_HEADING_2		5297  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_TIMESTAMPED_BASE_COMMANDS_MOTION2D_TIME_2		5321  /**/
flag Base_TimeStamped_Base_commands_Motion2D_Decode(Base_TimeStamped_Base_commands_Motion2D* pVal, BitStream* pBitStrm, int* pErrCode);
/*-- Base_LinearAngular6DCommand --------------------------------------------*/
typedef struct {
    Base_Time time;
    Wrappers_Vector3d linear;
    Wrappers_Vector3d angular;

} Base_LinearAngular6DCommand;

void Base_LinearAngular6DCommand_Initialize(Base_LinearAngular6DCommand* pVal);

#define i3ds_asn1_ERR_BASE_LINEARANGULAR6DCOMMAND		5417  /**/
#define i3ds_asn1_i3ds_asn1_ERR_BASE_LINEARANGULAR6DCOMMAND_TIME_2		5350  /**/
#define i3ds_asn1_i3ds_asn1_ERR_BASE_LINEARANGULAR6DCOMMAND_LINEAR_2		5381  /**/
#define i3ds_asn1_i3ds_asn1_ERR_BASE_LINEARANGULAR6DCOMMAND_ANGULAR_2		5412  /**/
flag Base_LinearAngular6DCommand_IsConstraintValid(const Base_LinearAngular6DCommand* pVal, int* pErrCode);

#define i3ds_asn1_ERR_UPER_ENCODE_BASE_LINEARANGULAR6DCOMMAND		5418  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_LINEARANGULAR6DCOMMAND_TIME_2		5351  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_LINEARANGULAR6DCOMMAND_LINEAR_2		5382  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_LINEARANGULAR6DCOMMAND_ANGULAR_2		5413  /**/
#define i3ds_asn1_Base_LinearAngular6DCommand_REQUIRED_BYTES_FOR_ENCODING       87 
#define i3ds_asn1_Base_LinearAngular6DCommand_REQUIRED_BITS_FOR_ENCODING        692

flag Base_LinearAngular6DCommand_Encode(const Base_LinearAngular6DCommand* pVal, BitStream* pBitStrm, int* pErrCode, flag bCheckConstraints);

#define i3ds_asn1_ERR_UPER_DECODE_BASE_LINEARANGULAR6DCOMMAND		5419  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_LINEARANGULAR6DCOMMAND_TIME_2		5352  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_LINEARANGULAR6DCOMMAND_LINEAR_2		5383  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_LINEARANGULAR6DCOMMAND_ANGULAR_2		5414  /**/
flag Base_LinearAngular6DCommand_Decode(Base_LinearAngular6DCommand* pVal, BitStream* pBitStrm, int* pErrCode);
/*-- Base_samples_BodyState --------------------------------------------*/
typedef struct {
    Base_Time time;
    Base_TransformWithCovariance pose;
    Base_TwistWithCovariance velocity;

} Base_samples_BodyState;

void Base_samples_BodyState_Initialize(Base_samples_BodyState* pVal);

#define i3ds_asn1_ERR_BASE_SAMPLES_BODYSTATE		5804  /**/
#define i3ds_asn1_i3ds_asn1_ERR_BASE_SAMPLES_BODYSTATE_TIME_2		5577  /**/
#define i3ds_asn1_i3ds_asn1_ERR_BASE_SAMPLES_BODYSTATE_POSE_2		5694  /**/
#define i3ds_asn1_i3ds_asn1_ERR_BASE_SAMPLES_BODYSTATE_VELOCITY_2		5799  /**/
flag Base_samples_BodyState_IsConstraintValid(const Base_samples_BodyState* pVal, int* pErrCode);

#define i3ds_asn1_ERR_UPER_ENCODE_BASE_SAMPLES_BODYSTATE		5805  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_SAMPLES_BODYSTATE_TIME_2		5578  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_SAMPLES_BODYSTATE_POSE_2		5695  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_SAMPLES_BODYSTATE_VELOCITY_2		5800  /**/
#define i3ds_asn1_Base_samples_BodyState_REQUIRED_BYTES_FOR_ENCODING       1116 
#define i3ds_asn1_Base_samples_BodyState_REQUIRED_BITS_FOR_ENCODING        8924

flag Base_samples_BodyState_Encode(const Base_samples_BodyState* pVal, BitStream* pBitStrm, int* pErrCode, flag bCheckConstraints);

#define i3ds_asn1_ERR_UPER_DECODE_BASE_SAMPLES_BODYSTATE		5806  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_SAMPLES_BODYSTATE_TIME_2		5579  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_SAMPLES_BODYSTATE_POSE_2		5696  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_SAMPLES_BODYSTATE_VELOCITY_2		5801  /**/
flag Base_samples_BodyState_Decode(Base_samples_BodyState* pVal, BitStream* pBitStrm, int* pErrCode);
/*-- Base_samples_IMUSensors --------------------------------------------*/
typedef struct {
    Base_Time time;
    Wrappers_Vector3d acc;
    Wrappers_Vector3d gyro;
    Wrappers_Vector3d mag;

} Base_samples_IMUSensors;

void Base_samples_IMUSensors_Initialize(Base_samples_IMUSensors* pVal);

#define i3ds_asn1_ERR_BASE_SAMPLES_IMUSENSORS		5928  /**/
#define i3ds_asn1_i3ds_asn1_ERR_BASE_SAMPLES_IMUSENSORS_TIME_2		5830  /**/
#define i3ds_asn1_i3ds_asn1_ERR_BASE_SAMPLES_IMUSENSORS_ACC_2		5861  /**/
#define i3ds_asn1_i3ds_asn1_ERR_BASE_SAMPLES_IMUSENSORS_GYRO_2		5892  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_BASE_SAMPLES_IMUSENSORS_MAG_2		5923  /**/
flag Base_samples_IMUSensors_IsConstraintValid(const Base_samples_IMUSensors* pVal, int* pErrCode);

#define i3ds_asn1_ERR_UPER_ENCODE_BASE_SAMPLES_IMUSENSORS		5929  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_SAMPLES_IMUSENSORS_TIME_2		5831  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_SAMPLES_IMUSENSORS_ACC_2		5862  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_SAMPLES_IMUSENSORS_GYRO_2		5893  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_SAMPLES_IMUSENSORS_MAG_2		5924  /**/
#define i3ds_asn1_Base_samples_IMUSensors_REQUIRED_BYTES_FOR_ENCODING       126 
#define i3ds_asn1_Base_samples_IMUSensors_REQUIRED_BITS_FOR_ENCODING        1006

flag Base_samples_IMUSensors_Encode(const Base_samples_IMUSensors* pVal, BitStream* pBitStrm, int* pErrCode, flag bCheckConstraints);

#define i3ds_asn1_ERR_UPER_DECODE_BASE_SAMPLES_IMUSENSORS		5930  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_SAMPLES_IMUSENSORS_TIME_2		5832  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_SAMPLES_IMUSENSORS_ACC_2		5863  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_SAMPLES_IMUSENSORS_GYRO_2		5894  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_SAMPLES_IMUSENSORS_MAG_2		5925  /**/
flag Base_samples_IMUSensors_Decode(Base_samples_IMUSensors* pVal, BitStream* pBitStrm, int* pErrCode);
/*-- Base_samples_Motion2D --------------------------------------------*/
typedef struct {
    T_Double translation;
    T_Double rotation;
    Base_Angle heading;
    Base_Time time;

} Base_samples_Motion2D;

void Base_samples_Motion2D_Initialize(Base_samples_Motion2D* pVal);

#define i3ds_asn1_ERR_BASE_SAMPLES_MOTION2D		6007  /**/
#define i3ds_asn1_i3ds_asn1_ERR_BASE_SAMPLES_MOTION2D_TRANSLATION_2		5942  /**/
#define i3ds_asn1_i3ds_asn1_ERR_BASE_SAMPLES_MOTION2D_ROTATION_2		5954  /**/
#define i3ds_asn1_i3ds_asn1_ERR_BASE_SAMPLES_MOTION2D_HEADING_2		5978  /**/
#define i3ds_asn1_i3ds_asn1_ERR_BASE_SAMPLES_MOTION2D_TIME_2		6002  /**/
flag Base_samples_Motion2D_IsConstraintValid(const Base_samples_Motion2D* pVal, int* pErrCode);

#define i3ds_asn1_ERR_UPER_ENCODE_BASE_SAMPLES_MOTION2D		6008  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_SAMPLES_MOTION2D_TRANSLATION_2		5943  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_SAMPLES_MOTION2D_ROTATION_2		5955  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_SAMPLES_MOTION2D_HEADING_2		5979  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_SAMPLES_MOTION2D_TIME_2		6003  /**/
#define i3ds_asn1_Base_samples_Motion2D_REQUIRED_BYTES_FOR_ENCODING       47 
#define i3ds_asn1_Base_samples_Motion2D_REQUIRED_BITS_FOR_ENCODING        376

flag Base_samples_Motion2D_Encode(const Base_samples_Motion2D* pVal, BitStream* pBitStrm, int* pErrCode, flag bCheckConstraints);

#define i3ds_asn1_ERR_UPER_DECODE_BASE_SAMPLES_MOTION2D		6009  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_SAMPLES_MOTION2D_TRANSLATION_2		5944  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_SAMPLES_MOTION2D_ROTATION_2		5956  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_SAMPLES_MOTION2D_HEADING_2		5980  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_SAMPLES_MOTION2D_TIME_2		6004  /**/
flag Base_samples_Motion2D_Decode(Base_samples_Motion2D* pVal, BitStream* pBitStrm, int* pErrCode);
/*-- Base_samples_Pressure --------------------------------------------*/
typedef struct {
    T_Float pascal;
    Base_Time time;

} Base_samples_Pressure;

void Base_samples_Pressure_Initialize(Base_samples_Pressure* pVal);

#define i3ds_asn1_ERR_BASE_SAMPLES_PRESSURE		6050  /**/
#define i3ds_asn1_i3ds_asn1_ERR_BASE_SAMPLES_PRESSURE_PASCAL_2		6021  /**/
#define i3ds_asn1_i3ds_asn1_ERR_BASE_SAMPLES_PRESSURE_TIME_2		6045  /**/
flag Base_samples_Pressure_IsConstraintValid(const Base_samples_Pressure* pVal, int* pErrCode);

#define i3ds_asn1_ERR_UPER_ENCODE_BASE_SAMPLES_PRESSURE		6051  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_SAMPLES_PRESSURE_PASCAL_2		6022  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_SAMPLES_PRESSURE_TIME_2		6046  /**/
#define i3ds_asn1_Base_samples_Pressure_REQUIRED_BYTES_FOR_ENCODING       21 
#define i3ds_asn1_Base_samples_Pressure_REQUIRED_BITS_FOR_ENCODING        168

flag Base_samples_Pressure_Encode(const Base_samples_Pressure* pVal, BitStream* pBitStrm, int* pErrCode, flag bCheckConstraints);

#define i3ds_asn1_ERR_UPER_DECODE_BASE_SAMPLES_PRESSURE		6052  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_SAMPLES_PRESSURE_PASCAL_2		6023  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_SAMPLES_PRESSURE_TIME_2		6047  /**/
flag Base_samples_Pressure_Decode(Base_samples_Pressure* pVal, BitStream* pBitStrm, int* pErrCode);
/*-- Base_samples_RigidBodyAcceleration --------------------------------------------*/
typedef struct {
    Base_Time time;
    Wrappers_Vector3d acceleration;
    Wrappers_Matrix3d cov_acceleration;
    Wrappers_Vector3d angular_acceleration;
    Wrappers_Matrix3d cov_angular_acceleration;

} Base_samples_RigidBodyAcceleration;

void Base_samples_RigidBodyAcceleration_Initialize(Base_samples_RigidBodyAcceleration* pVal);

#define i3ds_asn1_ERR_BASE_SAMPLES_RIGIDBODYACCELERATION		6205  /**/
#define i3ds_asn1_i3ds_asn1_ERR_BASE_SAMPLES_RIGIDBODYACCELERATION_TIME_2		6076  /**/
#define i3ds_asn1_i3ds_asn1_ERR_BASE_SAMPLES_RIGIDBODYACCELERATION_ACCELERATION_2		6107  /**/
#define i3ds_asn1_i3ds_asn1_ERR_BASE_SAMPLES_RIGIDBODYACCELERATION_COV_ACCELERATION_2		6138  /**/
#define i3ds_asn1_i3ds_asn1_ERR_BASE_SAMPLES_RIGIDBODYACCELERATION_ANGULAR_ACCELERATION_2		6169  /**/
#define i3ds_asn1_i3ds_asn1_ERR_BASE_SAMPLES_RIGIDBODYACCELERATION_COV_ANGULAR_ACCELERATION_2		6200  /**/
flag Base_samples_RigidBodyAcceleration_IsConstraintValid(const Base_samples_RigidBodyAcceleration* pVal, int* pErrCode);

#define i3ds_asn1_ERR_UPER_ENCODE_BASE_SAMPLES_RIGIDBODYACCELERATION		6206  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_SAMPLES_RIGIDBODYACCELERATION_TIME_2		6077  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_SAMPLES_RIGIDBODYACCELERATION_ACCELERATION_2		6108  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_SAMPLES_RIGIDBODYACCELERATION_COV_ACCELERATION_2		6139  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_SAMPLES_RIGIDBODYACCELERATION_ANGULAR_ACCELERATION_2		6170  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_SAMPLES_RIGIDBODYACCELERATION_COV_ANGULAR_ACCELERATION_2		6201  /**/
#define i3ds_asn1_Base_samples_RigidBodyAcceleration_REQUIRED_BYTES_FOR_ENCODING       322 
#define i3ds_asn1_Base_samples_RigidBodyAcceleration_REQUIRED_BITS_FOR_ENCODING        2572

flag Base_samples_RigidBodyAcceleration_Encode(const Base_samples_RigidBodyAcceleration* pVal, BitStream* pBitStrm, int* pErrCode, flag bCheckConstraints);

#define i3ds_asn1_ERR_UPER_DECODE_BASE_SAMPLES_RIGIDBODYACCELERATION		6207  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_SAMPLES_RIGIDBODYACCELERATION_TIME_2		6078  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_SAMPLES_RIGIDBODYACCELERATION_ACCELERATION_2		6109  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_SAMPLES_RIGIDBODYACCELERATION_COV_ACCELERATION_2		6140  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_SAMPLES_RIGIDBODYACCELERATION_ANGULAR_ACCELERATION_2		6171  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_SAMPLES_RIGIDBODYACCELERATION_COV_ANGULAR_ACCELERATION_2		6202  /**/
flag Base_samples_RigidBodyAcceleration_Decode(Base_samples_RigidBodyAcceleration* pVal, BitStream* pBitStrm, int* pErrCode);
/*-- Base_samples_Wrench --------------------------------------------*/
typedef struct {
    Wrappers_Vector3d force;
    Wrappers_Vector3d torque;
    Base_Time time;

} Base_samples_Wrench;

void Base_samples_Wrench_Initialize(Base_samples_Wrench* pVal);

#define i3ds_asn1_ERR_BASE_SAMPLES_WRENCH		6298  /**/
#define i3ds_asn1_i3ds_asn1_ERR_BASE_SAMPLES_WRENCH_FORCE_2		6238  /**/
#define i3ds_asn1_i3ds_asn1_ERR_BASE_SAMPLES_WRENCH_TORQUE_2		6269  /**/
#define i3ds_asn1_i3ds_asn1_ERR_BASE_SAMPLES_WRENCH_TIME_2		6293  /**/
flag Base_samples_Wrench_IsConstraintValid(const Base_samples_Wrench* pVal, int* pErrCode);

#define i3ds_asn1_ERR_UPER_ENCODE_BASE_SAMPLES_WRENCH		6299  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_SAMPLES_WRENCH_FORCE_2		6239  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_SAMPLES_WRENCH_TORQUE_2		6270  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_SAMPLES_WRENCH_TIME_2		6294  /**/
#define i3ds_asn1_Base_samples_Wrench_REQUIRED_BYTES_FOR_ENCODING       87 
#define i3ds_asn1_Base_samples_Wrench_REQUIRED_BITS_FOR_ENCODING        692

flag Base_samples_Wrench_Encode(const Base_samples_Wrench* pVal, BitStream* pBitStrm, int* pErrCode, flag bCheckConstraints);

#define i3ds_asn1_ERR_UPER_DECODE_BASE_SAMPLES_WRENCH		6300  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_SAMPLES_WRENCH_FORCE_2		6240  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_SAMPLES_WRENCH_TORQUE_2		6271  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_SAMPLES_WRENCH_TIME_2		6295  /**/
flag Base_samples_Wrench_Decode(Base_samples_Wrench* pVal, BitStream* pBitStrm, int* pErrCode);
/*-- Base_samples_Pointcloud --------------------------------------------*/


typedef struct {
    int nCount; 
    
    Wrappers_Vector3d arr[200];
} Base_samples_Pointcloud_points;


typedef struct {
    int nCount; 
    
    Wrappers_Vector4d arr[200];
} Base_samples_Pointcloud_colors;
typedef struct {
    Base_Time time;
    Base_samples_Pointcloud_points points;
    Base_samples_Pointcloud_colors colors;

} Base_samples_Pointcloud;

void Base_samples_Pointcloud_points_Initialize(Base_samples_Pointcloud_points* pVal);
void Base_samples_Pointcloud_colors_Initialize(Base_samples_Pointcloud_colors* pVal);
void Base_samples_Pointcloud_Initialize(Base_samples_Pointcloud* pVal);

#define i3ds_asn1_ERR_BASE_SAMPLES_POINTCLOUD		7929  /**/
#define i3ds_asn1_i3ds_asn1_ERR_BASE_SAMPLES_POINTCLOUD_TIME_2		7848  /**/
#define i3ds_asn1_i3ds_asn1_ERR_BASE_SAMPLES_POINTCLOUD_POINTS		7884  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_BASE_SAMPLES_POINTCLOUD_POINTS_ELM_2		7879  /**/
#define i3ds_asn1_i3ds_asn1_ERR_BASE_SAMPLES_POINTCLOUD_COLORS		7922  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_BASE_SAMPLES_POINTCLOUD_COLORS_ELM_2		7917  /**/
flag Base_samples_Pointcloud_IsConstraintValid(const Base_samples_Pointcloud* pVal, int* pErrCode);

#define i3ds_asn1_ERR_UPER_ENCODE_BASE_SAMPLES_POINTCLOUD		7930  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_SAMPLES_POINTCLOUD_TIME_2		7849  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_SAMPLES_POINTCLOUD_POINTS		7885  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_SAMPLES_POINTCLOUD_POINTS_ELM_2		7880  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_SAMPLES_POINTCLOUD_COLORS		7923  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_SAMPLES_POINTCLOUD_COLORS_ELM_2		7918  /**/
#define i3ds_asn1_Base_samples_Pointcloud_REQUIRED_BYTES_FOR_ENCODING       18310 
#define i3ds_asn1_Base_samples_Pointcloud_REQUIRED_BITS_FOR_ENCODING        146480

flag Base_samples_Pointcloud_Encode(const Base_samples_Pointcloud* pVal, BitStream* pBitStrm, int* pErrCode, flag bCheckConstraints);

#define i3ds_asn1_ERR_UPER_DECODE_BASE_SAMPLES_POINTCLOUD		7931  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_SAMPLES_POINTCLOUD_TIME_2		7850  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_SAMPLES_POINTCLOUD_POINTS		7886  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_SAMPLES_POINTCLOUD_POINTS_ELM_2		7881  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_SAMPLES_POINTCLOUD_COLORS		7924  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_SAMPLES_POINTCLOUD_COLORS_ELM_2		7919  /**/
flag Base_samples_Pointcloud_Decode(Base_samples_Pointcloud* pVal, BitStream* pBitStrm, int* pErrCode);
/*-- Base_samples_SonarBeam --------------------------------------------*/
typedef struct {
    int nCount; 
    
    byte arr[200];
} Base_samples_SonarBeam_beam;

typedef struct {
    Base_Time time;
    Base_Angle bearing;
    T_Double sampling_interval;
    T_Float speed_of_sound;
    T_Float beamwidth_horizontal;
    T_Float beamwidth_vertical;
    Base_samples_SonarBeam_beam beam;

} Base_samples_SonarBeam;

void Base_samples_SonarBeam_beam_Initialize(Base_samples_SonarBeam_beam* pVal);
void Base_samples_SonarBeam_Initialize(Base_samples_SonarBeam* pVal);

#define i3ds_asn1_i3ds_asn1_ERR_BASE_SAMPLES_SONARBEAM		8574  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_BASE_SAMPLES_SONARBEAM_TIME_2		8490  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_BASE_SAMPLES_SONARBEAM_BEARING_2		8514  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_BASE_SAMPLES_SONARBEAM_SAMPLING_INTERVAL_2		8526  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_BASE_SAMPLES_SONARBEAM_SPEED_OF_SOUND_2		8538  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_BASE_SAMPLES_SONARBEAM_BEAMWIDTH_HORIZONTAL_2		8550  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_BASE_SAMPLES_SONARBEAM_BEAMWIDTH_VERTICAL_2		8562  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_BASE_SAMPLES_SONARBEAM_BEAM		8567  /**/
flag Base_samples_SonarBeam_IsConstraintValid(const Base_samples_SonarBeam* pVal, int* pErrCode);

#define i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_SAMPLES_SONARBEAM		8575  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_SAMPLES_SONARBEAM_TIME_2		8491  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_SAMPLES_SONARBEAM_BEARING_2		8515  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_SAMPLES_SONARBEAM_SAMPLING_INTERVAL_2		8527  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_SAMPLES_SONARBEAM_SPEED_OF_SOUND_2		8539  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_SAMPLES_SONARBEAM_BEAMWIDTH_HORIZONTAL_2		8551  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_SAMPLES_SONARBEAM_BEAMWIDTH_VERTICAL_2		8563  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_SAMPLES_SONARBEAM_BEAM		8568  /**/
#define i3ds_asn1_Base_samples_SonarBeam_REQUIRED_BYTES_FOR_ENCODING       274 
#define i3ds_asn1_Base_samples_SonarBeam_REQUIRED_BITS_FOR_ENCODING        2192

flag Base_samples_SonarBeam_Encode(const Base_samples_SonarBeam* pVal, BitStream* pBitStrm, int* pErrCode, flag bCheckConstraints);

#define i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_SAMPLES_SONARBEAM		8576  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_SAMPLES_SONARBEAM_TIME_2		8492  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_SAMPLES_SONARBEAM_BEARING_2		8516  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_SAMPLES_SONARBEAM_SAMPLING_INTERVAL_2		8528  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_SAMPLES_SONARBEAM_SPEED_OF_SOUND_2		8540  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_SAMPLES_SONARBEAM_BEAMWIDTH_HORIZONTAL_2		8552  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_SAMPLES_SONARBEAM_BEAMWIDTH_VERTICAL_2		8564  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_SAMPLES_SONARBEAM_BEAM		8569  /**/
flag Base_samples_SonarBeam_Decode(Base_samples_SonarBeam* pVal, BitStream* pBitStrm, int* pErrCode);
/*-- Base_commands_LinearAngular6DCommand_m --------------------------------------------*/
typedef struct {
    Base_Time time;
    Wrappers_Vector3d linear;
    Wrappers_Vector3d angular;

} Base_commands_LinearAngular6DCommand_m;

void Base_commands_LinearAngular6DCommand_m_Initialize(Base_commands_LinearAngular6DCommand_m* pVal);

#define i3ds_asn1_ERR_BASE_COMMANDS_LINEARANGULAR6DCOMMAND_M		10830  /**/
#define i3ds_asn1_i3ds_asn1_ERR_BASE_COMMANDS_LINEARANGULAR6DCOMMAND_M_TIME_2		10763  /**/
#define i3ds_asn1_i3ds_asn1_ERR_BASE_COMMANDS_LINEARANGULAR6DCOMMAND_M_LINEAR_2		10794  /**/
#define i3ds_asn1_i3ds_asn1_ERR_BASE_COMMANDS_LINEARANGULAR6DCOMMAND_M_ANGULAR_2		10825  /**/
flag Base_commands_LinearAngular6DCommand_m_IsConstraintValid(const Base_commands_LinearAngular6DCommand_m* pVal, int* pErrCode);

#define i3ds_asn1_ERR_UPER_ENCODE_BASE_COMMANDS_LINEARANGULAR6DCOMMAND_M		10831  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_COMMANDS_LINEARANGULAR6DCOMMAND_M_TIME_2		10764  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_COMMANDS_LINEARANGULAR6DCOMMAND_M_LINEAR_2		10795  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_COMMANDS_LINEARANGULAR6DCOMMAND_M_ANGULAR_2		10826  /**/
#define i3ds_asn1_Base_commands_LinearAngular6DCommand_m_REQUIRED_BYTES_FOR_ENCODING       87 
#define i3ds_asn1_Base_commands_LinearAngular6DCommand_m_REQUIRED_BITS_FOR_ENCODING        692

flag Base_commands_LinearAngular6DCommand_m_Encode(const Base_commands_LinearAngular6DCommand_m* pVal, BitStream* pBitStrm, int* pErrCode, flag bCheckConstraints);

#define i3ds_asn1_ERR_UPER_DECODE_BASE_COMMANDS_LINEARANGULAR6DCOMMAND_M		10832  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_COMMANDS_LINEARANGULAR6DCOMMAND_M_TIME_2		10765  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_COMMANDS_LINEARANGULAR6DCOMMAND_M_LINEAR_2		10796  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_COMMANDS_LINEARANGULAR6DCOMMAND_M_ANGULAR_2		10827  /**/
flag Base_commands_LinearAngular6DCommand_m_Decode(Base_commands_LinearAngular6DCommand_m* pVal, BitStream* pBitStrm, int* pErrCode);
/*-- Base_samples_BodyState_m --------------------------------------------*/
typedef struct {
    Base_Time time;
    Base_TransformWithCovariance_m pose;
    Base_TwistWithCovariance_m velocity;

} Base_samples_BodyState_m;

void Base_samples_BodyState_m_Initialize(Base_samples_BodyState_m* pVal);

#define i3ds_asn1_i3ds_asn1_ERR_BASE_SAMPLES_BODYSTATE_M		11083  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_BASE_SAMPLES_BODYSTATE_M_TIME_2		10856  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_BASE_SAMPLES_BODYSTATE_M_POSE_2		10973  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_BASE_SAMPLES_BODYSTATE_M_VELOCITY_2		11078  /**/
flag Base_samples_BodyState_m_IsConstraintValid(const Base_samples_BodyState_m* pVal, int* pErrCode);

#define i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_SAMPLES_BODYSTATE_M		11084  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_SAMPLES_BODYSTATE_M_TIME_2		10857  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_SAMPLES_BODYSTATE_M_POSE_2		10974  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_SAMPLES_BODYSTATE_M_VELOCITY_2		11079  /**/
#define i3ds_asn1_Base_samples_BodyState_m_REQUIRED_BYTES_FOR_ENCODING       1116 
#define i3ds_asn1_Base_samples_BodyState_m_REQUIRED_BITS_FOR_ENCODING        8924

flag Base_samples_BodyState_m_Encode(const Base_samples_BodyState_m* pVal, BitStream* pBitStrm, int* pErrCode, flag bCheckConstraints);

#define i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_SAMPLES_BODYSTATE_M		11085  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_SAMPLES_BODYSTATE_M_TIME_2		10858  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_SAMPLES_BODYSTATE_M_POSE_2		10975  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_SAMPLES_BODYSTATE_M_VELOCITY_2		11080  /**/
flag Base_samples_BodyState_m_Decode(Base_samples_BodyState_m* pVal, BitStream* pBitStrm, int* pErrCode);
/*-- Base_samples_IMUSensors_m --------------------------------------------*/
typedef struct {
    Base_Time time;
    Wrappers_Vector3d acc;
    Wrappers_Vector3d gyro;
    Wrappers_Vector3d mag;

} Base_samples_IMUSensors_m;

void Base_samples_IMUSensors_m_Initialize(Base_samples_IMUSensors_m* pVal);

#define i3ds_asn1_i3ds_asn1_ERR_BASE_SAMPLES_IMUSENSORS_M		11207  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_BASE_SAMPLES_IMUSENSORS_M_TIME_2		11109  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_BASE_SAMPLES_IMUSENSORS_M_ACC_2		11140  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_BASE_SAMPLES_IMUSENSORS_M_GYRO_2		11171  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_BASE_SAMPLES_IMUSENSORS_M_MAG_2		11202  /**/
flag Base_samples_IMUSensors_m_IsConstraintValid(const Base_samples_IMUSensors_m* pVal, int* pErrCode);

#define i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_SAMPLES_IMUSENSORS_M		11208  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_SAMPLES_IMUSENSORS_M_TIME_2		11110  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_SAMPLES_IMUSENSORS_M_ACC_2		11141  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_SAMPLES_IMUSENSORS_M_GYRO_2		11172  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_SAMPLES_IMUSENSORS_M_MAG_2		11203  /**/
#define i3ds_asn1_Base_samples_IMUSensors_m_REQUIRED_BYTES_FOR_ENCODING       126 
#define i3ds_asn1_Base_samples_IMUSensors_m_REQUIRED_BITS_FOR_ENCODING        1006

flag Base_samples_IMUSensors_m_Encode(const Base_samples_IMUSensors_m* pVal, BitStream* pBitStrm, int* pErrCode, flag bCheckConstraints);

#define i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_SAMPLES_IMUSENSORS_M		11209  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_SAMPLES_IMUSENSORS_M_TIME_2		11111  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_SAMPLES_IMUSENSORS_M_ACC_2		11142  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_SAMPLES_IMUSENSORS_M_GYRO_2		11173  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_SAMPLES_IMUSENSORS_M_MAG_2		11204  /**/
flag Base_samples_IMUSensors_m_Decode(Base_samples_IMUSensors_m* pVal, BitStream* pBitStrm, int* pErrCode);
/*-- Base_samples_RigidBodyAcceleration_m --------------------------------------------*/
typedef struct {
    Base_Time time;
    Wrappers_Vector3d acceleration;
    Wrappers_Matrix3d cov_acceleration;
    Wrappers_Vector3d angular_acceleration;
    Wrappers_Matrix3d cov_angular_acceleration;

} Base_samples_RigidBodyAcceleration_m;

void Base_samples_RigidBodyAcceleration_m_Initialize(Base_samples_RigidBodyAcceleration_m* pVal);

#define i3ds_asn1_i3ds_asn1_ERR_BASE_SAMPLES_RIGIDBODYACCELERATION_M		11362  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_BASE_SAMPLES_RIGIDBODYACCELERATION_M_TIME_2		11233  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_BASE_SAMPLES_RIGIDBODYACCELERATION_M_ACCELERATION_2		11264  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_BASE_SAMPLES_RIGIDBODYACCELERATION_M_COV_ACCELERATION_2		11295  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_BASE_SAMPLES_RIGIDBODYACCELERATION_M_ANGULAR_ACCELERATION_2		11326  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_BASE_SAMPLES_RIGIDBODYACCELERATION_M_COV_ANGULAR_ACCELERATION_2		11357  /**/
flag Base_samples_RigidBodyAcceleration_m_IsConstraintValid(const Base_samples_RigidBodyAcceleration_m* pVal, int* pErrCode);

#define i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_SAMPLES_RIGIDBODYACCELERATION_M		11363  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_SAMPLES_RIGIDBODYACCELERATION_M_TIME_2		11234  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_SAMPLES_RIGIDBODYACCELERATION_M_ACCELERATION_2		11265  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_SAMPLES_RIGIDBODYACCELERATION_M_COV_ACCELERATION_2		11296  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_SAMPLES_RIGIDBODYACCELERATION_M_ANGULAR_ACCELERATION_2		11327  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_SAMPLES_RIGIDBODYACCELERATION_M_COV_ANGULAR_ACCELERATION_2		11358  /**/
#define i3ds_asn1_Base_samples_RigidBodyAcceleration_m_REQUIRED_BYTES_FOR_ENCODING       322 
#define i3ds_asn1_Base_samples_RigidBodyAcceleration_m_REQUIRED_BITS_FOR_ENCODING        2572

flag Base_samples_RigidBodyAcceleration_m_Encode(const Base_samples_RigidBodyAcceleration_m* pVal, BitStream* pBitStrm, int* pErrCode, flag bCheckConstraints);

#define i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_SAMPLES_RIGIDBODYACCELERATION_M		11364  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_SAMPLES_RIGIDBODYACCELERATION_M_TIME_2		11235  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_SAMPLES_RIGIDBODYACCELERATION_M_ACCELERATION_2		11266  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_SAMPLES_RIGIDBODYACCELERATION_M_COV_ACCELERATION_2		11297  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_SAMPLES_RIGIDBODYACCELERATION_M_ANGULAR_ACCELERATION_2		11328  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_SAMPLES_RIGIDBODYACCELERATION_M_COV_ANGULAR_ACCELERATION_2		11359  /**/
flag Base_samples_RigidBodyAcceleration_m_Decode(Base_samples_RigidBodyAcceleration_m* pVal, BitStream* pBitStrm, int* pErrCode);
/*-- Base_samples_Wrench_m --------------------------------------------*/
typedef struct {
    Wrappers_Vector3d force;
    Wrappers_Vector3d torque;
    Base_Time time;

} Base_samples_Wrench_m;

void Base_samples_Wrench_m_Initialize(Base_samples_Wrench_m* pVal);

#define i3ds_asn1_i3ds_asn1_ERR_BASE_SAMPLES_WRENCH_M		11770  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_BASE_SAMPLES_WRENCH_M_FORCE_2		11710  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_BASE_SAMPLES_WRENCH_M_TORQUE_2		11741  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_BASE_SAMPLES_WRENCH_M_TIME_2		11765  /**/
flag Base_samples_Wrench_m_IsConstraintValid(const Base_samples_Wrench_m* pVal, int* pErrCode);

#define i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_SAMPLES_WRENCH_M		11771  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_SAMPLES_WRENCH_M_FORCE_2		11711  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_SAMPLES_WRENCH_M_TORQUE_2		11742  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_SAMPLES_WRENCH_M_TIME_2		11766  /**/
#define i3ds_asn1_Base_samples_Wrench_m_REQUIRED_BYTES_FOR_ENCODING       87 
#define i3ds_asn1_Base_samples_Wrench_m_REQUIRED_BITS_FOR_ENCODING        692

flag Base_samples_Wrench_m_Encode(const Base_samples_Wrench_m* pVal, BitStream* pBitStrm, int* pErrCode, flag bCheckConstraints);

#define i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_SAMPLES_WRENCH_M		11772  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_SAMPLES_WRENCH_M_FORCE_2		11712  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_SAMPLES_WRENCH_M_TORQUE_2		11743  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_SAMPLES_WRENCH_M_TIME_2		11767  /**/
flag Base_samples_Wrench_m_Decode(Base_samples_Wrench_m* pVal, BitStream* pBitStrm, int* pErrCode);
/*-- Base_samples_Pointcloud_m --------------------------------------------*/


typedef struct {
    int nCount; 
    
    Wrappers_Vector3d arr[200];
} Base_samples_Pointcloud_m_points;


typedef struct {
    int nCount; 
    
    Wrappers_Vector4d arr[200];
} Base_samples_Pointcloud_m_colors;
typedef struct {
    Base_Time time;
    Base_samples_Pointcloud_m_points points;
    Base_samples_Pointcloud_m_colors colors;

} Base_samples_Pointcloud_m;

void Base_samples_Pointcloud_m_points_Initialize(Base_samples_Pointcloud_m_points* pVal);
void Base_samples_Pointcloud_m_colors_Initialize(Base_samples_Pointcloud_m_colors* pVal);
void Base_samples_Pointcloud_m_Initialize(Base_samples_Pointcloud_m* pVal);

#define i3ds_asn1_i3ds_asn1_ERR_BASE_SAMPLES_POINTCLOUD_M		12199  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_BASE_SAMPLES_POINTCLOUD_M_TIME_2		12118  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_BASE_SAMPLES_POINTCLOUD_M_POINTS		12154  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_BASE_SAMPLES_POINTCLOUD_M_POINTS_ELM_2		12149  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_BASE_SAMPLES_POINTCLOUD_M_COLORS		12192  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_BASE_SAMPLES_POINTCLOUD_M_COLORS_ELM_2		12187  /**/
flag Base_samples_Pointcloud_m_IsConstraintValid(const Base_samples_Pointcloud_m* pVal, int* pErrCode);

#define i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_SAMPLES_POINTCLOUD_M		12200  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_SAMPLES_POINTCLOUD_M_TIME_2		12119  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_SAMPLES_POINTCLOUD_M_POINTS		12155  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_SAMPLES_POINTCLOUD_M_POINTS_ELM_2		12150  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_SAMPLES_POINTCLOUD_M_COLORS		12193  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_SAMPLES_POINTCLOUD_M_COLORS_ELM_2		12188  /**/
#define i3ds_asn1_Base_samples_Pointcloud_m_REQUIRED_BYTES_FOR_ENCODING       18310 
#define i3ds_asn1_Base_samples_Pointcloud_m_REQUIRED_BITS_FOR_ENCODING        146480

flag Base_samples_Pointcloud_m_Encode(const Base_samples_Pointcloud_m* pVal, BitStream* pBitStrm, int* pErrCode, flag bCheckConstraints);

#define i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_SAMPLES_POINTCLOUD_M		12201  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_SAMPLES_POINTCLOUD_M_TIME_2		12120  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_SAMPLES_POINTCLOUD_M_POINTS		12156  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_SAMPLES_POINTCLOUD_M_POINTS_ELM_2		12151  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_SAMPLES_POINTCLOUD_M_COLORS		12194  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_SAMPLES_POINTCLOUD_M_COLORS_ELM_2		12189  /**/
flag Base_samples_Pointcloud_m_Decode(Base_samples_Pointcloud_m* pVal, BitStream* pBitStrm, int* pErrCode);
/*-- Base_samples_frame_frame_size_t --------------------------------------------*/
typedef struct {
    T_UInt16 width;
    T_UInt16 height;

} Base_samples_frame_frame_size_t;

void Base_samples_frame_frame_size_t_Initialize(Base_samples_frame_frame_size_t* pVal);

#define i3ds_asn1_i3ds_asn1_ERR_BASE_SAMPLES_FRAME_FRAME_SIZE_T		6329  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_BASE_SAMPLES_FRAME_FRAME_SIZE_T_WIDTH_2		6312  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_BASE_SAMPLES_FRAME_FRAME_SIZE_T_HEIGHT_2		6324  /**/
flag Base_samples_frame_frame_size_t_IsConstraintValid(const Base_samples_frame_frame_size_t* pVal, int* pErrCode);

#define i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_SAMPLES_FRAME_FRAME_SIZE_T		6330  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_SAMPLES_FRAME_FRAME_SIZE_T_WIDTH_2		6313  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_SAMPLES_FRAME_FRAME_SIZE_T_HEIGHT_2		6325  /**/
#define i3ds_asn1_Base_samples_frame_frame_size_t_REQUIRED_BYTES_FOR_ENCODING       4 
#define i3ds_asn1_Base_samples_frame_frame_size_t_REQUIRED_BITS_FOR_ENCODING        32

flag Base_samples_frame_frame_size_t_Encode(const Base_samples_frame_frame_size_t* pVal, BitStream* pBitStrm, int* pErrCode, flag bCheckConstraints);

#define i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_SAMPLES_FRAME_FRAME_SIZE_T		6331  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_SAMPLES_FRAME_FRAME_SIZE_T_WIDTH_2		6314  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_SAMPLES_FRAME_FRAME_SIZE_T_HEIGHT_2		6326  /**/
flag Base_samples_frame_frame_size_t_Decode(Base_samples_frame_frame_size_t* pVal, BitStream* pBitStrm, int* pErrCode);
/*-- Base_samples_DistanceImage --------------------------------------------*/


typedef struct {
    int nCount; 
    
    T_Float arr[200];
} Base_samples_DistanceImage_data;
typedef struct {
    Base_Time time;
    T_UInt16 width;
    T_UInt16 height;
    T_Float scale_x;
    T_Float scale_y;
    T_Float center_x;
    T_Float center_y;
    Base_samples_DistanceImage_data data;

} Base_samples_DistanceImage;

void Base_samples_DistanceImage_data_Initialize(Base_samples_DistanceImage_data* pVal);
void Base_samples_DistanceImage_Initialize(Base_samples_DistanceImage* pVal);

#define i3ds_asn1_ERR_BASE_SAMPLES_DISTANCEIMAGE		7559  /**/
#define i3ds_asn1_i3ds_asn1_ERR_BASE_SAMPLES_DISTANCEIMAGE_TIME_2		7463  /**/
#define i3ds_asn1_i3ds_asn1_ERR_BASE_SAMPLES_DISTANCEIMAGE_WIDTH_2		7475  /**/
#define i3ds_asn1_i3ds_asn1_ERR_BASE_SAMPLES_DISTANCEIMAGE_HEIGHT_2		7487  /**/
#define i3ds_asn1_i3ds_asn1_ERR_BASE_SAMPLES_DISTANCEIMAGE_SCALE_X_2		7499  /**/
#define i3ds_asn1_i3ds_asn1_ERR_BASE_SAMPLES_DISTANCEIMAGE_SCALE_Y_2		7511  /**/
#define i3ds_asn1_i3ds_asn1_ERR_BASE_SAMPLES_DISTANCEIMAGE_CENTER_X_2		7523  /**/
#define i3ds_asn1_i3ds_asn1_ERR_BASE_SAMPLES_DISTANCEIMAGE_CENTER_Y_2		7535  /**/
#define i3ds_asn1_i3ds_asn1_ERR_BASE_SAMPLES_DISTANCEIMAGE_DATA		7552  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_BASE_SAMPLES_DISTANCEIMAGE_DATA_ELM_2		7547  /**/
flag Base_samples_DistanceImage_IsConstraintValid(const Base_samples_DistanceImage* pVal, int* pErrCode);

#define i3ds_asn1_ERR_UPER_ENCODE_BASE_SAMPLES_DISTANCEIMAGE		7560  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_SAMPLES_DISTANCEIMAGE_TIME_2		7464  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_SAMPLES_DISTANCEIMAGE_WIDTH_2		7476  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_SAMPLES_DISTANCEIMAGE_HEIGHT_2		7488  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_SAMPLES_DISTANCEIMAGE_SCALE_X_2		7500  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_SAMPLES_DISTANCEIMAGE_SCALE_Y_2		7512  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_SAMPLES_DISTANCEIMAGE_CENTER_X_2		7524  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_SAMPLES_DISTANCEIMAGE_CENTER_Y_2		7536  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_SAMPLES_DISTANCEIMAGE_DATA		7553  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_SAMPLES_DISTANCEIMAGE_DATA_ELM_2		7548  /**/
#define i3ds_asn1_Base_samples_DistanceImage_REQUIRED_BYTES_FOR_ENCODING       2665 
#define i3ds_asn1_Base_samples_DistanceImage_REQUIRED_BITS_FOR_ENCODING        21320

flag Base_samples_DistanceImage_Encode(const Base_samples_DistanceImage* pVal, BitStream* pBitStrm, int* pErrCode, flag bCheckConstraints);

#define i3ds_asn1_ERR_UPER_DECODE_BASE_SAMPLES_DISTANCEIMAGE		7561  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_SAMPLES_DISTANCEIMAGE_TIME_2		7465  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_SAMPLES_DISTANCEIMAGE_WIDTH_2		7477  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_SAMPLES_DISTANCEIMAGE_HEIGHT_2		7489  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_SAMPLES_DISTANCEIMAGE_SCALE_X_2		7501  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_SAMPLES_DISTANCEIMAGE_SCALE_Y_2		7513  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_SAMPLES_DISTANCEIMAGE_CENTER_X_2		7525  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_SAMPLES_DISTANCEIMAGE_CENTER_Y_2		7537  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_SAMPLES_DISTANCEIMAGE_DATA		7554  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_SAMPLES_DISTANCEIMAGE_DATA_ELM_2		7549  /**/
flag Base_samples_DistanceImage_Decode(Base_samples_DistanceImage* pVal, BitStream* pBitStrm, int* pErrCode);
/*-- Base_JointLimits --------------------------------------------*/


typedef struct {
    int nCount; 
    
    T_String arr[200];
} Base_JointLimits_names;


typedef struct {
    int nCount; 
    
    Base_JointLimitRange arr[200];
} Base_JointLimits_elements;
typedef struct {
    Base_JointLimits_names names;
    Base_JointLimits_elements elements;

} Base_JointLimits;

void Base_JointLimits_names_Initialize(Base_JointLimits_names* pVal);
void Base_JointLimits_elements_Initialize(Base_JointLimits_elements* pVal);
void Base_JointLimits_Initialize(Base_JointLimits* pVal);

#define i3ds_asn1_ERR_BASE_JOINTLIMITS		6518  /**/
#define i3ds_asn1_i3ds_asn1_ERR_BASE_JOINTLIMITS_NAMES		6348  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_BASE_JOINTLIMITS_NAMES_ELM_2		6343  /**/
#define i3ds_asn1_i3ds_asn1_ERR_BASE_JOINTLIMITS_ELEMENTS		6511  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_BASE_JOINTLIMITS_ELEMENTS_ELM_2		6506  /**/
flag Base_JointLimits_IsConstraintValid(const Base_JointLimits* pVal, int* pErrCode);

#define i3ds_asn1_ERR_UPER_ENCODE_BASE_JOINTLIMITS		6519  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_JOINTLIMITS_NAMES		6349  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_JOINTLIMITS_NAMES_ELM_2		6344  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_JOINTLIMITS_ELEMENTS		6512  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_JOINTLIMITS_ELEMENTS_ELM_2		6507  /**/
#define i3ds_asn1_Base_JointLimits_REQUIRED_BYTES_FOR_ENCODING       34152 
#define i3ds_asn1_Base_JointLimits_REQUIRED_BITS_FOR_ENCODING        273216

flag Base_JointLimits_Encode(const Base_JointLimits* pVal, BitStream* pBitStrm, int* pErrCode, flag bCheckConstraints);

#define i3ds_asn1_ERR_UPER_DECODE_BASE_JOINTLIMITS		6520  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_JOINTLIMITS_NAMES		6350  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_JOINTLIMITS_NAMES_ELM_2		6345  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_JOINTLIMITS_ELEMENTS		6513  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_JOINTLIMITS_ELEMENTS_ELM_2		6508  /**/
flag Base_JointLimits_Decode(Base_JointLimits* pVal, BitStream* pBitStrm, int* pErrCode);
/*-- Base_JointTransform --------------------------------------------*/
typedef struct {
    T_String sourceframe;
    T_String targetframe;
    Wrappers_Vector3d rotationaxis;

} Base_JointTransform;

void Base_JointTransform_Initialize(Base_JointTransform* pVal);

#define i3ds_asn1_ERR_BASE_JOINTTRANSFORM		6580  /**/
#define i3ds_asn1_i3ds_asn1_ERR_BASE_JOINTTRANSFORM_SOURCEFRAME_2		6532  /**/
#define i3ds_asn1_i3ds_asn1_ERR_BASE_JOINTTRANSFORM_TARGETFRAME_2		6544  /**/
#define i3ds_asn1_i3ds_asn1_ERR_BASE_JOINTTRANSFORM_ROTATIONAXIS_2		6575  /**/
flag Base_JointTransform_IsConstraintValid(const Base_JointTransform* pVal, int* pErrCode);

#define i3ds_asn1_ERR_UPER_ENCODE_BASE_JOINTTRANSFORM		6581  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_JOINTTRANSFORM_SOURCEFRAME_2		6533  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_JOINTTRANSFORM_TARGETFRAME_2		6545  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_JOINTTRANSFORM_ROTATIONAXIS_2		6576  /**/
#define i3ds_asn1_Base_JointTransform_REQUIRED_BYTES_FOR_ENCODING       121 
#define i3ds_asn1_Base_JointTransform_REQUIRED_BITS_FOR_ENCODING        966

flag Base_JointTransform_Encode(const Base_JointTransform* pVal, BitStream* pBitStrm, int* pErrCode, flag bCheckConstraints);

#define i3ds_asn1_ERR_UPER_DECODE_BASE_JOINTTRANSFORM		6582  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_JOINTTRANSFORM_SOURCEFRAME_2		6534  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_JOINTTRANSFORM_TARGETFRAME_2		6546  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_JOINTTRANSFORM_ROTATIONAXIS_2		6577  /**/
flag Base_JointTransform_Decode(Base_JointTransform* pVal, BitStream* pBitStrm, int* pErrCode);
/*-- Base_JointTransformVector --------------------------------------------*/


typedef struct {
    int nCount; 
    
    T_String arr[200];
} Base_JointTransformVector_names;


typedef struct {
    int nCount; 
    
    Base_JointTransform arr[200];
} Base_JointTransformVector_elements;
typedef struct {
    Base_JointTransformVector_names names;
    Base_JointTransformVector_elements elements;

} Base_JointTransformVector;

void Base_JointTransformVector_names_Initialize(Base_JointTransformVector_names* pVal);
void Base_JointTransformVector_elements_Initialize(Base_JointTransformVector_elements* pVal);
void Base_JointTransformVector_Initialize(Base_JointTransformVector* pVal);

#define i3ds_asn1_i3ds_asn1_ERR_BASE_JOINTTRANSFORMVECTOR		9073  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_BASE_JOINTTRANSFORMVECTOR_NAMES		8992  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_BASE_JOINTTRANSFORMVECTOR_NAMES_ELM_2		8987  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_BASE_JOINTTRANSFORMVECTOR_ELEMENTS		9066  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_BASE_JOINTTRANSFORMVECTOR_ELEMENTS_ELM_2		9061  /**/
flag Base_JointTransformVector_IsConstraintValid(const Base_JointTransformVector* pVal, int* pErrCode);

#define i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_JOINTTRANSFORMVECTOR		9074  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_JOINTTRANSFORMVECTOR_NAMES		8993  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_JOINTTRANSFORMVECTOR_NAMES_ELM_2		8988  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_JOINTTRANSFORMVECTOR_ELEMENTS		9067  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_JOINTTRANSFORMVECTOR_ELEMENTS_ELM_2		9062  /**/
#define i3ds_asn1_Base_JointTransformVector_REQUIRED_BYTES_FOR_ENCODING       32302 
#define i3ds_asn1_Base_JointTransformVector_REQUIRED_BITS_FOR_ENCODING        258416

flag Base_JointTransformVector_Encode(const Base_JointTransformVector* pVal, BitStream* pBitStrm, int* pErrCode, flag bCheckConstraints);

#define i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_JOINTTRANSFORMVECTOR		9075  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_JOINTTRANSFORMVECTOR_NAMES		8994  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_JOINTTRANSFORMVECTOR_NAMES_ELM_2		8989  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_JOINTTRANSFORMVECTOR_ELEMENTS		9068  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_JOINTTRANSFORMVECTOR_ELEMENTS_ELM_2		9063  /**/
flag Base_JointTransformVector_Decode(Base_JointTransformVector* pVal, BitStream* pBitStrm, int* pErrCode);
/*-- Base_NamedVector_Base_JointTransform --------------------------------------------*/


typedef struct {
    int nCount; 
    
    T_String arr[200];
} Base_NamedVector_Base_JointTransform_names;


typedef struct {
    int nCount; 
    
    Base_JointTransform arr[200];
} Base_NamedVector_Base_JointTransform_elements;
typedef struct {
    Base_NamedVector_Base_JointTransform_names names;
    Base_NamedVector_Base_JointTransform_elements elements;

} Base_NamedVector_Base_JointTransform;

void Base_NamedVector_Base_JointTransform_names_Initialize(Base_NamedVector_Base_JointTransform_names* pVal);
void Base_NamedVector_Base_JointTransform_elements_Initialize(Base_NamedVector_Base_JointTransform_elements* pVal);
void Base_NamedVector_Base_JointTransform_Initialize(Base_NamedVector_Base_JointTransform* pVal);

#define i3ds_asn1_ERR_BASE_NAMEDVECTOR_BASE_JOINTTRANSFORM		9173  /**/
#define i3ds_asn1_i3ds_asn1_ERR_BASE_NAMEDVECTOR_BASE_JOINTTRANSFORM_NAMES		9092  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_BASE_NAMEDVECTOR_BASE_JOINTTRANSFORM_NAMES_ELM_2		9087  /**/
#define i3ds_asn1_i3ds_asn1_ERR_BASE_NAMEDVECTOR_BASE_JOINTTRANSFORM_ELEMENTS		9166  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_BASE_NAMEDVECTOR_BASE_JOINTTRANSFORM_ELEMENTS_ELM_2		9161  /**/
flag Base_NamedVector_Base_JointTransform_IsConstraintValid(const Base_NamedVector_Base_JointTransform* pVal, int* pErrCode);

#define i3ds_asn1_ERR_UPER_ENCODE_BASE_NAMEDVECTOR_BASE_JOINTTRANSFORM		9174  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_NAMEDVECTOR_BASE_JOINTTRANSFORM_NAMES		9093  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_NAMEDVECTOR_BASE_JOINTTRANSFORM_NAMES_ELM_2		9088  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_NAMEDVECTOR_BASE_JOINTTRANSFORM_ELEMENTS		9167  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_NAMEDVECTOR_BASE_JOINTTRANSFORM_ELEMENTS_ELM_2		9162  /**/
#define Base_NamedVector_i3ds_asn1_Base_JointTransform_REQUIRED_BYTES_FOR_ENCODING       32302 
#define Base_NamedVector_i3ds_asn1_Base_JointTransform_REQUIRED_BITS_FOR_ENCODING        258416

flag Base_NamedVector_Base_JointTransform_Encode(const Base_NamedVector_Base_JointTransform* pVal, BitStream* pBitStrm, int* pErrCode, flag bCheckConstraints);

#define i3ds_asn1_ERR_UPER_DECODE_BASE_NAMEDVECTOR_BASE_JOINTTRANSFORM		9175  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_NAMEDVECTOR_BASE_JOINTTRANSFORM_NAMES		9094  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_NAMEDVECTOR_BASE_JOINTTRANSFORM_NAMES_ELM_2		9089  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_NAMEDVECTOR_BASE_JOINTTRANSFORM_ELEMENTS		9168  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_NAMEDVECTOR_BASE_JOINTTRANSFORM_ELEMENTS_ELM_2		9163  /**/
flag Base_NamedVector_Base_JointTransform_Decode(Base_NamedVector_Base_JointTransform* pVal, BitStream* pBitStrm, int* pErrCode);
/*-- Base_JointsTrajectory --------------------------------------------*/


typedef struct {
    int nCount; 
    
    T_String arr[200];
} Base_JointsTrajectory_names;


typedef struct {
    int nCount; 
    
    Base_JointTrajectory arr[200];
} Base_JointsTrajectory_elements;


typedef struct {
    int nCount; 
    
    Base_Time arr[200];
} Base_JointsTrajectory_times_val;
typedef struct {
    Base_JointsTrajectory_names names;
    Base_JointsTrajectory_elements elements;
    Base_JointsTrajectory_times_val times_val;

} Base_JointsTrajectory;

void Base_JointsTrajectory_names_Initialize(Base_JointsTrajectory_names* pVal);
void Base_JointsTrajectory_elements_Initialize(Base_JointsTrajectory_elements* pVal);
void Base_JointsTrajectory_times_val_Initialize(Base_JointsTrajectory_times_val* pVal);
void Base_JointsTrajectory_Initialize(Base_JointsTrajectory* pVal);

#define i3ds_asn1_ERR_BASE_JOINTSTRAJECTORY		6728  /**/
#define i3ds_asn1_i3ds_asn1_ERR_BASE_JOINTSTRAJECTORY_NAMES		6599  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_BASE_JOINTSTRAJECTORY_NAMES_ELM_2		6594  /**/
#define i3ds_asn1_i3ds_asn1_ERR_BASE_JOINTSTRAJECTORY_ELEMENTS		6690  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_BASE_JOINTSTRAJECTORY_ELEMENTS_ELM_2		6685  /**/
#define i3ds_asn1_i3ds_asn1_ERR_BASE_JOINTSTRAJECTORY_TIMES_VAL		6721  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_BASE_JOINTSTRAJECTORY_TIMES_VAL_ELM_2		6716  /**/
flag Base_JointsTrajectory_IsConstraintValid(const Base_JointsTrajectory* pVal, int* pErrCode);

#define i3ds_asn1_ERR_UPER_ENCODE_BASE_JOINTSTRAJECTORY		6729  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_JOINTSTRAJECTORY_NAMES		6600  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_JOINTSTRAJECTORY_NAMES_ELM_2		6595  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_JOINTSTRAJECTORY_ELEMENTS		6691  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_JOINTSTRAJECTORY_ELEMENTS_ELM_2		6686  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_JOINTSTRAJECTORY_TIMES_VAL		6722  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_JOINTSTRAJECTORY_TIMES_VAL_ELM_2		6717  /**/
#define i3ds_asn1_Base_JointsTrajectory_REQUIRED_BYTES_FOR_ENCODING       2609953 
#define i3ds_asn1_Base_JointsTrajectory_REQUIRED_BITS_FOR_ENCODING        20879624

flag Base_JointsTrajectory_Encode(const Base_JointsTrajectory* pVal, BitStream* pBitStrm, int* pErrCode, flag bCheckConstraints);

#define i3ds_asn1_ERR_UPER_DECODE_BASE_JOINTSTRAJECTORY		6730  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_JOINTSTRAJECTORY_NAMES		6601  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_JOINTSTRAJECTORY_NAMES_ELM_2		6596  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_JOINTSTRAJECTORY_ELEMENTS		6692  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_JOINTSTRAJECTORY_ELEMENTS_ELM_2		6687  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_JOINTSTRAJECTORY_TIMES_VAL		6723  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_JOINTSTRAJECTORY_TIMES_VAL_ELM_2		6718  /**/
flag Base_JointsTrajectory_Decode(Base_JointsTrajectory* pVal, BitStream* pBitStrm, int* pErrCode);
/*-- Base_NamedVector_Base_JointLimitRange --------------------------------------------*/


typedef struct {
    int nCount; 
    
    T_String arr[200];
} Base_NamedVector_Base_JointLimitRange_names;


typedef struct {
    int nCount; 
    
    Base_JointLimitRange arr[200];
} Base_NamedVector_Base_JointLimitRange_elements;
typedef struct {
    Base_NamedVector_Base_JointLimitRange_names names;
    Base_NamedVector_Base_JointLimitRange_elements elements;

} Base_NamedVector_Base_JointLimitRange;

void Base_NamedVector_Base_JointLimitRange_names_Initialize(Base_NamedVector_Base_JointLimitRange_names* pVal);
void Base_NamedVector_Base_JointLimitRange_elements_Initialize(Base_NamedVector_Base_JointLimitRange_elements* pVal);
void Base_NamedVector_Base_JointLimitRange_Initialize(Base_NamedVector_Base_JointLimitRange* pVal);

#define i3ds_asn1_ERR_BASE_NAMEDVECTOR_BASE_JOINTLIMITRANGE		6917  /**/
#define i3ds_asn1_i3ds_asn1_ERR_BASE_NAMEDVECTOR_BASE_JOINTLIMITRANGE_NAMES		6747  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_BASE_NAMEDVECTOR_BASE_JOINTLIMITRANGE_NAMES_ELM_2		6742  /**/
#define i3ds_asn1_i3ds_asn1_ERR_BASE_NAMEDVECTOR_BASE_JOINTLIMITRANGE_ELEMENTS		6910  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_BASE_NAMEDVECTOR_BASE_JOINTLIMITRANGE_ELEMENTS_ELM_2		6905  /**/
flag Base_NamedVector_Base_JointLimitRange_IsConstraintValid(const Base_NamedVector_Base_JointLimitRange* pVal, int* pErrCode);

#define i3ds_asn1_ERR_UPER_ENCODE_BASE_NAMEDVECTOR_BASE_JOINTLIMITRANGE		6918  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_NAMEDVECTOR_BASE_JOINTLIMITRANGE_NAMES		6748  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_NAMEDVECTOR_BASE_JOINTLIMITRANGE_NAMES_ELM_2		6743  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_NAMEDVECTOR_BASE_JOINTLIMITRANGE_ELEMENTS		6911  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_NAMEDVECTOR_BASE_JOINTLIMITRANGE_ELEMENTS_ELM_2		6906  /**/
#define Base_NamedVector_i3ds_asn1_Base_JointLimitRange_REQUIRED_BYTES_FOR_ENCODING       34152 
#define Base_NamedVector_i3ds_asn1_Base_JointLimitRange_REQUIRED_BITS_FOR_ENCODING        273216

flag Base_NamedVector_Base_JointLimitRange_Encode(const Base_NamedVector_Base_JointLimitRange* pVal, BitStream* pBitStrm, int* pErrCode, flag bCheckConstraints);

#define i3ds_asn1_ERR_UPER_DECODE_BASE_NAMEDVECTOR_BASE_JOINTLIMITRANGE		6919  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_NAMEDVECTOR_BASE_JOINTLIMITRANGE_NAMES		6749  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_NAMEDVECTOR_BASE_JOINTLIMITRANGE_NAMES_ELM_2		6744  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_NAMEDVECTOR_BASE_JOINTLIMITRANGE_ELEMENTS		6912  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_NAMEDVECTOR_BASE_JOINTLIMITRANGE_ELEMENTS_ELM_2		6907  /**/
flag Base_NamedVector_Base_JointLimitRange_Decode(Base_NamedVector_Base_JointLimitRange* pVal, BitStream* pBitStrm, int* pErrCode);
/*-- Base_NamedVector_Base_JointState --------------------------------------------*/


typedef struct {
    int nCount; 
    
    T_String arr[200];
} Base_NamedVector_Base_JointState_names;
typedef struct {
    Base_NamedVector_Base_JointState_names names;
    Base_JointTrajectory elements;

} Base_NamedVector_Base_JointState;

void Base_NamedVector_Base_JointState_names_Initialize(Base_NamedVector_Base_JointState_names* pVal);
void Base_NamedVector_Base_JointState_Initialize(Base_NamedVector_Base_JointState* pVal);

#define i3ds_asn1_ERR_BASE_NAMEDVECTOR_BASE_JOINTSTATE		7027  /**/
#define i3ds_asn1_i3ds_asn1_ERR_BASE_NAMEDVECTOR_BASE_JOINTSTATE_NAMES		6936  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_BASE_NAMEDVECTOR_BASE_JOINTSTATE_NAMES_ELM_2		6931  /**/
#define i3ds_asn1_i3ds_asn1_ERR_BASE_NAMEDVECTOR_BASE_JOINTSTATE_ELEMENTS_2		7022  /**/
flag Base_NamedVector_Base_JointState_IsConstraintValid(const Base_NamedVector_Base_JointState* pVal, int* pErrCode);

#define i3ds_asn1_ERR_UPER_ENCODE_BASE_NAMEDVECTOR_BASE_JOINTSTATE		7028  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_NAMEDVECTOR_BASE_JOINTSTATE_NAMES		6937  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_NAMEDVECTOR_BASE_JOINTSTATE_NAMES_ELM_2		6932  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_NAMEDVECTOR_BASE_JOINTSTATE_ELEMENTS_2		7023  /**/
#define Base_NamedVector_i3ds_asn1_Base_JointState_REQUIRED_BYTES_FOR_ENCODING       21152 
#define Base_NamedVector_i3ds_asn1_Base_JointState_REQUIRED_BITS_FOR_ENCODING        169216

flag Base_NamedVector_Base_JointState_Encode(const Base_NamedVector_Base_JointState* pVal, BitStream* pBitStrm, int* pErrCode, flag bCheckConstraints);

#define i3ds_asn1_ERR_UPER_DECODE_BASE_NAMEDVECTOR_BASE_JOINTSTATE		7029  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_NAMEDVECTOR_BASE_JOINTSTATE_NAMES		6938  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_NAMEDVECTOR_BASE_JOINTSTATE_NAMES_ELM_2		6933  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_NAMEDVECTOR_BASE_JOINTSTATE_ELEMENTS_2		7024  /**/
flag Base_NamedVector_Base_JointState_Decode(Base_NamedVector_Base_JointState* pVal, BitStream* pBitStrm, int* pErrCode);
/*-- Base_NamedVector_Base_Wrench --------------------------------------------*/


typedef struct {
    int nCount; 
    
    T_String arr[200];
} Base_NamedVector_Base_Wrench_names;


typedef struct {
    int nCount; 
    
    Base_Wrench arr[200];
} Base_NamedVector_Base_Wrench_elements;
typedef struct {
    Base_NamedVector_Base_Wrench_names names;
    Base_NamedVector_Base_Wrench_elements elements;

} Base_NamedVector_Base_Wrench;

void Base_NamedVector_Base_Wrench_names_Initialize(Base_NamedVector_Base_Wrench_names* pVal);
void Base_NamedVector_Base_Wrench_elements_Initialize(Base_NamedVector_Base_Wrench_elements* pVal);
void Base_NamedVector_Base_Wrench_Initialize(Base_NamedVector_Base_Wrench* pVal);

#define i3ds_asn1_ERR_BASE_NAMEDVECTOR_BASE_WRENCH		7134  /**/
#define i3ds_asn1_i3ds_asn1_ERR_BASE_NAMEDVECTOR_BASE_WRENCH_NAMES		7046  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_BASE_NAMEDVECTOR_BASE_WRENCH_NAMES_ELM_2		7041  /**/
#define i3ds_asn1_i3ds_asn1_ERR_BASE_NAMEDVECTOR_BASE_WRENCH_ELEMENTS		7127  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_BASE_NAMEDVECTOR_BASE_WRENCH_ELEMENTS_ELM_2		7122  /**/
flag Base_NamedVector_Base_Wrench_IsConstraintValid(const Base_NamedVector_Base_Wrench* pVal, int* pErrCode);

#define i3ds_asn1_ERR_UPER_ENCODE_BASE_NAMEDVECTOR_BASE_WRENCH		7135  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_NAMEDVECTOR_BASE_WRENCH_NAMES		7047  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_NAMEDVECTOR_BASE_WRENCH_NAMES_ELM_2		7042  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_NAMEDVECTOR_BASE_WRENCH_ELEMENTS		7128  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_NAMEDVECTOR_BASE_WRENCH_ELEMENTS_ELM_2		7123  /**/
#define Base_NamedVector_i3ds_asn1_Base_Wrench_REQUIRED_BYTES_FOR_ENCODING       23852 
#define Base_NamedVector_i3ds_asn1_Base_Wrench_REQUIRED_BITS_FOR_ENCODING        190816

flag Base_NamedVector_Base_Wrench_Encode(const Base_NamedVector_Base_Wrench* pVal, BitStream* pBitStrm, int* pErrCode, flag bCheckConstraints);

#define i3ds_asn1_ERR_UPER_DECODE_BASE_NAMEDVECTOR_BASE_WRENCH		7136  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_NAMEDVECTOR_BASE_WRENCH_NAMES		7048  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_NAMEDVECTOR_BASE_WRENCH_NAMES_ELM_2		7043  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_NAMEDVECTOR_BASE_WRENCH_ELEMENTS		7129  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_NAMEDVECTOR_BASE_WRENCH_ELEMENTS_ELM_2		7124  /**/
flag Base_NamedVector_Base_Wrench_Decode(Base_NamedVector_Base_Wrench* pVal, BitStream* pBitStrm, int* pErrCode);
/*-- Base_NamedVector_Base_JointTrajectory --------------------------------------------*/


typedef struct {
    int nCount; 
    
    T_String arr[200];
} Base_NamedVector_Base_JointTrajectory_names;


typedef struct {
    int nCount; 
    
    Base_JointTrajectory arr[200];
} Base_NamedVector_Base_JointTrajectory_elements;
typedef struct {
    Base_NamedVector_Base_JointTrajectory_names names;
    Base_NamedVector_Base_JointTrajectory_elements elements;

} Base_NamedVector_Base_JointTrajectory;

void Base_NamedVector_Base_JointTrajectory_names_Initialize(Base_NamedVector_Base_JointTrajectory_names* pVal);
void Base_NamedVector_Base_JointTrajectory_elements_Initialize(Base_NamedVector_Base_JointTrajectory_elements* pVal);
void Base_NamedVector_Base_JointTrajectory_Initialize(Base_NamedVector_Base_JointTrajectory* pVal);

#define i3ds_asn1_ERR_BASE_NAMEDVECTOR_BASE_JOINTTRAJECTORY		7251  /**/
#define i3ds_asn1_i3ds_asn1_ERR_BASE_NAMEDVECTOR_BASE_JOINTTRAJECTORY_NAMES		7153  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_BASE_NAMEDVECTOR_BASE_JOINTTRAJECTORY_NAMES_ELM_2		7148  /**/
#define i3ds_asn1_i3ds_asn1_ERR_BASE_NAMEDVECTOR_BASE_JOINTTRAJECTORY_ELEMENTS		7244  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_BASE_NAMEDVECTOR_BASE_JOINTTRAJECTORY_ELEMENTS_ELM_2		7239  /**/
flag Base_NamedVector_Base_JointTrajectory_IsConstraintValid(const Base_NamedVector_Base_JointTrajectory* pVal, int* pErrCode);

#define i3ds_asn1_ERR_UPER_ENCODE_BASE_NAMEDVECTOR_BASE_JOINTTRAJECTORY		7252  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_NAMEDVECTOR_BASE_JOINTTRAJECTORY_NAMES		7154  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_NAMEDVECTOR_BASE_JOINTTRAJECTORY_NAMES_ELM_2		7149  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_NAMEDVECTOR_BASE_JOINTTRAJECTORY_ELEMENTS		7245  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_NAMEDVECTOR_BASE_JOINTTRAJECTORY_ELEMENTS_ELM_2		7240  /**/
#define Base_NamedVector_i3ds_asn1_Base_JointTrajectory_REQUIRED_BYTES_FOR_ENCODING       2608352 
#define Base_NamedVector_i3ds_asn1_Base_JointTrajectory_REQUIRED_BITS_FOR_ENCODING        20866816

flag Base_NamedVector_Base_JointTrajectory_Encode(const Base_NamedVector_Base_JointTrajectory* pVal, BitStream* pBitStrm, int* pErrCode, flag bCheckConstraints);

#define i3ds_asn1_ERR_UPER_DECODE_BASE_NAMEDVECTOR_BASE_JOINTTRAJECTORY		7253  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_NAMEDVECTOR_BASE_JOINTTRAJECTORY_NAMES		7155  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_NAMEDVECTOR_BASE_JOINTTRAJECTORY_NAMES_ELM_2		7150  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_NAMEDVECTOR_BASE_JOINTTRAJECTORY_ELEMENTS		7246  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_NAMEDVECTOR_BASE_JOINTTRAJECTORY_ELEMENTS_ELM_2		7241  /**/
flag Base_NamedVector_Base_JointTrajectory_Decode(Base_NamedVector_Base_JointTrajectory* pVal, BitStream* pBitStrm, int* pErrCode);
/*-- Base_commands_Joints --------------------------------------------*/


typedef struct {
    int nCount; 
    
    T_String arr[200];
} Base_commands_Joints_names;
typedef struct {
    Base_commands_Joints_names names;
    Base_JointTrajectory elements;
    Base_Time time;

} Base_commands_Joints;

void Base_commands_Joints_names_Initialize(Base_commands_Joints_names* pVal);
void Base_commands_Joints_Initialize(Base_commands_Joints* pVal);

#define i3ds_asn1_ERR_BASE_COMMANDS_JOINTS		7693  /**/
#define i3ds_asn1_i3ds_asn1_ERR_BASE_COMMANDS_JOINTS_NAMES		7578  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_BASE_COMMANDS_JOINTS_NAMES_ELM_2		7573  /**/
#define i3ds_asn1_i3ds_asn1_ERR_BASE_COMMANDS_JOINTS_ELEMENTS_2		7664  /**/
#define i3ds_asn1_i3ds_asn1_ERR_BASE_COMMANDS_JOINTS_TIME_2		7688  /**/
flag Base_commands_Joints_IsConstraintValid(const Base_commands_Joints* pVal, int* pErrCode);

#define i3ds_asn1_ERR_UPER_ENCODE_BASE_COMMANDS_JOINTS		7694  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_COMMANDS_JOINTS_NAMES		7579  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_COMMANDS_JOINTS_NAMES_ELM_2		7574  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_COMMANDS_JOINTS_ELEMENTS_2		7665  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_COMMANDS_JOINTS_TIME_2		7689  /**/
#define i3ds_asn1_Base_commands_Joints_REQUIRED_BYTES_FOR_ENCODING       21160 
#define i3ds_asn1_Base_commands_Joints_REQUIRED_BITS_FOR_ENCODING        169280

flag Base_commands_Joints_Encode(const Base_commands_Joints* pVal, BitStream* pBitStrm, int* pErrCode, flag bCheckConstraints);

#define i3ds_asn1_ERR_UPER_DECODE_BASE_COMMANDS_JOINTS		7695  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_COMMANDS_JOINTS_NAMES		7580  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_COMMANDS_JOINTS_NAMES_ELM_2		7575  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_COMMANDS_JOINTS_ELEMENTS_2		7666  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_COMMANDS_JOINTS_TIME_2		7690  /**/
flag Base_commands_Joints_Decode(Base_commands_Joints* pVal, BitStream* pBitStrm, int* pErrCode);
/*-- Base_samples_RigidBodyState --------------------------------------------*/
typedef struct {
    Base_Time time;
    T_String sourceframe;
    T_String targetframe;
    Wrappers_Vector3d position;
    Wrappers_Matrix3d cov_position;
    Wrappers_Quaterniond orientation;
    Wrappers_Matrix3d cov_orientation;
    Wrappers_Vector3d velocity;
    Wrappers_Matrix3d cov_velocity;
    Wrappers_Vector3d angular_velocity;
    Wrappers_Matrix3d cov_angular_velocity;

} Base_samples_RigidBodyState;

void Base_samples_RigidBodyState_Initialize(Base_samples_RigidBodyState* pVal);

#define i3ds_asn1_ERR_BASE_SAMPLES_RIGIDBODYSTATE		8244  /**/
#define i3ds_asn1_i3ds_asn1_ERR_BASE_SAMPLES_RIGIDBODYSTATE_TIME_2		7955  /**/
#define i3ds_asn1_i3ds_asn1_ERR_BASE_SAMPLES_RIGIDBODYSTATE_SOURCEFRAME_2		7967  /**/
#define i3ds_asn1_i3ds_asn1_ERR_BASE_SAMPLES_RIGIDBODYSTATE_TARGETFRAME_2		7979  /**/
#define i3ds_asn1_i3ds_asn1_ERR_BASE_SAMPLES_RIGIDBODYSTATE_POSITION_2		8010  /**/
#define i3ds_asn1_i3ds_asn1_ERR_BASE_SAMPLES_RIGIDBODYSTATE_COV_POSITION_2		8041  /**/
#define i3ds_asn1_i3ds_asn1_ERR_BASE_SAMPLES_RIGIDBODYSTATE_ORIENTATION_2		8084  /**/
#define i3ds_asn1_i3ds_asn1_ERR_BASE_SAMPLES_RIGIDBODYSTATE_COV_ORIENTATION_2		8115  /**/
#define i3ds_asn1_i3ds_asn1_ERR_BASE_SAMPLES_RIGIDBODYSTATE_VELOCITY_2		8146  /**/
#define i3ds_asn1_i3ds_asn1_ERR_BASE_SAMPLES_RIGIDBODYSTATE_COV_VELOCITY_2		8177  /**/
#define i3ds_asn1_i3ds_asn1_ERR_BASE_SAMPLES_RIGIDBODYSTATE_ANGULAR_VELOCITY_2		8208  /**/
#define i3ds_asn1_i3ds_asn1_ERR_BASE_SAMPLES_RIGIDBODYSTATE_COV_ANGULAR_VELOCITY_2		8239  /**/
flag Base_samples_RigidBodyState_IsConstraintValid(const Base_samples_RigidBodyState* pVal, int* pErrCode);

#define i3ds_asn1_ERR_UPER_ENCODE_BASE_SAMPLES_RIGIDBODYSTATE		8245  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_SAMPLES_RIGIDBODYSTATE_TIME_2		7956  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_SAMPLES_RIGIDBODYSTATE_SOURCEFRAME_2		7968  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_SAMPLES_RIGIDBODYSTATE_TARGETFRAME_2		7980  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_SAMPLES_RIGIDBODYSTATE_POSITION_2		8011  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_SAMPLES_RIGIDBODYSTATE_COV_POSITION_2		8042  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_SAMPLES_RIGIDBODYSTATE_ORIENTATION_2		8085  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_SAMPLES_RIGIDBODYSTATE_COV_ORIENTATION_2		8116  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_SAMPLES_RIGIDBODYSTATE_VELOCITY_2		8147  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_SAMPLES_RIGIDBODYSTATE_COV_VELOCITY_2		8178  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_SAMPLES_RIGIDBODYSTATE_ANGULAR_VELOCITY_2		8209  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_SAMPLES_RIGIDBODYSTATE_COV_ANGULAR_VELOCITY_2		8240  /**/
#define i3ds_asn1_Base_samples_RigidBodyState_REQUIRED_BYTES_FOR_ENCODING       730 
#define i3ds_asn1_Base_samples_RigidBodyState_REQUIRED_BITS_FOR_ENCODING        5836

flag Base_samples_RigidBodyState_Encode(const Base_samples_RigidBodyState* pVal, BitStream* pBitStrm, int* pErrCode, flag bCheckConstraints);

#define i3ds_asn1_ERR_UPER_DECODE_BASE_SAMPLES_RIGIDBODYSTATE		8246  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_SAMPLES_RIGIDBODYSTATE_TIME_2		7957  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_SAMPLES_RIGIDBODYSTATE_SOURCEFRAME_2		7969  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_SAMPLES_RIGIDBODYSTATE_TARGETFRAME_2		7981  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_SAMPLES_RIGIDBODYSTATE_POSITION_2		8012  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_SAMPLES_RIGIDBODYSTATE_COV_POSITION_2		8043  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_SAMPLES_RIGIDBODYSTATE_ORIENTATION_2		8086  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_SAMPLES_RIGIDBODYSTATE_COV_ORIENTATION_2		8117  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_SAMPLES_RIGIDBODYSTATE_VELOCITY_2		8148  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_SAMPLES_RIGIDBODYSTATE_COV_VELOCITY_2		8179  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_SAMPLES_RIGIDBODYSTATE_ANGULAR_VELOCITY_2		8210  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_SAMPLES_RIGIDBODYSTATE_COV_ANGULAR_VELOCITY_2		8241  /**/
flag Base_samples_RigidBodyState_Decode(Base_samples_RigidBodyState* pVal, BitStream* pBitStrm, int* pErrCode);
/*-- Base_samples_Wrenches --------------------------------------------*/


typedef struct {
    int nCount; 
    
    T_String arr[200];
} Base_samples_Wrenches_names;


typedef struct {
    int nCount; 
    
    Base_Wrench arr[200];
} Base_samples_Wrenches_elements;
typedef struct {
    Base_samples_Wrenches_names names;
    Base_samples_Wrenches_elements elements;
    Base_Time time;

} Base_samples_Wrenches;

void Base_samples_Wrenches_names_Initialize(Base_samples_Wrenches_names* pVal);
void Base_samples_Wrenches_elements_Initialize(Base_samples_Wrenches_elements* pVal);
void Base_samples_Wrenches_Initialize(Base_samples_Wrenches* pVal);

#define i3ds_asn1_i3ds_asn1_ERR_BASE_SAMPLES_WRENCHES		8942  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_BASE_SAMPLES_WRENCHES_NAMES		8830  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_BASE_SAMPLES_WRENCHES_NAMES_ELM_2		8825  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_BASE_SAMPLES_WRENCHES_ELEMENTS		8911  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_BASE_SAMPLES_WRENCHES_ELEMENTS_ELM_2		8906  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_BASE_SAMPLES_WRENCHES_TIME_2		8937  /**/
flag Base_samples_Wrenches_IsConstraintValid(const Base_samples_Wrenches* pVal, int* pErrCode);

#define i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_SAMPLES_WRENCHES		8943  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_SAMPLES_WRENCHES_NAMES		8831  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_SAMPLES_WRENCHES_NAMES_ELM_2		8826  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_SAMPLES_WRENCHES_ELEMENTS		8912  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_SAMPLES_WRENCHES_ELEMENTS_ELM_2		8907  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_SAMPLES_WRENCHES_TIME_2		8938  /**/
#define i3ds_asn1_Base_samples_Wrenches_REQUIRED_BYTES_FOR_ENCODING       23860 
#define i3ds_asn1_Base_samples_Wrenches_REQUIRED_BITS_FOR_ENCODING        190880

flag Base_samples_Wrenches_Encode(const Base_samples_Wrenches* pVal, BitStream* pBitStrm, int* pErrCode, flag bCheckConstraints);

#define i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_SAMPLES_WRENCHES		8944  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_SAMPLES_WRENCHES_NAMES		8832  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_SAMPLES_WRENCHES_NAMES_ELM_2		8827  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_SAMPLES_WRENCHES_ELEMENTS		8913  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_SAMPLES_WRENCHES_ELEMENTS_ELM_2		8908  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_SAMPLES_WRENCHES_TIME_2		8939  /**/
flag Base_samples_Wrenches_Decode(Base_samples_Wrenches* pVal, BitStream* pBitStrm, int* pErrCode);
/*-- Base_samples_frame_frame_attrib_t --------------------------------------------*/
typedef struct {
    T_String data;
    T_String name_val;

} Base_samples_frame_frame_attrib_t;

void Base_samples_frame_frame_attrib_t_Initialize(Base_samples_frame_frame_attrib_t* pVal);

#define i3ds_asn1_i3ds_asn1_ERR_BASE_SAMPLES_FRAME_FRAME_ATTRIB_T		8973  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_BASE_SAMPLES_FRAME_FRAME_ATTRIB_T_DATA_2		8956  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_BASE_SAMPLES_FRAME_FRAME_ATTRIB_T_NAME_VAL_2		8968  /**/
flag Base_samples_frame_frame_attrib_t_IsConstraintValid(const Base_samples_frame_frame_attrib_t* pVal, int* pErrCode);

#define i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_SAMPLES_FRAME_FRAME_ATTRIB_T		8974  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_SAMPLES_FRAME_FRAME_ATTRIB_T_DATA_2		8957  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_SAMPLES_FRAME_FRAME_ATTRIB_T_NAME_VAL_2		8969  /**/
#define i3ds_asn1_Base_samples_frame_frame_attrib_t_REQUIRED_BYTES_FOR_ENCODING       82 
#define i3ds_asn1_Base_samples_frame_frame_attrib_t_REQUIRED_BITS_FOR_ENCODING        652

flag Base_samples_frame_frame_attrib_t_Encode(const Base_samples_frame_frame_attrib_t* pVal, BitStream* pBitStrm, int* pErrCode, flag bCheckConstraints);

#define i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_SAMPLES_FRAME_FRAME_ATTRIB_T		8975  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_SAMPLES_FRAME_FRAME_ATTRIB_T_DATA_2		8958  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_SAMPLES_FRAME_FRAME_ATTRIB_T_NAME_VAL_2		8970  /**/
flag Base_samples_frame_frame_attrib_t_Decode(Base_samples_frame_frame_attrib_t* pVal, BitStream* pBitStrm, int* pErrCode);
/*-- Base_JointTransform_m --------------------------------------------*/
typedef struct {
    T_String sourceframe;
    T_String targetframe;
    Wrappers_Vector3d rotationaxis;

} Base_JointTransform_m;

void Base_JointTransform_m_Initialize(Base_JointTransform_m* pVal);

#define i3ds_asn1_i3ds_asn1_ERR_BASE_JOINTTRANSFORM_M		10251  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_BASE_JOINTTRANSFORM_M_SOURCEFRAME_2		10203  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_BASE_JOINTTRANSFORM_M_TARGETFRAME_2		10215  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_BASE_JOINTTRANSFORM_M_ROTATIONAXIS_2		10246  /**/
flag Base_JointTransform_m_IsConstraintValid(const Base_JointTransform_m* pVal, int* pErrCode);

#define i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_JOINTTRANSFORM_M		10252  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_JOINTTRANSFORM_M_SOURCEFRAME_2		10204  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_JOINTTRANSFORM_M_TARGETFRAME_2		10216  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_JOINTTRANSFORM_M_ROTATIONAXIS_2		10247  /**/
#define i3ds_asn1_Base_JointTransform_m_REQUIRED_BYTES_FOR_ENCODING       121 
#define i3ds_asn1_Base_JointTransform_m_REQUIRED_BITS_FOR_ENCODING        966

flag Base_JointTransform_m_Encode(const Base_JointTransform_m* pVal, BitStream* pBitStrm, int* pErrCode, flag bCheckConstraints);

#define i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_JOINTTRANSFORM_M		10253  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_JOINTTRANSFORM_M_SOURCEFRAME_2		10205  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_JOINTTRANSFORM_M_TARGETFRAME_2		10217  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_JOINTTRANSFORM_M_ROTATIONAXIS_2		10248  /**/
flag Base_JointTransform_m_Decode(Base_JointTransform_m* pVal, BitStream* pBitStrm, int* pErrCode);


typedef struct {
    int nCount; 
    
    Base_JointTransform_m arr[200];
} Std_orogen_typekits_mtype_std_vector_base_JointTransform;

void Std_orogen_typekits_mtype_std_vector_base_JointTransform_Initialize(Std_orogen_typekits_mtype_std_vector_base_JointTransform* pVal);

#define i3ds_asn1_ERR_STD_OROGEN_TYPEKITS_MTYPE_STD_VECTOR_BASE_JOINTTRANSFORM		3983  /**/
#define i3ds_asn1_i3ds_asn1_ERR_STD_OROGEN_TYPEKITS_MTYPE_STD_VECTOR_BASE_JOINTTRANSFORM_ELM_2		3978  /**/
flag Std_orogen_typekits_mtype_std_vector_base_JointTransform_IsConstraintValid(const Std_orogen_typekits_mtype_std_vector_base_JointTransform* pVal, int* pErrCode);

#define i3ds_asn1_ERR_UPER_ENCODE_STD_OROGEN_TYPEKITS_MTYPE_STD_VECTOR_BASE_JOINTTRANSFORM		3984  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_STD_OROGEN_TYPEKITS_MTYPE_STD_VECTOR_BASE_JOINTTRANSFORM_ELM_2		3979  /**/
#define i3ds_asn1_Std_orogen_typekits_mtype_std_vector_base_JointTransform_REQUIRED_BYTES_FOR_ENCODING       24151 
#define i3ds_asn1_Std_orogen_typekits_mtype_std_vector_base_JointTransform_REQUIRED_BITS_FOR_ENCODING        193208

flag Std_orogen_typekits_mtype_std_vector_base_JointTransform_Encode(const Std_orogen_typekits_mtype_std_vector_base_JointTransform* pVal, BitStream* pBitStrm, int* pErrCode, flag bCheckConstraints);

#define i3ds_asn1_ERR_UPER_DECODE_STD_OROGEN_TYPEKITS_MTYPE_STD_VECTOR_BASE_JOINTTRANSFORM		3985  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_STD_OROGEN_TYPEKITS_MTYPE_STD_VECTOR_BASE_JOINTTRANSFORM_ELM_2		3980  /**/
flag Std_orogen_typekits_mtype_std_vector_base_JointTransform_Decode(Std_orogen_typekits_mtype_std_vector_base_JointTransform* pVal, BitStream* pBitStrm, int* pErrCode);
/*-- Base_JointTransformVector_m --------------------------------------------*/


typedef struct {
    int nCount; 
    
    T_String arr[200];
} Base_JointTransformVector_m_names;
typedef struct {
    Base_JointTransformVector_m_names names;
    Std_orogen_typekits_mtype_std_vector_base_JointTransform elements;

} Base_JointTransformVector_m;

void Base_JointTransformVector_m_names_Initialize(Base_JointTransformVector_m_names* pVal);
void Base_JointTransformVector_m_Initialize(Base_JointTransformVector_m* pVal);

#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_BASE_JOINTTRANSFORMVECTOR_M		11875  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_BASE_JOINTTRANSFORMVECTOR_M_NAMES		11789  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_BASE_JOINTTRANSFORMVECTOR_M_NAMES_ELM_2		11784  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_BASE_JOINTTRANSFORMVECTOR_M_ELEMENTS_2		11870  /**/
flag Base_JointTransformVector_m_IsConstraintValid(const Base_JointTransformVector_m* pVal, int* pErrCode);

#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_JOINTTRANSFORMVECTOR_M		11876  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_JOINTTRANSFORMVECTOR_M_NAMES		11790  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_JOINTTRANSFORMVECTOR_M_NAMES_ELM_2		11785  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_JOINTTRANSFORMVECTOR_M_ELEMENTS_2		11871  /**/
#define i3ds_asn1_Base_JointTransformVector_m_REQUIRED_BYTES_FOR_ENCODING       32302 
#define i3ds_asn1_Base_JointTransformVector_m_REQUIRED_BITS_FOR_ENCODING        258416

flag Base_JointTransformVector_m_Encode(const Base_JointTransformVector_m* pVal, BitStream* pBitStrm, int* pErrCode, flag bCheckConstraints);

#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_JOINTTRANSFORMVECTOR_M		11877  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_JOINTTRANSFORMVECTOR_M_NAMES		11791  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_JOINTTRANSFORMVECTOR_M_NAMES_ELM_2		11786  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_JOINTTRANSFORMVECTOR_M_ELEMENTS_2		11872  /**/
flag Base_JointTransformVector_m_Decode(Base_JointTransformVector_m* pVal, BitStream* pBitStrm, int* pErrCode);
/*-- Base_NamedVector_base_JointTransform_m --------------------------------------------*/


typedef struct {
    int nCount; 
    
    T_String arr[200];
} Base_NamedVector_base_JointTransform_m_names;
typedef struct {
    Base_NamedVector_base_JointTransform_m_names names;
    Std_orogen_typekits_mtype_std_vector_base_JointTransform elements;

} Base_NamedVector_base_JointTransform_m;

void Base_NamedVector_base_JointTransform_m_names_Initialize(Base_NamedVector_base_JointTransform_m_names* pVal);
void Base_NamedVector_base_JointTransform_m_Initialize(Base_NamedVector_base_JointTransform_m* pVal);

#define i3ds_asn1_i3ds_asn1_ERR_BASE_NAMEDVECTOR_BASE_JOINTTRANSFORM_M		11980  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_BASE_NAMEDVECTOR_BASE_JOINTTRANSFORM_M_NAMES		11894  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_BASE_NAMEDVECTOR_BASE_JOINTTRANSFORM_M_NAMES_ELM_2		11889  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_BASE_NAMEDVECTOR_BASE_JOINTTRANSFORM_M_ELEMENTS_2		11975  /**/
flag Base_NamedVector_base_JointTransform_m_IsConstraintValid(const Base_NamedVector_base_JointTransform_m* pVal, int* pErrCode);

#define i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_NAMEDVECTOR_BASE_JOINTTRANSFORM_M		11981  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_NAMEDVECTOR_BASE_JOINTTRANSFORM_M_NAMES		11895  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_NAMEDVECTOR_BASE_JOINTTRANSFORM_M_NAMES_ELM_2		11890  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_NAMEDVECTOR_BASE_JOINTTRANSFORM_M_ELEMENTS_2		11976  /**/
#define i3ds_asn1_Base_NamedVector_base_JointTransform_m_REQUIRED_BYTES_FOR_ENCODING       32302 
#define i3ds_asn1_Base_NamedVector_base_JointTransform_m_REQUIRED_BITS_FOR_ENCODING        258416

flag Base_NamedVector_base_JointTransform_m_Encode(const Base_NamedVector_base_JointTransform_m* pVal, BitStream* pBitStrm, int* pErrCode, flag bCheckConstraints);

#define i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_NAMEDVECTOR_BASE_JOINTTRANSFORM_M		11982  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_NAMEDVECTOR_BASE_JOINTTRANSFORM_M_NAMES		11896  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_NAMEDVECTOR_BASE_JOINTTRANSFORM_M_NAMES_ELM_2		11891  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_NAMEDVECTOR_BASE_JOINTTRANSFORM_M_ELEMENTS_2		11977  /**/
flag Base_NamedVector_base_JointTransform_m_Decode(Base_NamedVector_base_JointTransform_m* pVal, BitStream* pBitStrm, int* pErrCode);
/*-- Base_samples_RigidBodyState_m --------------------------------------------*/
typedef struct {
    Base_Time time;
    T_String sourceframe;
    T_String targetframe;
    Wrappers_Vector3d position;
    Wrappers_Matrix3d cov_position;
    Wrappers_Quaterniond orientation;
    Wrappers_Matrix3d cov_orientation;
    Wrappers_Vector3d velocity;
    Wrappers_Matrix3d cov_velocity;
    Wrappers_Vector3d angular_velocity;
    Wrappers_Matrix3d cov_angular_velocity;

} Base_samples_RigidBodyState_m;

void Base_samples_RigidBodyState_m_Initialize(Base_samples_RigidBodyState_m* pVal);

#define i3ds_asn1_i3ds_asn1_ERR_BASE_SAMPLES_RIGIDBODYSTATE_M		11677  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_BASE_SAMPLES_RIGIDBODYSTATE_M_TIME_2		11388  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_BASE_SAMPLES_RIGIDBODYSTATE_M_SOURCEFRAME_2		11400  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_BASE_SAMPLES_RIGIDBODYSTATE_M_TARGETFRAME_2		11412  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_BASE_SAMPLES_RIGIDBODYSTATE_M_POSITION_2		11443  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_BASE_SAMPLES_RIGIDBODYSTATE_M_COV_POSITION_2		11474  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_BASE_SAMPLES_RIGIDBODYSTATE_M_ORIENTATION_2		11517  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_BASE_SAMPLES_RIGIDBODYSTATE_M_COV_ORIENTATION_2		11548  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_BASE_SAMPLES_RIGIDBODYSTATE_M_VELOCITY_2		11579  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_BASE_SAMPLES_RIGIDBODYSTATE_M_COV_VELOCITY_2		11610  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_BASE_SAMPLES_RIGIDBODYSTATE_M_ANGULAR_VELOCITY_2		11641  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_BASE_SAMPLES_RIGIDBODYSTATE_M_COV_ANGULAR_VELOCITY_2		11672  /**/
flag Base_samples_RigidBodyState_m_IsConstraintValid(const Base_samples_RigidBodyState_m* pVal, int* pErrCode);

#define i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_SAMPLES_RIGIDBODYSTATE_M		11678  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_SAMPLES_RIGIDBODYSTATE_M_TIME_2		11389  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_SAMPLES_RIGIDBODYSTATE_M_SOURCEFRAME_2		11401  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_SAMPLES_RIGIDBODYSTATE_M_TARGETFRAME_2		11413  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_SAMPLES_RIGIDBODYSTATE_M_POSITION_2		11444  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_SAMPLES_RIGIDBODYSTATE_M_COV_POSITION_2		11475  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_SAMPLES_RIGIDBODYSTATE_M_ORIENTATION_2		11518  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_SAMPLES_RIGIDBODYSTATE_M_COV_ORIENTATION_2		11549  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_SAMPLES_RIGIDBODYSTATE_M_VELOCITY_2		11580  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_SAMPLES_RIGIDBODYSTATE_M_COV_VELOCITY_2		11611  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_SAMPLES_RIGIDBODYSTATE_M_ANGULAR_VELOCITY_2		11642  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_SAMPLES_RIGIDBODYSTATE_M_COV_ANGULAR_VELOCITY_2		11673  /**/
#define i3ds_asn1_Base_samples_RigidBodyState_m_REQUIRED_BYTES_FOR_ENCODING       730 
#define i3ds_asn1_Base_samples_RigidBodyState_m_REQUIRED_BITS_FOR_ENCODING        5836

flag Base_samples_RigidBodyState_m_Encode(const Base_samples_RigidBodyState_m* pVal, BitStream* pBitStrm, int* pErrCode, flag bCheckConstraints);

#define i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_SAMPLES_RIGIDBODYSTATE_M		11679  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_SAMPLES_RIGIDBODYSTATE_M_TIME_2		11390  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_SAMPLES_RIGIDBODYSTATE_M_SOURCEFRAME_2		11402  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_SAMPLES_RIGIDBODYSTATE_M_TARGETFRAME_2		11414  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_SAMPLES_RIGIDBODYSTATE_M_POSITION_2		11445  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_SAMPLES_RIGIDBODYSTATE_M_COV_POSITION_2		11476  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_SAMPLES_RIGIDBODYSTATE_M_ORIENTATION_2		11519  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_SAMPLES_RIGIDBODYSTATE_M_COV_ORIENTATION_2		11550  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_SAMPLES_RIGIDBODYSTATE_M_VELOCITY_2		11581  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_SAMPLES_RIGIDBODYSTATE_M_COV_VELOCITY_2		11612  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_SAMPLES_RIGIDBODYSTATE_M_ANGULAR_VELOCITY_2		11643  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_SAMPLES_RIGIDBODYSTATE_M_COV_ANGULAR_VELOCITY_2		11674  /**/
flag Base_samples_RigidBodyState_m_Decode(Base_samples_RigidBodyState_m* pVal, BitStream* pBitStrm, int* pErrCode);
/*-- Base_NamedVector_base_Wrench_m --------------------------------------------*/


typedef struct {
    int nCount; 
    
    T_String arr[200];
} Base_NamedVector_base_Wrench_m_names;
typedef struct {
    Base_NamedVector_base_Wrench_m_names names;
    Std_orogen_typekits_mtype_std_vector_base_Wrench elements;

} Base_NamedVector_base_Wrench_m;

void Base_NamedVector_base_Wrench_m_names_Initialize(Base_NamedVector_base_Wrench_m_names* pVal);
void Base_NamedVector_base_Wrench_m_Initialize(Base_NamedVector_base_Wrench_m* pVal);

#define i3ds_asn1_i3ds_asn1_ERR_BASE_NAMEDVECTOR_BASE_WRENCH_M		12092  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_BASE_NAMEDVECTOR_BASE_WRENCH_M_NAMES		11999  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_BASE_NAMEDVECTOR_BASE_WRENCH_M_NAMES_ELM_2		11994  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_BASE_NAMEDVECTOR_BASE_WRENCH_M_ELEMENTS_2		12087  /**/
flag Base_NamedVector_base_Wrench_m_IsConstraintValid(const Base_NamedVector_base_Wrench_m* pVal, int* pErrCode);

#define i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_NAMEDVECTOR_BASE_WRENCH_M		12093  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_NAMEDVECTOR_BASE_WRENCH_M_NAMES		12000  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_NAMEDVECTOR_BASE_WRENCH_M_NAMES_ELM_2		11995  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_NAMEDVECTOR_BASE_WRENCH_M_ELEMENTS_2		12088  /**/
#define i3ds_asn1_Base_NamedVector_base_Wrench_m_REQUIRED_BYTES_FOR_ENCODING       23852 
#define i3ds_asn1_Base_NamedVector_base_Wrench_m_REQUIRED_BITS_FOR_ENCODING        190816

flag Base_NamedVector_base_Wrench_m_Encode(const Base_NamedVector_base_Wrench_m* pVal, BitStream* pBitStrm, int* pErrCode, flag bCheckConstraints);

#define i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_NAMEDVECTOR_BASE_WRENCH_M		12094  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_NAMEDVECTOR_BASE_WRENCH_M_NAMES		12001  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_NAMEDVECTOR_BASE_WRENCH_M_NAMES_ELM_2		11996  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_NAMEDVECTOR_BASE_WRENCH_M_ELEMENTS_2		12089  /**/
flag Base_NamedVector_base_Wrench_m_Decode(Base_NamedVector_base_Wrench_m* pVal, BitStream* pBitStrm, int* pErrCode);
/*-- Base_samples_Wrenches_m --------------------------------------------*/


typedef struct {
    int nCount; 
    
    T_String arr[200];
} Base_samples_Wrenches_m_names;
typedef struct {
    Base_samples_Wrenches_m_names names;
    Std_orogen_typekits_mtype_std_vector_base_Wrench elements;
    Base_Time time;

} Base_samples_Wrenches_m;

void Base_samples_Wrenches_m_names_Initialize(Base_samples_Wrenches_m_names* pVal);
void Base_samples_Wrenches_m_Initialize(Base_samples_Wrenches_m* pVal);

#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_BASE_SAMPLES_WRENCHES_M		12335  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_BASE_SAMPLES_WRENCHES_M_NAMES		12218  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_BASE_SAMPLES_WRENCHES_M_NAMES_ELM_2		12213  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_BASE_SAMPLES_WRENCHES_M_ELEMENTS_2		12306  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_BASE_SAMPLES_WRENCHES_M_TIME_2		12330  /**/
flag Base_samples_Wrenches_m_IsConstraintValid(const Base_samples_Wrenches_m* pVal, int* pErrCode);

#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_SAMPLES_WRENCHES_M		12336  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_SAMPLES_WRENCHES_M_NAMES		12219  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_SAMPLES_WRENCHES_M_NAMES_ELM_2		12214  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_SAMPLES_WRENCHES_M_ELEMENTS_2		12307  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_SAMPLES_WRENCHES_M_TIME_2		12331  /**/
#define i3ds_asn1_Base_samples_Wrenches_m_REQUIRED_BYTES_FOR_ENCODING       23860 
#define i3ds_asn1_Base_samples_Wrenches_m_REQUIRED_BITS_FOR_ENCODING        190880

flag Base_samples_Wrenches_m_Encode(const Base_samples_Wrenches_m* pVal, BitStream* pBitStrm, int* pErrCode, flag bCheckConstraints);

#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_SAMPLES_WRENCHES_M		12337  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_SAMPLES_WRENCHES_M_NAMES		12220  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_SAMPLES_WRENCHES_M_NAMES_ELM_2		12215  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_SAMPLES_WRENCHES_M_ELEMENTS_2		12308  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_SAMPLES_WRENCHES_M_TIME_2		12332  /**/
flag Base_samples_Wrenches_m_Decode(Base_samples_Wrenches_m* pVal, BitStream* pBitStrm, int* pErrCode);
/*-- Base_samples_LaserScan --------------------------------------------*/


typedef struct {
    int nCount; 
    
    T_UInt32 arr[200];
} Base_samples_LaserScan_ranges;


typedef struct {
    int nCount; 
    
    T_Float arr[200];
} Base_samples_LaserScan_remission;
typedef struct {
    Base_Time time;
    T_Double start_angle;
    T_Double angular_resolution;
    T_Double speed;
    Base_samples_LaserScan_ranges ranges;
    T_UInt32 minrange;
    T_UInt32 maxrange;
    Base_samples_LaserScan_remission remission;

} Base_samples_LaserScan;

void Base_samples_LaserScan_ranges_Initialize(Base_samples_LaserScan_ranges* pVal);
void Base_samples_LaserScan_remission_Initialize(Base_samples_LaserScan_remission* pVal);
void Base_samples_LaserScan_Initialize(Base_samples_LaserScan* pVal);

#define i3ds_asn1_ERR_BASE_SAMPLES_LASERSCAN		7822  /**/
#define i3ds_asn1_i3ds_asn1_ERR_BASE_SAMPLES_LASERSCAN_TIME_2		7719  /**/
#define i3ds_asn1_i3ds_asn1_ERR_BASE_SAMPLES_LASERSCAN_START_ANGLE_2		7731  /**/
#define i3ds_asn1_i3ds_asn1_ERR_BASE_SAMPLES_LASERSCAN_ANGULAR_RESOLUTION_2		7743  /**/
#define i3ds_asn1_i3ds_asn1_ERR_BASE_SAMPLES_LASERSCAN_SPEED_2		7755  /**/
#define i3ds_asn1_i3ds_asn1_ERR_BASE_SAMPLES_LASERSCAN_RANGES		7772  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_BASE_SAMPLES_LASERSCAN_RANGES_ELM_2		7767  /**/
#define i3ds_asn1_i3ds_asn1_ERR_BASE_SAMPLES_LASERSCAN_MINRANGE_2		7786  /**/
#define i3ds_asn1_i3ds_asn1_ERR_BASE_SAMPLES_LASERSCAN_MAXRANGE_2		7798  /**/
#define i3ds_asn1_i3ds_asn1_ERR_BASE_SAMPLES_LASERSCAN_REMISSION		7815  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_BASE_SAMPLES_LASERSCAN_REMISSION_ELM_2		7810  /**/
flag Base_samples_LaserScan_IsConstraintValid(const Base_samples_LaserScan* pVal, int* pErrCode);

#define i3ds_asn1_ERR_UPER_ENCODE_BASE_SAMPLES_LASERSCAN		7823  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_SAMPLES_LASERSCAN_TIME_2		7720  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_SAMPLES_LASERSCAN_START_ANGLE_2		7732  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_SAMPLES_LASERSCAN_ANGULAR_RESOLUTION_2		7744  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_SAMPLES_LASERSCAN_SPEED_2		7756  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_SAMPLES_LASERSCAN_RANGES		7773  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_SAMPLES_LASERSCAN_RANGES_ELM_2		7768  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_SAMPLES_LASERSCAN_MINRANGE_2		7787  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_SAMPLES_LASERSCAN_MAXRANGE_2		7799  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_SAMPLES_LASERSCAN_REMISSION		7816  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_SAMPLES_LASERSCAN_REMISSION_ELM_2		7811  /**/
#define i3ds_asn1_Base_samples_LaserScan_REQUIRED_BYTES_FOR_ENCODING       3457 
#define i3ds_asn1_Base_samples_LaserScan_REQUIRED_BITS_FOR_ENCODING        27656

flag Base_samples_LaserScan_Encode(const Base_samples_LaserScan* pVal, BitStream* pBitStrm, int* pErrCode, flag bCheckConstraints);

#define i3ds_asn1_ERR_UPER_DECODE_BASE_SAMPLES_LASERSCAN		7824  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_SAMPLES_LASERSCAN_TIME_2		7721  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_SAMPLES_LASERSCAN_START_ANGLE_2		7733  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_SAMPLES_LASERSCAN_ANGULAR_RESOLUTION_2		7745  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_SAMPLES_LASERSCAN_SPEED_2		7757  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_SAMPLES_LASERSCAN_RANGES		7774  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_SAMPLES_LASERSCAN_RANGES_ELM_2		7769  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_SAMPLES_LASERSCAN_MINRANGE_2		7788  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_SAMPLES_LASERSCAN_MAXRANGE_2		7800  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_SAMPLES_LASERSCAN_REMISSION		7817  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_SAMPLES_LASERSCAN_REMISSION_ELM_2		7812  /**/
flag Base_samples_LaserScan_Decode(Base_samples_LaserScan* pVal, BitStream* pBitStrm, int* pErrCode);
/*-- Base_samples_Sonar --------------------------------------------*/


typedef struct {
    int nCount; 
    
    Base_Time arr[200];
} Base_samples_Sonar_timestamps;


typedef struct {
    int nCount; 
    
    Base_Angle arr[200];
} Base_samples_Sonar_bearings;


typedef struct {
    int nCount; 
    
    T_Float arr[200];
} Base_samples_Sonar_bins;
typedef struct {
    Base_Time time;
    Base_samples_Sonar_timestamps timestamps;
    Base_Time bin_duration;
    Base_Angle beam_width;
    Base_Angle beam_height;
    Base_samples_Sonar_bearings bearings;
    T_Float speed_of_sound;
    T_UInt32 bin_count;
    T_UInt32 beam_count;
    Base_samples_Sonar_bins bins;

} Base_samples_Sonar;

void Base_samples_Sonar_timestamps_Initialize(Base_samples_Sonar_timestamps* pVal);
void Base_samples_Sonar_bearings_Initialize(Base_samples_Sonar_bearings* pVal);
void Base_samples_Sonar_bins_Initialize(Base_samples_Sonar_bins* pVal);
void Base_samples_Sonar_Initialize(Base_samples_Sonar* pVal);

#define i3ds_asn1_ERR_BASE_SAMPLES_SONAR		8464  /**/
#define i3ds_asn1_i3ds_asn1_ERR_BASE_SAMPLES_SONAR_TIME_2		8270  /**/
#define i3ds_asn1_i3ds_asn1_ERR_BASE_SAMPLES_SONAR_TIMESTAMPS		8299  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_BASE_SAMPLES_SONAR_TIMESTAMPS_ELM_2		8294  /**/
#define i3ds_asn1_i3ds_asn1_ERR_BASE_SAMPLES_SONAR_BIN_DURATION_2		8325  /**/
#define i3ds_asn1_i3ds_asn1_ERR_BASE_SAMPLES_SONAR_BEAM_WIDTH_2		8349  /**/
#define i3ds_asn1_i3ds_asn1_ERR_BASE_SAMPLES_SONAR_BEAM_HEIGHT_2		8373  /**/
#define i3ds_asn1_i3ds_asn1_ERR_BASE_SAMPLES_SONAR_BEARINGS		8402  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_BASE_SAMPLES_SONAR_BEARINGS_ELM_2		8397  /**/
#define i3ds_asn1_i3ds_asn1_ERR_BASE_SAMPLES_SONAR_SPEED_OF_SOUND_2		8416  /**/
#define i3ds_asn1_i3ds_asn1_ERR_BASE_SAMPLES_SONAR_BIN_COUNT_2		8428  /**/
#define i3ds_asn1_i3ds_asn1_ERR_BASE_SAMPLES_SONAR_BEAM_COUNT_2		8440  /**/
#define i3ds_asn1_i3ds_asn1_ERR_BASE_SAMPLES_SONAR_BINS		8457  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_BASE_SAMPLES_SONAR_BINS_ELM_2		8452  /**/
flag Base_samples_Sonar_IsConstraintValid(const Base_samples_Sonar* pVal, int* pErrCode);

#define i3ds_asn1_ERR_UPER_ENCODE_BASE_SAMPLES_SONAR		8465  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_SAMPLES_SONAR_TIME_2		8271  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_SAMPLES_SONAR_TIMESTAMPS		8300  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_SAMPLES_SONAR_TIMESTAMPS_ELM_2		8295  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_SAMPLES_SONAR_BIN_DURATION_2		8326  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_SAMPLES_SONAR_BEAM_WIDTH_2		8350  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_SAMPLES_SONAR_BEAM_HEIGHT_2		8374  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_SAMPLES_SONAR_BEARINGS		8403  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_SAMPLES_SONAR_BEARINGS_ELM_2		8398  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_SAMPLES_SONAR_SPEED_OF_SOUND_2		8417  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_SAMPLES_SONAR_BIN_COUNT_2		8429  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_SAMPLES_SONAR_BEAM_COUNT_2		8441  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_SAMPLES_SONAR_BINS		8458  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_SAMPLES_SONAR_BINS_ELM_2		8453  /**/
#define i3ds_asn1_Base_samples_Sonar_REQUIRED_BYTES_FOR_ENCODING       6866 
#define i3ds_asn1_Base_samples_Sonar_REQUIRED_BITS_FOR_ENCODING        54928

flag Base_samples_Sonar_Encode(const Base_samples_Sonar* pVal, BitStream* pBitStrm, int* pErrCode, flag bCheckConstraints);

#define i3ds_asn1_ERR_UPER_DECODE_BASE_SAMPLES_SONAR		8466  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_SAMPLES_SONAR_TIME_2		8272  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_SAMPLES_SONAR_TIMESTAMPS		8301  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_SAMPLES_SONAR_TIMESTAMPS_ELM_2		8296  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_SAMPLES_SONAR_BIN_DURATION_2		8327  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_SAMPLES_SONAR_BEAM_WIDTH_2		8351  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_SAMPLES_SONAR_BEAM_HEIGHT_2		8375  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_SAMPLES_SONAR_BEARINGS		8404  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_SAMPLES_SONAR_BEARINGS_ELM_2		8399  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_SAMPLES_SONAR_SPEED_OF_SOUND_2		8418  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_SAMPLES_SONAR_BIN_COUNT_2		8430  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_SAMPLES_SONAR_BEAM_COUNT_2		8442  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_SAMPLES_SONAR_BINS		8459  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_SAMPLES_SONAR_BINS_ELM_2		8454  /**/
flag Base_samples_Sonar_Decode(Base_samples_Sonar* pVal, BitStream* pBitStrm, int* pErrCode);
/*-- Base_samples_SonarScan --------------------------------------------*/
typedef struct {
    int nCount; 
    
    byte arr[200];
} Base_samples_SonarScan_data;



typedef struct {
    int nCount; 
    
    Base_Time arr[200];
} Base_samples_SonarScan_time_beams;
typedef struct {
    Base_Time time;
    Base_samples_SonarScan_data data;
    Base_samples_SonarScan_time_beams time_beams;
    T_UInt16 number_of_beams;
    T_UInt16 number_of_bins;
    Base_Angle start_bearing;
    Base_Angle angular_resolution;
    T_Double sampling_interval;
    T_Float speed_of_sound;
    Base_Angle beamwidth_horizontal;
    Base_Angle beamwidth_vertical;
    T_Boolean memory_layout_column;
    T_Boolean polar_coordinates;

} Base_samples_SonarScan;

void Base_samples_SonarScan_data_Initialize(Base_samples_SonarScan_data* pVal);
void Base_samples_SonarScan_time_beams_Initialize(Base_samples_SonarScan_time_beams* pVal);
void Base_samples_SonarScan_Initialize(Base_samples_SonarScan* pVal);

#define i3ds_asn1_i3ds_asn1_ERR_BASE_SAMPLES_SONARSCAN		8811  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_BASE_SAMPLES_SONARSCAN_TIME_2		8600  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_BASE_SAMPLES_SONARSCAN_DATA		8605  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_BASE_SAMPLES_SONARSCAN_TIME_BEAMS		8636  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_BASE_SAMPLES_SONARSCAN_TIME_BEAMS_ELM_2		8631  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_BASE_SAMPLES_SONARSCAN_NUMBER_OF_BEAMS_2		8650  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_BASE_SAMPLES_SONARSCAN_NUMBER_OF_BINS_2		8662  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_BASE_SAMPLES_SONARSCAN_START_BEARING_2		8686  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_BASE_SAMPLES_SONARSCAN_ANGULAR_RESOLUTION_2		8710  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_BASE_SAMPLES_SONARSCAN_SAMPLING_INTERVAL_2		8722  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_BASE_SAMPLES_SONARSCAN_SPEED_OF_SOUND_2		8734  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_BASE_SAMPLES_SONARSCAN_BEAMWIDTH_HORIZONTAL_2		8758  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_BASE_SAMPLES_SONARSCAN_BEAMWIDTH_VERTICAL_2		8782  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_BASE_SAMPLES_SONARSCAN_MEMORY_LAYOUT_COLUMN_2		8794  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_BASE_SAMPLES_SONARSCAN_POLAR_COORDINATES_2		8806  /**/
flag Base_samples_SonarScan_IsConstraintValid(const Base_samples_SonarScan* pVal, int* pErrCode);

#define i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_SAMPLES_SONARSCAN		8812  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_SAMPLES_SONARSCAN_TIME_2		8601  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_SAMPLES_SONARSCAN_DATA		8606  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_SAMPLES_SONARSCAN_TIME_BEAMS		8637  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_SAMPLES_SONARSCAN_TIME_BEAMS_ELM_2		8632  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_SAMPLES_SONARSCAN_NUMBER_OF_BEAMS_2		8651  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_SAMPLES_SONARSCAN_NUMBER_OF_BINS_2		8663  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_SAMPLES_SONARSCAN_START_BEARING_2		8687  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_SAMPLES_SONARSCAN_ANGULAR_RESOLUTION_2		8711  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_SAMPLES_SONARSCAN_SAMPLING_INTERVAL_2		8723  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_SAMPLES_SONARSCAN_SPEED_OF_SOUND_2		8735  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_SAMPLES_SONARSCAN_BEAMWIDTH_HORIZONTAL_2		8759  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_SAMPLES_SONARSCAN_BEAMWIDTH_VERTICAL_2		8783  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_SAMPLES_SONARSCAN_MEMORY_LAYOUT_COLUMN_2		8795  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_SAMPLES_SONARSCAN_POLAR_COORDINATES_2		8807  /**/
#define i3ds_asn1_Base_samples_SonarScan_REQUIRED_BYTES_FOR_ENCODING       1893 
#define i3ds_asn1_Base_samples_SonarScan_REQUIRED_BITS_FOR_ENCODING        15138

flag Base_samples_SonarScan_Encode(const Base_samples_SonarScan* pVal, BitStream* pBitStrm, int* pErrCode, flag bCheckConstraints);

#define i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_SAMPLES_SONARSCAN		8813  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_SAMPLES_SONARSCAN_TIME_2		8602  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_SAMPLES_SONARSCAN_DATA		8607  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_SAMPLES_SONARSCAN_TIME_BEAMS		8638  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_SAMPLES_SONARSCAN_TIME_BEAMS_ELM_2		8633  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_SAMPLES_SONARSCAN_NUMBER_OF_BEAMS_2		8652  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_SAMPLES_SONARSCAN_NUMBER_OF_BINS_2		8664  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_SAMPLES_SONARSCAN_START_BEARING_2		8688  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_SAMPLES_SONARSCAN_ANGULAR_RESOLUTION_2		8712  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_SAMPLES_SONARSCAN_SAMPLING_INTERVAL_2		8724  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_SAMPLES_SONARSCAN_SPEED_OF_SOUND_2		8736  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_SAMPLES_SONARSCAN_BEAMWIDTH_HORIZONTAL_2		8760  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_SAMPLES_SONARSCAN_BEAMWIDTH_VERTICAL_2		8784  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_SAMPLES_SONARSCAN_MEMORY_LAYOUT_COLUMN_2		8796  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_SAMPLES_SONARSCAN_POLAR_COORDINATES_2		8808  /**/
flag Base_samples_SonarScan_Decode(Base_samples_SonarScan* pVal, BitStream* pBitStrm, int* pErrCode);
/*-- Wrappers_MatrixXd --------------------------------------------*/


typedef struct {
    int nCount; 
    
    T_Double arr[200];
} Wrappers_MatrixXd_data;
typedef struct {
    T_Int32 rows;
    T_Int32 cols;
    Wrappers_MatrixXd_data data;

} Wrappers_MatrixXd;

void Wrappers_MatrixXd_data_Initialize(Wrappers_MatrixXd_data* pVal);
void Wrappers_MatrixXd_Initialize(Wrappers_MatrixXd* pVal);

#define i3ds_asn1_ERR_WRAPPERS_MATRIXXD		10125  /**/
#define i3ds_asn1_i3ds_asn1_ERR_WRAPPERS_MATRIXXD_ROWS_2		10089  /**/
#define i3ds_asn1_i3ds_asn1_ERR_WRAPPERS_MATRIXXD_COLS_2		10101  /**/
#define i3ds_asn1_i3ds_asn1_ERR_WRAPPERS_MATRIXXD_DATA		10118  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_WRAPPERS_MATRIXXD_DATA_ELM_2		10113  /**/
flag Wrappers_MatrixXd_IsConstraintValid(const Wrappers_MatrixXd* pVal, int* pErrCode);

#define i3ds_asn1_ERR_UPER_ENCODE_WRAPPERS_MATRIXXD		10126  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_WRAPPERS_MATRIXXD_ROWS_2		10090  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_WRAPPERS_MATRIXXD_COLS_2		10102  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_WRAPPERS_MATRIXXD_DATA		10119  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_WRAPPERS_MATRIXXD_DATA_ELM_2		10114  /**/
#define i3ds_asn1_Wrappers_MatrixXd_REQUIRED_BYTES_FOR_ENCODING       2609 
#define i3ds_asn1_Wrappers_MatrixXd_REQUIRED_BITS_FOR_ENCODING        20872

flag Wrappers_MatrixXd_Encode(const Wrappers_MatrixXd* pVal, BitStream* pBitStrm, int* pErrCode, flag bCheckConstraints);

#define i3ds_asn1_ERR_UPER_DECODE_WRAPPERS_MATRIXXD		10127  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_WRAPPERS_MATRIXXD_ROWS_2		10091  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_WRAPPERS_MATRIXXD_COLS_2		10103  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_WRAPPERS_MATRIXXD_DATA		10120  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_WRAPPERS_MATRIXXD_DATA_ELM_2		10115  /**/
flag Wrappers_MatrixXd_Decode(Wrappers_MatrixXd* pVal, BitStream* pBitStrm, int* pErrCode);
typedef DummyBase_T Dummy2Base_T;


void Dummy2Base_T_Initialize(Dummy2Base_T* pVal);

#define i3ds_asn1_ERR_DUMMY2BASE_T_2_2		3762  /**/
flag Dummy2Base_T_IsConstraintValid(const Dummy2Base_T* pVal, int* pErrCode);

#define i3ds_asn1_ERR_UPER_ENCODE_DUMMY2BASE_T_2_2		3763  /**/
#define i3ds_asn1_Dummy2Base_T_REQUIRED_BYTES_FOR_ENCODING       4 
#define i3ds_asn1_Dummy2Base_T_REQUIRED_BITS_FOR_ENCODING        32

flag Dummy2Base_T_Encode(const Dummy2Base_T* pVal, BitStream* pBitStrm, int* pErrCode, flag bCheckConstraints);

#define i3ds_asn1_ERR_UPER_DECODE_DUMMY2BASE_T_2_2		3764  /**/
flag Dummy2Base_T_Decode(Dummy2Base_T* pVal, BitStream* pBitStrm, int* pErrCode);
typedef enum {
    base_jointstate_mode_acceleration = 0,
    base_jointstate_mode_effort = 1,
    base_jointstate_mode_position = 2,
    base_jointstate_mode_raw = 3,
    base_jointstate_mode_speed = 4,
    base_jointstate_mode_unset = 5
} Base_JointState_MODE;

// please use the following macros to avoid breaking code.
#define i3ds_asn1_Base_JointState_MODE_base_jointstate_mode_acceleration base_jointstate_mode_acceleration
#define i3ds_asn1_Base_JointState_MODE_base_jointstate_mode_effort base_jointstate_mode_effort
#define i3ds_asn1_Base_JointState_MODE_base_jointstate_mode_position base_jointstate_mode_position
#define i3ds_asn1_Base_JointState_MODE_base_jointstate_mode_raw base_jointstate_mode_raw
#define i3ds_asn1_Base_JointState_MODE_base_jointstate_mode_speed base_jointstate_mode_speed
#define i3ds_asn1_Base_JointState_MODE_base_jointstate_mode_unset base_jointstate_mode_unset

void Base_JointState_MODE_Initialize(Base_JointState_MODE* pVal);

#define i3ds_asn1_i3ds_asn1_ERR_BASE_JOINTSTATE_MODE		3767  /**/
flag Base_JointState_MODE_IsConstraintValid(const Base_JointState_MODE* pVal, int* pErrCode);

#define i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_JOINTSTATE_MODE		3768  /**/
#define i3ds_asn1_Base_JointState_MODE_REQUIRED_BYTES_FOR_ENCODING       1 
#define i3ds_asn1_Base_JointState_MODE_REQUIRED_BITS_FOR_ENCODING        3

flag Base_JointState_MODE_Encode(const Base_JointState_MODE* pVal, BitStream* pBitStrm, int* pErrCode, flag bCheckConstraints);

#define i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_JOINTSTATE_MODE		3769  /**/
flag Base_JointState_MODE_Decode(Base_JointState_MODE* pVal, BitStream* pBitStrm, int* pErrCode);
typedef enum {
    base_time_resolution_microseconds = 0,
    base_time_resolution_milliseconds = 1,
    base_time_resolution_seconds = 2
} Base_Time_Resolution;

// please use the following macros to avoid breaking code.
#define i3ds_asn1_Base_Time_Resolution_base_time_resolution_microseconds base_time_resolution_microseconds
#define i3ds_asn1_Base_Time_Resolution_base_time_resolution_milliseconds base_time_resolution_milliseconds
#define i3ds_asn1_Base_Time_Resolution_base_time_resolution_seconds base_time_resolution_seconds

void Base_Time_Resolution_Initialize(Base_Time_Resolution* pVal);

#define i3ds_asn1_i3ds_asn1_ERR_BASE_TIME_RESOLUTION		3774  /**/
flag Base_Time_Resolution_IsConstraintValid(const Base_Time_Resolution* pVal, int* pErrCode);

#define i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_TIME_RESOLUTION		3775  /**/
#define i3ds_asn1_Base_Time_Resolution_REQUIRED_BYTES_FOR_ENCODING       1 
#define i3ds_asn1_Base_Time_Resolution_REQUIRED_BITS_FOR_ENCODING        2

flag Base_Time_Resolution_Encode(const Base_Time_Resolution* pVal, BitStream* pBitStrm, int* pErrCode, flag bCheckConstraints);

#define i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_TIME_RESOLUTION		3776  /**/
flag Base_Time_Resolution_Decode(Base_Time_Resolution* pVal, BitStream* pBitStrm, int* pErrCode);
typedef enum {
    base_geometry_splinebase_coordinatetype_derivative_to_next = 0,
    base_geometry_splinebase_coordinatetype_derivative_to_prior = 1,
    base_geometry_splinebase_coordinatetype_knuckle_point = 2,
    base_geometry_splinebase_coordinatetype_ordinary_point = 3,
    base_geometry_splinebase_coordinatetype_second_derivative_to_next = 4,
    base_geometry_splinebase_coordinatetype_second_derivative_to_prior = 5,
    base_geometry_splinebase_coordinatetype_tangent_point_for_next = 6,
    base_geometry_splinebase_coordinatetype_tangent_point_for_prior = 7
} Base_geometry_SplineBase_CoordinateType;

// please use the following macros to avoid breaking code.
#define i3ds_asn1_Base_geometry_SplineBase_CoordinateType_base_geometry_splinebase_coordinatetype_derivative_to_next base_geometry_splinebase_coordinatetype_derivative_to_next
#define i3ds_asn1_Base_geometry_SplineBase_CoordinateType_base_geometry_splinebase_coordinatetype_derivative_to_prior base_geometry_splinebase_coordinatetype_derivative_to_prior
#define i3ds_asn1_Base_geometry_SplineBase_CoordinateType_base_geometry_splinebase_coordinatetype_knuckle_point base_geometry_splinebase_coordinatetype_knuckle_point
#define i3ds_asn1_Base_geometry_SplineBase_CoordinateType_base_geometry_splinebase_coordinatetype_ordinary_point base_geometry_splinebase_coordinatetype_ordinary_point
#define i3ds_asn1_Base_geometry_SplineBase_CoordinateType_base_geometry_splinebase_coordinatetype_second_derivative_to_next base_geometry_splinebase_coordinatetype_second_derivative_to_next
#define i3ds_asn1_Base_geometry_SplineBase_CoordinateType_base_geometry_splinebase_coordinatetype_second_derivative_to_prior base_geometry_splinebase_coordinatetype_second_derivative_to_prior
#define i3ds_asn1_Base_geometry_SplineBase_CoordinateType_base_geometry_splinebase_coordinatetype_tangent_point_for_next base_geometry_splinebase_coordinatetype_tangent_point_for_next
#define i3ds_asn1_Base_geometry_SplineBase_CoordinateType_base_geometry_splinebase_coordinatetype_tangent_point_for_prior base_geometry_splinebase_coordinatetype_tangent_point_for_prior

void Base_geometry_SplineBase_CoordinateType_Initialize(Base_geometry_SplineBase_CoordinateType* pVal);

#define i3ds_asn1_ERR_BASE_GEOMETRY_SPLINEBASE_COORDINATETYPE		3781  /**/
flag Base_geometry_SplineBase_CoordinateType_IsConstraintValid(const Base_geometry_SplineBase_CoordinateType* pVal, int* pErrCode);

#define i3ds_asn1_ERR_UPER_ENCODE_BASE_GEOMETRY_SPLINEBASE_COORDINATETYPE		3782  /**/
#define i3ds_asn1_Base_geometry_SplineBase_CoordinateType_REQUIRED_BYTES_FOR_ENCODING       1 
#define i3ds_asn1_Base_geometry_SplineBase_CoordinateType_REQUIRED_BITS_FOR_ENCODING        3

flag Base_geometry_SplineBase_CoordinateType_Encode(const Base_geometry_SplineBase_CoordinateType* pVal, BitStream* pBitStrm, int* pErrCode, flag bCheckConstraints);

#define i3ds_asn1_ERR_UPER_DECODE_BASE_GEOMETRY_SPLINEBASE_COORDINATETYPE		3783  /**/
flag Base_geometry_SplineBase_CoordinateType_Decode(Base_geometry_SplineBase_CoordinateType* pVal, BitStream* pBitStrm, int* pErrCode);
typedef enum {
    base_samples_depthmap_depth_measurement_state_measurement_error = 0,
    base_samples_depthmap_depth_measurement_state_too_far = 1,
    base_samples_depthmap_depth_measurement_state_too_near = 2,
    base_samples_depthmap_depth_measurement_state_valid_measurement = 3
} Base_samples_DepthMap_DEPTH_MEASUREMENT_STATE;

// please use the following macros to avoid breaking code.
#define i3ds_asn1_Base_samples_DepthMap_DEPTH_MEASUREMENT_STATE_base_samples_depthmap_depth_measurement_state_measurement_error base_samples_depthmap_depth_measurement_state_measurement_error
#define i3ds_asn1_Base_samples_DepthMap_DEPTH_MEASUREMENT_STATE_base_samples_depthmap_depth_measurement_state_too_far base_samples_depthmap_depth_measurement_state_too_far
#define i3ds_asn1_Base_samples_DepthMap_DEPTH_MEASUREMENT_STATE_base_samples_depthmap_depth_measurement_state_too_near base_samples_depthmap_depth_measurement_state_too_near
#define i3ds_asn1_Base_samples_DepthMap_DEPTH_MEASUREMENT_STATE_base_samples_depthmap_depth_measurement_state_valid_measurement base_samples_depthmap_depth_measurement_state_valid_measurement

void Base_samples_DepthMap_DEPTH_MEASUREMENT_STATE_Initialize(Base_samples_DepthMap_DEPTH_MEASUREMENT_STATE* pVal);

#define i3ds_asn1_i3ds_asn1_ERR_BASE_SAMPLES_DEPTHMAP_DEPTH_MEASUREMENT_STATE		3788  /**/
flag Base_samples_DepthMap_DEPTH_MEASUREMENT_STATE_IsConstraintValid(const Base_samples_DepthMap_DEPTH_MEASUREMENT_STATE* pVal, int* pErrCode);

#define i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_SAMPLES_DEPTHMAP_DEPTH_MEASUREMENT_STATE		3789  /**/
#define i3ds_asn1_Base_samples_DepthMap_DEPTH_MEASUREMENT_STATE_REQUIRED_BYTES_FOR_ENCODING       1 
#define i3ds_asn1_Base_samples_DepthMap_DEPTH_MEASUREMENT_STATE_REQUIRED_BITS_FOR_ENCODING        2

flag Base_samples_DepthMap_DEPTH_MEASUREMENT_STATE_Encode(const Base_samples_DepthMap_DEPTH_MEASUREMENT_STATE* pVal, BitStream* pBitStrm, int* pErrCode, flag bCheckConstraints);

#define i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_SAMPLES_DEPTHMAP_DEPTH_MEASUREMENT_STATE		3790  /**/
flag Base_samples_DepthMap_DEPTH_MEASUREMENT_STATE_Decode(Base_samples_DepthMap_DEPTH_MEASUREMENT_STATE* pVal, BitStream* pBitStrm, int* pErrCode);
typedef enum {
    base_samples_depthmap_projection_type_planar = 0,
    base_samples_depthmap_projection_type_polar = 1
} Base_samples_DepthMap_PROJECTION_TYPE;

// please use the following macros to avoid breaking code.
#define i3ds_asn1_Base_samples_DepthMap_PROJECTION_TYPE_base_samples_depthmap_projection_type_planar base_samples_depthmap_projection_type_planar
#define i3ds_asn1_Base_samples_DepthMap_PROJECTION_TYPE_base_samples_depthmap_projection_type_polar base_samples_depthmap_projection_type_polar

void Base_samples_DepthMap_PROJECTION_TYPE_Initialize(Base_samples_DepthMap_PROJECTION_TYPE* pVal);

#define i3ds_asn1_i3ds_asn1_ERR_BASE_SAMPLES_DEPTHMAP_PROJECTION_TYPE		3795  /**/
flag Base_samples_DepthMap_PROJECTION_TYPE_IsConstraintValid(const Base_samples_DepthMap_PROJECTION_TYPE* pVal, int* pErrCode);

#define i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_SAMPLES_DEPTHMAP_PROJECTION_TYPE		3796  /**/
#define i3ds_asn1_Base_samples_DepthMap_PROJECTION_TYPE_REQUIRED_BYTES_FOR_ENCODING       1 
#define i3ds_asn1_Base_samples_DepthMap_PROJECTION_TYPE_REQUIRED_BITS_FOR_ENCODING        1

flag Base_samples_DepthMap_PROJECTION_TYPE_Encode(const Base_samples_DepthMap_PROJECTION_TYPE* pVal, BitStream* pBitStrm, int* pErrCode, flag bCheckConstraints);

#define i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_SAMPLES_DEPTHMAP_PROJECTION_TYPE		3797  /**/
flag Base_samples_DepthMap_PROJECTION_TYPE_Decode(Base_samples_DepthMap_PROJECTION_TYPE* pVal, BitStream* pBitStrm, int* pErrCode);
/*-- Base_samples_DepthMap --------------------------------------------*/


typedef struct {
    int nCount; 
    
    Base_Time arr[200];
} Base_samples_DepthMap_timestamps;


typedef struct {
    int nCount; 
    
    T_Double arr[200];
} Base_samples_DepthMap_vertical_interval;


typedef struct {
    int nCount; 
    
    T_Double arr[200];
} Base_samples_DepthMap_horizontal_interval;


typedef struct {
    int nCount; 
    
    T_Float arr[200];
} Base_samples_DepthMap_distances;


typedef struct {
    int nCount; 
    
    T_Float arr[200];
} Base_samples_DepthMap_remissions;
typedef struct {
    Base_Time time;
    Base_samples_DepthMap_timestamps timestamps;
    Base_samples_DepthMap_PROJECTION_TYPE vertical_projection;
    Base_samples_DepthMap_PROJECTION_TYPE horizontal_projection;
    Base_samples_DepthMap_vertical_interval vertical_interval;
    Base_samples_DepthMap_horizontal_interval horizontal_interval;
    T_UInt32 vertical_size;
    T_UInt32 horizontal_size;
    Base_samples_DepthMap_distances distances;
    Base_samples_DepthMap_remissions remissions;

} Base_samples_DepthMap;

void Base_samples_DepthMap_timestamps_Initialize(Base_samples_DepthMap_timestamps* pVal);
void Base_samples_DepthMap_vertical_interval_Initialize(Base_samples_DepthMap_vertical_interval* pVal);
void Base_samples_DepthMap_horizontal_interval_Initialize(Base_samples_DepthMap_horizontal_interval* pVal);
void Base_samples_DepthMap_distances_Initialize(Base_samples_DepthMap_distances* pVal);
void Base_samples_DepthMap_remissions_Initialize(Base_samples_DepthMap_remissions* pVal);
void Base_samples_DepthMap_Initialize(Base_samples_DepthMap* pVal);

#define i3ds_asn1_ERR_BASE_SAMPLES_DEPTHMAP		7437  /**/
#define i3ds_asn1_i3ds_asn1_ERR_BASE_SAMPLES_DEPTHMAP_TIME_2		7277  /**/
#define i3ds_asn1_i3ds_asn1_ERR_BASE_SAMPLES_DEPTHMAP_TIMESTAMPS		7306  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_BASE_SAMPLES_DEPTHMAP_TIMESTAMPS_ELM_2		7301  /**/
#define i3ds_asn1_i3ds_asn1_ERR_BASE_SAMPLES_DEPTHMAP_VERTICAL_PROJECTION_2		7320  /**/
#define i3ds_asn1_i3ds_asn1_ERR_BASE_SAMPLES_DEPTHMAP_HORIZONTAL_PROJECTION_2		7332  /**/
#define i3ds_asn1_i3ds_asn1_ERR_BASE_SAMPLES_DEPTHMAP_VERTICAL_INTERVAL		7349  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_BASE_SAMPLES_DEPTHMAP_VERTICAL_INTERVAL_ELM_2		7344  /**/
#define i3ds_asn1_i3ds_asn1_ERR_BASE_SAMPLES_DEPTHMAP_HORIZONTAL_INTERVAL		7368  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_BASE_SAMPLES_DEPTHMAP_HORIZONTAL_INTERVAL_ELM_2		7363  /**/
#define i3ds_asn1_i3ds_asn1_ERR_BASE_SAMPLES_DEPTHMAP_VERTICAL_SIZE_2		7382  /**/
#define i3ds_asn1_i3ds_asn1_ERR_BASE_SAMPLES_DEPTHMAP_HORIZONTAL_SIZE_2		7394  /**/
#define i3ds_asn1_i3ds_asn1_ERR_BASE_SAMPLES_DEPTHMAP_DISTANCES		7411  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_BASE_SAMPLES_DEPTHMAP_DISTANCES_ELM_2		7406  /**/
#define i3ds_asn1_i3ds_asn1_ERR_BASE_SAMPLES_DEPTHMAP_REMISSIONS		7430  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_BASE_SAMPLES_DEPTHMAP_REMISSIONS_ELM_2		7425  /**/
flag Base_samples_DepthMap_IsConstraintValid(const Base_samples_DepthMap* pVal, int* pErrCode);

#define i3ds_asn1_ERR_UPER_ENCODE_BASE_SAMPLES_DEPTHMAP		7438  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_SAMPLES_DEPTHMAP_TIME_2		7278  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_SAMPLES_DEPTHMAP_TIMESTAMPS		7307  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_SAMPLES_DEPTHMAP_TIMESTAMPS_ELM_2		7302  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_SAMPLES_DEPTHMAP_VERTICAL_PROJECTION_2		7321  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_SAMPLES_DEPTHMAP_HORIZONTAL_PROJECTION_2		7333  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_SAMPLES_DEPTHMAP_VERTICAL_INTERVAL		7350  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_SAMPLES_DEPTHMAP_VERTICAL_INTERVAL_ELM_2		7345  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_SAMPLES_DEPTHMAP_HORIZONTAL_INTERVAL		7369  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_SAMPLES_DEPTHMAP_HORIZONTAL_INTERVAL_ELM_2		7364  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_SAMPLES_DEPTHMAP_VERTICAL_SIZE_2		7383  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_SAMPLES_DEPTHMAP_HORIZONTAL_SIZE_2		7395  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_SAMPLES_DEPTHMAP_DISTANCES		7412  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_SAMPLES_DEPTHMAP_DISTANCES_ELM_2		7407  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_SAMPLES_DEPTHMAP_REMISSIONS		7431  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_SAMPLES_DEPTHMAP_REMISSIONS_ELM_2		7426  /**/
#define i3ds_asn1_Base_samples_DepthMap_REQUIRED_BYTES_FOR_ENCODING       12022 
#define i3ds_asn1_Base_samples_DepthMap_REQUIRED_BITS_FOR_ENCODING        96170

flag Base_samples_DepthMap_Encode(const Base_samples_DepthMap* pVal, BitStream* pBitStrm, int* pErrCode, flag bCheckConstraints);

#define i3ds_asn1_ERR_UPER_DECODE_BASE_SAMPLES_DEPTHMAP		7439  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_SAMPLES_DEPTHMAP_TIME_2		7279  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_SAMPLES_DEPTHMAP_TIMESTAMPS		7308  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_SAMPLES_DEPTHMAP_TIMESTAMPS_ELM_2		7303  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_SAMPLES_DEPTHMAP_VERTICAL_PROJECTION_2		7322  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_SAMPLES_DEPTHMAP_HORIZONTAL_PROJECTION_2		7334  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_SAMPLES_DEPTHMAP_VERTICAL_INTERVAL		7351  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_SAMPLES_DEPTHMAP_VERTICAL_INTERVAL_ELM_2		7346  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_SAMPLES_DEPTHMAP_HORIZONTAL_INTERVAL		7370  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_SAMPLES_DEPTHMAP_HORIZONTAL_INTERVAL_ELM_2		7365  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_SAMPLES_DEPTHMAP_VERTICAL_SIZE_2		7384  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_SAMPLES_DEPTHMAP_HORIZONTAL_SIZE_2		7396  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_SAMPLES_DEPTHMAP_DISTANCES		7413  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_SAMPLES_DEPTHMAP_DISTANCES_ELM_2		7408  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_SAMPLES_DEPTHMAP_REMISSIONS		7432  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_SAMPLES_DEPTHMAP_REMISSIONS_ELM_2		7427  /**/
flag Base_samples_DepthMap_Decode(Base_samples_DepthMap* pVal, BitStream* pBitStrm, int* pErrCode);
typedef enum {
    base_samples_depthmap_unit_axis_unit_x = 0,
    base_samples_depthmap_unit_axis_unit_y = 1,
    base_samples_depthmap_unit_axis_unit_z = 2
} Base_samples_DepthMap_UNIT_AXIS;

// please use the following macros to avoid breaking code.
#define i3ds_asn1_Base_samples_DepthMap_UNIT_AXIS_base_samples_depthmap_unit_axis_unit_x base_samples_depthmap_unit_axis_unit_x
#define i3ds_asn1_Base_samples_DepthMap_UNIT_AXIS_base_samples_depthmap_unit_axis_unit_y base_samples_depthmap_unit_axis_unit_y
#define i3ds_asn1_Base_samples_DepthMap_UNIT_AXIS_base_samples_depthmap_unit_axis_unit_z base_samples_depthmap_unit_axis_unit_z

void Base_samples_DepthMap_UNIT_AXIS_Initialize(Base_samples_DepthMap_UNIT_AXIS* pVal);

#define i3ds_asn1_i3ds_asn1_ERR_BASE_SAMPLES_DEPTHMAP_UNIT_AXIS		3802  /**/
flag Base_samples_DepthMap_UNIT_AXIS_IsConstraintValid(const Base_samples_DepthMap_UNIT_AXIS* pVal, int* pErrCode);

#define i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_SAMPLES_DEPTHMAP_UNIT_AXIS		3803  /**/
#define i3ds_asn1_Base_samples_DepthMap_UNIT_AXIS_REQUIRED_BYTES_FOR_ENCODING       1 
#define i3ds_asn1_Base_samples_DepthMap_UNIT_AXIS_REQUIRED_BITS_FOR_ENCODING        2

flag Base_samples_DepthMap_UNIT_AXIS_Encode(const Base_samples_DepthMap_UNIT_AXIS* pVal, BitStream* pBitStrm, int* pErrCode, flag bCheckConstraints);

#define i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_SAMPLES_DEPTHMAP_UNIT_AXIS		3804  /**/
flag Base_samples_DepthMap_UNIT_AXIS_Decode(Base_samples_DepthMap_UNIT_AXIS* pVal, BitStream* pBitStrm, int* pErrCode);
typedef enum {
    base_samples_laser_range_errors_end_laser_range_errors = 0,
    base_samples_laser_range_errors_max_range_error = 1,
    base_samples_laser_range_errors_measurement_error = 2,
    base_samples_laser_range_errors_other_range_errors = 3,
    base_samples_laser_range_errors_too_far = 4,
    base_samples_laser_range_errors_too_near = 5
} Base_samples_LASER_RANGE_ERRORS;

// please use the following macros to avoid breaking code.
#define i3ds_asn1_Base_samples_LASER_RANGE_ERRORS_base_samples_laser_range_errors_end_laser_range_errors base_samples_laser_range_errors_end_laser_range_errors
#define i3ds_asn1_Base_samples_LASER_RANGE_ERRORS_base_samples_laser_range_errors_max_range_error base_samples_laser_range_errors_max_range_error
#define i3ds_asn1_Base_samples_LASER_RANGE_ERRORS_base_samples_laser_range_errors_measurement_error base_samples_laser_range_errors_measurement_error
#define i3ds_asn1_Base_samples_LASER_RANGE_ERRORS_base_samples_laser_range_errors_other_range_errors base_samples_laser_range_errors_other_range_errors
#define i3ds_asn1_Base_samples_LASER_RANGE_ERRORS_base_samples_laser_range_errors_too_far base_samples_laser_range_errors_too_far
#define i3ds_asn1_Base_samples_LASER_RANGE_ERRORS_base_samples_laser_range_errors_too_near base_samples_laser_range_errors_too_near

void Base_samples_LASER_RANGE_ERRORS_Initialize(Base_samples_LASER_RANGE_ERRORS* pVal);

#define i3ds_asn1_ERR_BASE_SAMPLES_LASER_RANGE_ERRORS		3809  /**/
flag Base_samples_LASER_RANGE_ERRORS_IsConstraintValid(const Base_samples_LASER_RANGE_ERRORS* pVal, int* pErrCode);

#define i3ds_asn1_ERR_UPER_ENCODE_BASE_SAMPLES_LASER_RANGE_ERRORS		3810  /**/
#define i3ds_asn1_Base_samples_LASER_RANGE_ERRORS_REQUIRED_BYTES_FOR_ENCODING       1 
#define i3ds_asn1_Base_samples_LASER_RANGE_ERRORS_REQUIRED_BITS_FOR_ENCODING        3

flag Base_samples_LASER_RANGE_ERRORS_Encode(const Base_samples_LASER_RANGE_ERRORS* pVal, BitStream* pBitStrm, int* pErrCode, flag bCheckConstraints);

#define i3ds_asn1_ERR_UPER_DECODE_BASE_SAMPLES_LASER_RANGE_ERRORS		3811  /**/
flag Base_samples_LASER_RANGE_ERRORS_Decode(Base_samples_LASER_RANGE_ERRORS* pVal, BitStream* pBitStrm, int* pErrCode);
typedef enum {
    base_samples_frame_frame_mode_t_compressed_modes = 0,
    base_samples_frame_frame_mode_t_mode_bayer = 1,
    base_samples_frame_frame_mode_t_mode_bayer_bggr = 2,
    base_samples_frame_frame_mode_t_mode_bayer_gbrg = 3,
    base_samples_frame_frame_mode_t_mode_bayer_grbg = 4,
    base_samples_frame_frame_mode_t_mode_bayer_rggb = 5,
    base_samples_frame_frame_mode_t_mode_bgr = 6,
    base_samples_frame_frame_mode_t_mode_grayscale = 7,
    base_samples_frame_frame_mode_t_mode_jpeg = 8,
    base_samples_frame_frame_mode_t_mode_pjpg = 9,
    base_samples_frame_frame_mode_t_mode_png = 10,
    base_samples_frame_frame_mode_t_mode_rgb = 11,
    base_samples_frame_frame_mode_t_mode_rgb32 = 12,
    base_samples_frame_frame_mode_t_mode_undefined = 13,
    base_samples_frame_frame_mode_t_mode_uyvy = 14,
    base_samples_frame_frame_mode_t_raw_modes = 15
} Base_samples_frame_frame_mode_t;

// please use the following macros to avoid breaking code.
#define i3ds_asn1_Base_samples_frame_frame_mode_t_base_samples_frame_frame_mode_t_compressed_modes base_samples_frame_frame_mode_t_compressed_modes
#define i3ds_asn1_Base_samples_frame_frame_mode_t_base_samples_frame_frame_mode_t_mode_bayer base_samples_frame_frame_mode_t_mode_bayer
#define i3ds_asn1_i3ds_asn1_Base_samples_frame_frame_mode_t_base_samples_frame_frame_mode_t_mode_bayer_bggr base_samples_frame_frame_mode_t_mode_bayer_bggr
#define i3ds_asn1_i3ds_asn1_Base_samples_frame_frame_mode_t_base_samples_frame_frame_mode_t_mode_bayer_gbrg base_samples_frame_frame_mode_t_mode_bayer_gbrg
#define i3ds_asn1_i3ds_asn1_Base_samples_frame_frame_mode_t_base_samples_frame_frame_mode_t_mode_bayer_grbg base_samples_frame_frame_mode_t_mode_bayer_grbg
#define i3ds_asn1_i3ds_asn1_Base_samples_frame_frame_mode_t_base_samples_frame_frame_mode_t_mode_bayer_rggb base_samples_frame_frame_mode_t_mode_bayer_rggb
#define i3ds_asn1_Base_samples_frame_frame_mode_t_base_samples_frame_frame_mode_t_mode_bgr base_samples_frame_frame_mode_t_mode_bgr
#define i3ds_asn1_Base_samples_frame_frame_mode_t_base_samples_frame_frame_mode_t_mode_grayscale base_samples_frame_frame_mode_t_mode_grayscale
#define i3ds_asn1_Base_samples_frame_frame_mode_t_base_samples_frame_frame_mode_t_mode_jpeg base_samples_frame_frame_mode_t_mode_jpeg
#define i3ds_asn1_Base_samples_frame_frame_mode_t_base_samples_frame_frame_mode_t_mode_pjpg base_samples_frame_frame_mode_t_mode_pjpg
#define i3ds_asn1_Base_samples_frame_frame_mode_t_base_samples_frame_frame_mode_t_mode_png base_samples_frame_frame_mode_t_mode_png
#define i3ds_asn1_Base_samples_frame_frame_mode_t_base_samples_frame_frame_mode_t_mode_rgb base_samples_frame_frame_mode_t_mode_rgb
#define i3ds_asn1_i3ds_asn1_Base_samples_frame_frame_mode_t_base_samples_frame_frame_mode_t_mode_rgb32 base_samples_frame_frame_mode_t_mode_rgb32
#define i3ds_asn1_Base_samples_frame_frame_mode_t_base_samples_frame_frame_mode_t_mode_undefined base_samples_frame_frame_mode_t_mode_undefined
#define i3ds_asn1_Base_samples_frame_frame_mode_t_base_samples_frame_frame_mode_t_mode_uyvy base_samples_frame_frame_mode_t_mode_uyvy
#define i3ds_asn1_Base_samples_frame_frame_mode_t_base_samples_frame_frame_mode_t_raw_modes base_samples_frame_frame_mode_t_raw_modes

void Base_samples_frame_frame_mode_t_Initialize(Base_samples_frame_frame_mode_t* pVal);

#define i3ds_asn1_i3ds_asn1_ERR_BASE_SAMPLES_FRAME_FRAME_MODE_T		3816  /**/
flag Base_samples_frame_frame_mode_t_IsConstraintValid(const Base_samples_frame_frame_mode_t* pVal, int* pErrCode);

#define i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_SAMPLES_FRAME_FRAME_MODE_T		3817  /**/
#define i3ds_asn1_Base_samples_frame_frame_mode_t_REQUIRED_BYTES_FOR_ENCODING       1 
#define i3ds_asn1_Base_samples_frame_frame_mode_t_REQUIRED_BITS_FOR_ENCODING        4

flag Base_samples_frame_frame_mode_t_Encode(const Base_samples_frame_frame_mode_t* pVal, BitStream* pBitStrm, int* pErrCode, flag bCheckConstraints);

#define i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_SAMPLES_FRAME_FRAME_MODE_T		3818  /**/
flag Base_samples_frame_frame_mode_t_Decode(Base_samples_frame_frame_mode_t* pVal, BitStream* pBitStrm, int* pErrCode);
typedef enum {
    base_samples_frame_frame_status_t_status_empty = 0,
    base_samples_frame_frame_status_t_status_invalid = 1,
    base_samples_frame_frame_status_t_status_valid = 2
} Base_samples_frame_frame_status_t;

// please use the following macros to avoid breaking code.
#define i3ds_asn1_Base_samples_frame_frame_status_t_base_samples_frame_frame_status_t_status_empty base_samples_frame_frame_status_t_status_empty
#define i3ds_asn1_Base_samples_frame_frame_status_t_base_samples_frame_frame_status_t_status_invalid base_samples_frame_frame_status_t_status_invalid
#define i3ds_asn1_Base_samples_frame_frame_status_t_base_samples_frame_frame_status_t_status_valid base_samples_frame_frame_status_t_status_valid

void Base_samples_frame_frame_status_t_Initialize(Base_samples_frame_frame_status_t* pVal);

#define i3ds_asn1_i3ds_asn1_ERR_BASE_SAMPLES_FRAME_FRAME_STATUS_T		3823  /**/
flag Base_samples_frame_frame_status_t_IsConstraintValid(const Base_samples_frame_frame_status_t* pVal, int* pErrCode);

#define i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_SAMPLES_FRAME_FRAME_STATUS_T		3824  /**/
#define i3ds_asn1_Base_samples_frame_frame_status_t_REQUIRED_BYTES_FOR_ENCODING       1 
#define i3ds_asn1_Base_samples_frame_frame_status_t_REQUIRED_BITS_FOR_ENCODING        2

flag Base_samples_frame_frame_status_t_Encode(const Base_samples_frame_frame_status_t* pVal, BitStream* pBitStrm, int* pErrCode, flag bCheckConstraints);

#define i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_SAMPLES_FRAME_FRAME_STATUS_T		3825  /**/
flag Base_samples_frame_frame_status_t_Decode(Base_samples_frame_frame_status_t* pVal, BitStream* pBitStrm, int* pErrCode);
/*-- Base_samples_frame_Frame --------------------------------------------*/
typedef struct {
    int nCount; 
    
    byte arr[200];
} Base_samples_frame_Frame_image;



typedef struct {
    int nCount; 
    
    Base_samples_frame_frame_attrib_t arr[200];
} Base_samples_frame_Frame_attributes;
typedef struct {
    Base_Time time;
    Base_Time received_time;
    Base_samples_frame_Frame_image image;
    Base_samples_frame_Frame_attributes attributes;
    Base_samples_frame_frame_size_t size_val;
    T_UInt32 data_depth;
    T_UInt32 pixel_size;
    T_UInt32 row_size;
    Base_samples_frame_frame_mode_t frame_mode;
    Base_samples_frame_frame_status_t frame_status;

} Base_samples_frame_Frame;

void Base_samples_frame_Frame_image_Initialize(Base_samples_frame_Frame_image* pVal);
void Base_samples_frame_Frame_attributes_Initialize(Base_samples_frame_Frame_attributes* pVal);
void Base_samples_frame_Frame_Initialize(Base_samples_frame_Frame* pVal);

#define i3ds_asn1_ERR_BASE_SAMPLES_FRAME_FRAME		9374  /**/
#define i3ds_asn1_i3ds_asn1_ERR_BASE_SAMPLES_FRAME_FRAME_TIME_2		9199  /**/
#define i3ds_asn1_i3ds_asn1_ERR_BASE_SAMPLES_FRAME_FRAME_RECEIVED_TIME_2		9223  /**/
#define i3ds_asn1_i3ds_asn1_ERR_BASE_SAMPLES_FRAME_FRAME_IMAGE		9228  /**/
#define i3ds_asn1_i3ds_asn1_ERR_BASE_SAMPLES_FRAME_FRAME_ATTRIBUTES		9271  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_BASE_SAMPLES_FRAME_FRAME_ATTRIBUTES_ELM_2		9266  /**/
#define i3ds_asn1_i3ds_asn1_ERR_BASE_SAMPLES_FRAME_FRAME_SIZE_VAL_2		9309  /**/
#define i3ds_asn1_i3ds_asn1_ERR_BASE_SAMPLES_FRAME_FRAME_DATA_DEPTH_2		9321  /**/
#define i3ds_asn1_i3ds_asn1_ERR_BASE_SAMPLES_FRAME_FRAME_PIXEL_SIZE_2		9333  /**/
#define i3ds_asn1_i3ds_asn1_ERR_BASE_SAMPLES_FRAME_FRAME_ROW_SIZE_2		9345  /**/
#define i3ds_asn1_i3ds_asn1_ERR_BASE_SAMPLES_FRAME_FRAME_FRAME_MODE_2		9357  /**/
#define i3ds_asn1_i3ds_asn1_ERR_BASE_SAMPLES_FRAME_FRAME_FRAME_STATUS_2		9369  /**/
flag Base_samples_frame_Frame_IsConstraintValid(const Base_samples_frame_Frame* pVal, int* pErrCode);

#define i3ds_asn1_ERR_UPER_ENCODE_BASE_SAMPLES_FRAME_FRAME		9375  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_SAMPLES_FRAME_FRAME_TIME_2		9200  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_SAMPLES_FRAME_FRAME_RECEIVED_TIME_2		9224  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_SAMPLES_FRAME_FRAME_IMAGE		9229  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_SAMPLES_FRAME_FRAME_ATTRIBUTES		9272  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_SAMPLES_FRAME_FRAME_ATTRIBUTES_ELM_2		9267  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_SAMPLES_FRAME_FRAME_SIZE_VAL_2		9310  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_SAMPLES_FRAME_FRAME_DATA_DEPTH_2		9322  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_SAMPLES_FRAME_FRAME_PIXEL_SIZE_2		9334  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_SAMPLES_FRAME_FRAME_ROW_SIZE_2		9346  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_SAMPLES_FRAME_FRAME_FRAME_MODE_2		9358  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_SAMPLES_FRAME_FRAME_FRAME_STATUS_2		9370  /**/
#define i3ds_asn1_Base_samples_frame_Frame_REQUIRED_BYTES_FOR_ENCODING       16535 
#define i3ds_asn1_Base_samples_frame_Frame_REQUIRED_BITS_FOR_ENCODING        132278

flag Base_samples_frame_Frame_Encode(const Base_samples_frame_Frame* pVal, BitStream* pBitStrm, int* pErrCode, flag bCheckConstraints);

#define i3ds_asn1_ERR_UPER_DECODE_BASE_SAMPLES_FRAME_FRAME		9376  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_SAMPLES_FRAME_FRAME_TIME_2		9201  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_SAMPLES_FRAME_FRAME_RECEIVED_TIME_2		9225  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_SAMPLES_FRAME_FRAME_IMAGE		9230  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_SAMPLES_FRAME_FRAME_ATTRIBUTES		9273  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_SAMPLES_FRAME_FRAME_ATTRIBUTES_ELM_2		9268  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_SAMPLES_FRAME_FRAME_SIZE_VAL_2		9311  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_SAMPLES_FRAME_FRAME_DATA_DEPTH_2		9323  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_SAMPLES_FRAME_FRAME_PIXEL_SIZE_2		9335  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_SAMPLES_FRAME_FRAME_ROW_SIZE_2		9347  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_SAMPLES_FRAME_FRAME_FRAME_MODE_2		9359  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_SAMPLES_FRAME_FRAME_FRAME_STATUS_2		9371  /**/
flag Base_samples_frame_Frame_Decode(Base_samples_frame_Frame* pVal, BitStream* pBitStrm, int* pErrCode);
/*-- Base_samples_frame_FramePair --------------------------------------------*/
typedef struct {
    Base_Time time;
    Base_samples_frame_Frame first;
    Base_samples_frame_Frame second;
    T_UInt32 id;

} Base_samples_frame_FramePair;

void Base_samples_frame_FramePair_Initialize(Base_samples_frame_FramePair* pVal);

#define i3ds_asn1_i3ds_asn1_ERR_BASE_SAMPLES_FRAME_FRAMEPAIR		9829  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_BASE_SAMPLES_FRAME_FRAMEPAIR_TIME_2		9400  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_BASE_SAMPLES_FRAME_FRAMEPAIR_FIRST_2		9606  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_BASE_SAMPLES_FRAME_FRAMEPAIR_SECOND_2		9812  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_BASE_SAMPLES_FRAME_FRAMEPAIR_ID_2		9824  /**/
flag Base_samples_frame_FramePair_IsConstraintValid(const Base_samples_frame_FramePair* pVal, int* pErrCode);

#define i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_SAMPLES_FRAME_FRAMEPAIR		9830  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_SAMPLES_FRAME_FRAMEPAIR_TIME_2		9401  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_SAMPLES_FRAME_FRAMEPAIR_FIRST_2		9607  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_SAMPLES_FRAME_FRAMEPAIR_SECOND_2		9813  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_SAMPLES_FRAME_FRAMEPAIR_ID_2		9825  /**/
#define i3ds_asn1_Base_samples_frame_FramePair_REQUIRED_BYTES_FOR_ENCODING       33082 
#define i3ds_asn1_Base_samples_frame_FramePair_REQUIRED_BITS_FOR_ENCODING        264652

flag Base_samples_frame_FramePair_Encode(const Base_samples_frame_FramePair* pVal, BitStream* pBitStrm, int* pErrCode, flag bCheckConstraints);

#define i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_SAMPLES_FRAME_FRAMEPAIR		9831  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_SAMPLES_FRAME_FRAMEPAIR_TIME_2		9402  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_SAMPLES_FRAME_FRAMEPAIR_FIRST_2		9608  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_SAMPLES_FRAME_FRAMEPAIR_SECOND_2		9814  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_SAMPLES_FRAME_FRAMEPAIR_ID_2		9826  /**/
flag Base_samples_frame_FramePair_Decode(Base_samples_frame_FramePair* pVal, BitStream* pBitStrm, int* pErrCode);
typedef enum {
    wrappers_geometry_splinetype_degenerate = 0,
    wrappers_geometry_splinetype_polynomial_bezier = 1,
    wrappers_geometry_splinetype_polynomial_bspline = 2,
    wrappers_geometry_splinetype_rational_bezier = 3,
    wrappers_geometry_splinetype_rational_bspline = 4
} Wrappers_geometry_SplineType;

// please use the following macros to avoid breaking code.
#define i3ds_asn1_Wrappers_geometry_SplineType_wrappers_geometry_splinetype_degenerate wrappers_geometry_splinetype_degenerate
#define i3ds_asn1_Wrappers_geometry_SplineType_wrappers_geometry_splinetype_polynomial_bezier wrappers_geometry_splinetype_polynomial_bezier
#define i3ds_asn1_Wrappers_geometry_SplineType_wrappers_geometry_splinetype_polynomial_bspline wrappers_geometry_splinetype_polynomial_bspline
#define i3ds_asn1_Wrappers_geometry_SplineType_wrappers_geometry_splinetype_rational_bezier wrappers_geometry_splinetype_rational_bezier
#define i3ds_asn1_Wrappers_geometry_SplineType_wrappers_geometry_splinetype_rational_bspline wrappers_geometry_splinetype_rational_bspline

void Wrappers_geometry_SplineType_Initialize(Wrappers_geometry_SplineType* pVal);

#define i3ds_asn1_i3ds_asn1_ERR_WRAPPERS_GEOMETRY_SPLINETYPE		3830  /**/
flag Wrappers_geometry_SplineType_IsConstraintValid(const Wrappers_geometry_SplineType* pVal, int* pErrCode);

#define i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_WRAPPERS_GEOMETRY_SPLINETYPE		3831  /**/
#define i3ds_asn1_Wrappers_geometry_SplineType_REQUIRED_BYTES_FOR_ENCODING       1 
#define i3ds_asn1_Wrappers_geometry_SplineType_REQUIRED_BITS_FOR_ENCODING        3

flag Wrappers_geometry_SplineType_Encode(const Wrappers_geometry_SplineType* pVal, BitStream* pBitStrm, int* pErrCode, flag bCheckConstraints);

#define i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_WRAPPERS_GEOMETRY_SPLINETYPE		3832  /**/
flag Wrappers_geometry_SplineType_Decode(Wrappers_geometry_SplineType* pVal, BitStream* pBitStrm, int* pErrCode);
/*-- Wrappers_geometry_Spline --------------------------------------------*/


typedef struct {
    int nCount; 
    
    T_Double arr[200];
} Wrappers_geometry_Spline_knots;


typedef struct {
    int nCount; 
    
    T_Double arr[200];
} Wrappers_geometry_Spline_vertices;
typedef struct {
    T_Double geometric_resolution;
    T_Int32 dimension;
    T_Int32 curve_order;
    Wrappers_geometry_SplineType kind;
    Wrappers_geometry_Spline_knots knots;
    Wrappers_geometry_Spline_vertices vertices;

} Wrappers_geometry_Spline;

void Wrappers_geometry_Spline_knots_Initialize(Wrappers_geometry_Spline_knots* pVal);
void Wrappers_geometry_Spline_vertices_Initialize(Wrappers_geometry_Spline_vertices* pVal);
void Wrappers_geometry_Spline_Initialize(Wrappers_geometry_Spline* pVal);

#define i3ds_asn1_ERR_WRAPPERS_GEOMETRY_SPLINE		12428  /**/
#define i3ds_asn1_i3ds_asn1_ERR_WRAPPERS_GEOMETRY_SPLINE_GEOMETRIC_RESOLUTION_2		12349  /**/
#define i3ds_asn1_i3ds_asn1_ERR_WRAPPERS_GEOMETRY_SPLINE_DIMENSION_2		12361  /**/
#define i3ds_asn1_i3ds_asn1_ERR_WRAPPERS_GEOMETRY_SPLINE_CURVE_ORDER_2		12373  /**/
#define i3ds_asn1_i3ds_asn1_ERR_WRAPPERS_GEOMETRY_SPLINE_KIND_2		12385  /**/
#define i3ds_asn1_i3ds_asn1_ERR_WRAPPERS_GEOMETRY_SPLINE_KNOTS		12402  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_WRAPPERS_GEOMETRY_SPLINE_KNOTS_ELM_2		12397  /**/
#define i3ds_asn1_i3ds_asn1_ERR_WRAPPERS_GEOMETRY_SPLINE_VERTICES		12421  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_WRAPPERS_GEOMETRY_SPLINE_VERTICES_ELM_2		12416  /**/
flag Wrappers_geometry_Spline_IsConstraintValid(const Wrappers_geometry_Spline* pVal, int* pErrCode);

#define i3ds_asn1_ERR_UPER_ENCODE_WRAPPERS_GEOMETRY_SPLINE		12429  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_WRAPPERS_GEOMETRY_SPLINE_GEOMETRIC_RESOLUTION_2		12350  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_WRAPPERS_GEOMETRY_SPLINE_DIMENSION_2		12362  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_WRAPPERS_GEOMETRY_SPLINE_CURVE_ORDER_2		12374  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_WRAPPERS_GEOMETRY_SPLINE_KIND_2		12386  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_WRAPPERS_GEOMETRY_SPLINE_KNOTS		12403  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_WRAPPERS_GEOMETRY_SPLINE_KNOTS_ELM_2		12398  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_WRAPPERS_GEOMETRY_SPLINE_VERTICES		12422  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_WRAPPERS_GEOMETRY_SPLINE_VERTICES_ELM_2		12417  /**/
#define i3ds_asn1_Wrappers_geometry_Spline_REQUIRED_BYTES_FOR_ENCODING       5224 
#define i3ds_asn1_Wrappers_geometry_Spline_REQUIRED_BITS_FOR_ENCODING        41787

flag Wrappers_geometry_Spline_Encode(const Wrappers_geometry_Spline* pVal, BitStream* pBitStrm, int* pErrCode, flag bCheckConstraints);

#define i3ds_asn1_ERR_UPER_DECODE_WRAPPERS_GEOMETRY_SPLINE		12430  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_WRAPPERS_GEOMETRY_SPLINE_GEOMETRIC_RESOLUTION_2		12351  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_WRAPPERS_GEOMETRY_SPLINE_DIMENSION_2		12363  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_WRAPPERS_GEOMETRY_SPLINE_CURVE_ORDER_2		12375  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_WRAPPERS_GEOMETRY_SPLINE_KIND_2		12387  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_WRAPPERS_GEOMETRY_SPLINE_KNOTS		12404  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_WRAPPERS_GEOMETRY_SPLINE_KNOTS_ELM_2		12399  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_WRAPPERS_GEOMETRY_SPLINE_VERTICES		12423  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_WRAPPERS_GEOMETRY_SPLINE_VERTICES_ELM_2		12418  /**/
flag Wrappers_geometry_Spline_Decode(Wrappers_geometry_Spline* pVal, BitStream* pBitStrm, int* pErrCode);
/*-- Base_Trajectory --------------------------------------------*/
typedef struct {
    T_Double speed;
    Wrappers_geometry_Spline spline;

} Base_Trajectory;

void Base_Trajectory_Initialize(Base_Trajectory* pVal);

#define i3ds_asn1_ERR_BASE_TRAJECTORY		5020  /**/
#define i3ds_asn1_i3ds_asn1_ERR_BASE_TRAJECTORY_SPEED_2		4917  /**/
#define i3ds_asn1_i3ds_asn1_ERR_BASE_TRAJECTORY_SPLINE_2		5015  /**/
flag Base_Trajectory_IsConstraintValid(const Base_Trajectory* pVal, int* pErrCode);

#define i3ds_asn1_ERR_UPER_ENCODE_BASE_TRAJECTORY		5021  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_TRAJECTORY_SPEED_2		4918  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_TRAJECTORY_SPLINE_2		5016  /**/
#define i3ds_asn1_Base_Trajectory_REQUIRED_BYTES_FOR_ENCODING       5237 
#define i3ds_asn1_Base_Trajectory_REQUIRED_BITS_FOR_ENCODING        41891

flag Base_Trajectory_Encode(const Base_Trajectory* pVal, BitStream* pBitStrm, int* pErrCode, flag bCheckConstraints);

#define i3ds_asn1_ERR_UPER_DECODE_BASE_TRAJECTORY		5022  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_TRAJECTORY_SPEED_2		4919  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_TRAJECTORY_SPLINE_2		5017  /**/
flag Base_Trajectory_Decode(Base_Trajectory* pVal, BitStream* pBitStrm, int* pErrCode);
/*-- Base_Trajectory_m --------------------------------------------*/
typedef struct {
    T_Double speed;
    Wrappers_geometry_Spline spline;

} Base_Trajectory_m;

void Base_Trajectory_m_Initialize(Base_Trajectory_m* pVal);

#define i3ds_asn1_i3ds_asn1_ERR_BASE_TRAJECTORY_M		12545  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_BASE_TRAJECTORY_M_SPEED_2		12442  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_BASE_TRAJECTORY_M_SPLINE_2		12540  /**/
flag Base_Trajectory_m_IsConstraintValid(const Base_Trajectory_m* pVal, int* pErrCode);

#define i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_TRAJECTORY_M		12546  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_TRAJECTORY_M_SPEED_2		12443  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_BASE_TRAJECTORY_M_SPLINE_2		12541  /**/
#define i3ds_asn1_Base_Trajectory_m_REQUIRED_BYTES_FOR_ENCODING       5237 
#define i3ds_asn1_Base_Trajectory_m_REQUIRED_BITS_FOR_ENCODING        41891

flag Base_Trajectory_m_Encode(const Base_Trajectory_m* pVal, BitStream* pBitStrm, int* pErrCode, flag bCheckConstraints);

#define i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_TRAJECTORY_M		12547  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_TRAJECTORY_M_SPEED_2		12444  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_BASE_TRAJECTORY_M_SPLINE_2		12542  /**/
flag Base_Trajectory_m_Decode(Base_Trajectory_m* pVal, BitStream* pBitStrm, int* pErrCode);


typedef struct {
    int nCount; 
    
    Base_Trajectory_m arr[200];
} Std_orogen_typekits_mtype_std_vector_base_Trajectory;

void Std_orogen_typekits_mtype_std_vector_base_Trajectory_Initialize(Std_orogen_typekits_mtype_std_vector_base_Trajectory* pVal);

#define i3ds_asn1_ERR_STD_OROGEN_TYPEKITS_MTYPE_STD_VECTOR_BASE_TRAJECTORY		4317  /**/
#define i3ds_asn1_i3ds_asn1_ERR_STD_OROGEN_TYPEKITS_MTYPE_STD_VECTOR_BASE_TRAJECTORY_ELM_2		4312  /**/
flag Std_orogen_typekits_mtype_std_vector_base_Trajectory_IsConstraintValid(const Std_orogen_typekits_mtype_std_vector_base_Trajectory* pVal, int* pErrCode);

#define i3ds_asn1_ERR_UPER_ENCODE_STD_OROGEN_TYPEKITS_MTYPE_STD_VECTOR_BASE_TRAJECTORY		4318  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_STD_OROGEN_TYPEKITS_MTYPE_STD_VECTOR_BASE_TRAJECTORY_ELM_2		4313  /**/
#define i3ds_asn1_Std_orogen_typekits_mtype_std_vector_base_Trajectory_REQUIRED_BYTES_FOR_ENCODING       1047276 
#define i3ds_asn1_Std_orogen_typekits_mtype_std_vector_base_Trajectory_REQUIRED_BITS_FOR_ENCODING        8378208

flag Std_orogen_typekits_mtype_std_vector_base_Trajectory_Encode(const Std_orogen_typekits_mtype_std_vector_base_Trajectory* pVal, BitStream* pBitStrm, int* pErrCode, flag bCheckConstraints);

#define i3ds_asn1_ERR_UPER_DECODE_STD_OROGEN_TYPEKITS_MTYPE_STD_VECTOR_BASE_TRAJECTORY		4319  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_STD_OROGEN_TYPEKITS_MTYPE_STD_VECTOR_BASE_TRAJECTORY_ELM_2		4314  /**/
flag Std_orogen_typekits_mtype_std_vector_base_Trajectory_Decode(Std_orogen_typekits_mtype_std_vector_base_Trajectory* pVal, BitStream* pBitStrm, int* pErrCode);

 

/* ================= Encoding/Decoding function prototypes =================
 * These functions are placed at the end of the file to make sure all types
 * have been declared first, in case of parameterized ACN encodings
 * ========================================================================= */

 



} // namespace i3ds_asn1
#endif
