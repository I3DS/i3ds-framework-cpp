#ifndef i3ds_asn1_GENERATED_ASN1SCC_IMU_H
#define i3ds_asn1_GENERATED_ASN1SCC_IMU_H
/*
Code automatically generated by asn1scc tool
*/
#include <i3ds_asn1/asn1crt.hpp>
#include <i3ds_asn1/asn1crt_encoding.hpp>

#include <i3ds_asn1/Sensor.hpp>
#include <i3ds_asn1/SampleAttribute.hpp>
#include <i3ds_asn1/taste-types.hpp>
#include <i3ds_asn1/taste-extended.hpp>

namespace i3ds_asn1 {


/*-- IMUSample --------------------------------------------*/
typedef struct {
    T_Double axis_x_rate;
    T_Double axis_x_acceleration;
    T_Double axis_y_rate;
    T_Double axis_y_acceleration;
    T_Double axis_z_rate;
    T_Double axis_z_acceleration;

} IMUSample;

void IMUSample_Initialize(IMUSample* pVal);

#define i3ds_asn1_ERR_IMUSAMPLE		876  /**/
#define i3ds_asn1_i3ds_asn1_ERR_IMUSAMPLE_AXIS_X_RATE_2		799  /**/
#define i3ds_asn1_i3ds_asn1_ERR_IMUSAMPLE_AXIS_X_ACCELERATION_2		813  /**/
#define i3ds_asn1_i3ds_asn1_ERR_IMUSAMPLE_AXIS_Y_RATE_2		827  /**/
#define i3ds_asn1_i3ds_asn1_ERR_IMUSAMPLE_AXIS_Y_ACCELERATION_2		841  /**/
#define i3ds_asn1_i3ds_asn1_ERR_IMUSAMPLE_AXIS_Z_RATE_2		855  /**/
#define i3ds_asn1_i3ds_asn1_ERR_IMUSAMPLE_AXIS_Z_ACCELERATION_2		869  /**/
flag IMUSample_IsConstraintValid(const IMUSample* pVal, int* pErrCode);

#define i3ds_asn1_ERR_UPER_ENCODE_IMUSAMPLE		877  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_IMUSAMPLE_AXIS_X_RATE_2		800  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_IMUSAMPLE_AXIS_X_ACCELERATION_2		814  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_IMUSAMPLE_AXIS_Y_RATE_2		828  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_IMUSAMPLE_AXIS_Y_ACCELERATION_2		842  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_IMUSAMPLE_AXIS_Z_RATE_2		856  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_IMUSAMPLE_AXIS_Z_ACCELERATION_2		870  /**/
#define i3ds_asn1_IMUSample_REQUIRED_BYTES_FOR_ENCODING       78 
#define i3ds_asn1_IMUSample_REQUIRED_BITS_FOR_ENCODING        624

flag IMUSample_Encode(const IMUSample* pVal, BitStream* pBitStrm, int* pErrCode, flag bCheckConstraints);

#define i3ds_asn1_ERR_UPER_DECODE_IMUSAMPLE		878  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_IMUSAMPLE_AXIS_X_RATE_2		801  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_IMUSAMPLE_AXIS_X_ACCELERATION_2		815  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_IMUSAMPLE_AXIS_Y_RATE_2		829  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_IMUSAMPLE_AXIS_Y_ACCELERATION_2		843  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_IMUSAMPLE_AXIS_Z_RATE_2		857  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_IMUSAMPLE_AXIS_Z_ACCELERATION_2		871  /**/
flag IMUSample_Decode(IMUSample* pVal, BitStream* pBitStrm, int* pErrCode);
/*-- IMUMeasurement20 --------------------------------------------*/


typedef struct {
    int nCount; 
    
    IMUSample arr[20];
} IMUMeasurement20_samples;
typedef struct {
    SampleAttributes attributes;
    IMUMeasurement20_samples samples;
    T_UInt32 batch_size;

} IMUMeasurement20;

void IMUMeasurement20_samples_Initialize(IMUMeasurement20_samples* pVal);
void IMUMeasurement20_Initialize(IMUMeasurement20* pVal);

#define i3ds_asn1_ERR_IMUMEASUREMENT20		1163  /**/
#define i3ds_asn1_i3ds_asn1_ERR_IMUMEASUREMENT20_ATTRIBUTES_2		1030  /**/
#define i3ds_asn1_i3ds_asn1_ERR_IMUMEASUREMENT20_SAMPLES		1135  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_IMUMEASUREMENT20_SAMPLES_ELM_2		1128  /**/
#define i3ds_asn1_i3ds_asn1_ERR_IMUMEASUREMENT20_BATCH_SIZE_2_2		1156  /**/
flag IMUMeasurement20_IsConstraintValid(const IMUMeasurement20* pVal, int* pErrCode);

#define i3ds_asn1_ERR_UPER_ENCODE_IMUMEASUREMENT20		1164  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_IMUMEASUREMENT20_ATTRIBUTES_2		1031  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_IMUMEASUREMENT20_SAMPLES		1136  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_IMUMEASUREMENT20_SAMPLES_ELM_2		1129  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_IMUMEASUREMENT20_BATCH_SIZE_2_2		1157  /**/
#define i3ds_asn1_IMUMeasurement20_REQUIRED_BYTES_FOR_ENCODING       1631 
#define i3ds_asn1_IMUMeasurement20_REQUIRED_BITS_FOR_ENCODING        13042

flag IMUMeasurement20_Encode(const IMUMeasurement20* pVal, BitStream* pBitStrm, int* pErrCode, flag bCheckConstraints);

#define i3ds_asn1_ERR_UPER_DECODE_IMUMEASUREMENT20		1165  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_IMUMEASUREMENT20_ATTRIBUTES_2		1032  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_IMUMEASUREMENT20_SAMPLES		1137  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_IMUMEASUREMENT20_SAMPLES_ELM_2		1130  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_IMUMEASUREMENT20_BATCH_SIZE_2_2		1158  /**/
flag IMUMeasurement20_Decode(IMUMeasurement20* pVal, BitStream* pBitStrm, int* pErrCode);

 

/* ================= Encoding/Decoding function prototypes =================
 * These functions are placed at the end of the file to make sure all types
 * have been declared first, in case of parameterized ACN encodings
 * ========================================================================= */

 



} // namespace i3ds_asn1
#endif
