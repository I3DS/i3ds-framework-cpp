#ifndef i3ds_asn1_GENERATED_ASN1SCC_IMU_H
#define i3ds_asn1_GENERATED_ASN1SCC_IMU_H
/*
Code automatically generated by asn1scc tool
*/
#include <i3ds_asn1/asn1crt.hpp>
#include <i3ds_asn1/asn1crt_encoding.hpp>

#include <i3ds_asn1/Sensor.hpp>
#include <i3ds_asn1/SampleAttribute.hpp>
#include <i3ds_asn1/taste-types.hpp>
#include <i3ds_asn1/taste-extended.hpp>

namespace i3ds_asn1 {


/*-- IMUSample --------------------------------------------*/
typedef struct {
    T_Double axis_x_rate;
    T_Double axis_x_acceleration;
    T_Double axis_y_rate;
    T_Double axis_y_acceleration;
    T_Double axis_z_rate;
    T_Double axis_z_acceleration;

} IMUSample;

void IMUSample_Initialize(IMUSample* pVal);

#define i3ds_asn1_ERR_IMUSAMPLE		9549  /**/
#define i3ds_asn1_i3ds_asn1_ERR_IMUSAMPLE_AXIS_X_RATE_2		9484  /**/
#define i3ds_asn1_i3ds_asn1_ERR_IMUSAMPLE_AXIS_X_ACCELERATION_2		9496  /**/
#define i3ds_asn1_i3ds_asn1_ERR_IMUSAMPLE_AXIS_Y_RATE_2		9508  /**/
#define i3ds_asn1_i3ds_asn1_ERR_IMUSAMPLE_AXIS_Y_ACCELERATION_2		9520  /**/
#define i3ds_asn1_i3ds_asn1_ERR_IMUSAMPLE_AXIS_Z_RATE_2		9532  /**/
#define i3ds_asn1_i3ds_asn1_ERR_IMUSAMPLE_AXIS_Z_ACCELERATION_2		9544  /**/
flag IMUSample_IsConstraintValid(const IMUSample* pVal, int* pErrCode);

#define i3ds_asn1_ERR_UPER_ENCODE_IMUSAMPLE		9550  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_IMUSAMPLE_AXIS_X_RATE_2		9485  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_IMUSAMPLE_AXIS_X_ACCELERATION_2		9497  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_IMUSAMPLE_AXIS_Y_RATE_2		9509  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_IMUSAMPLE_AXIS_Y_ACCELERATION_2		9521  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_IMUSAMPLE_AXIS_Z_RATE_2		9533  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_IMUSAMPLE_AXIS_Z_ACCELERATION_2		9545  /**/
#define i3ds_asn1_IMUSample_REQUIRED_BYTES_FOR_ENCODING       78 
#define i3ds_asn1_IMUSample_REQUIRED_BITS_FOR_ENCODING        624

flag IMUSample_Encode(const IMUSample* pVal, BitStream* pBitStrm, int* pErrCode, flag bCheckConstraints);

#define i3ds_asn1_ERR_UPER_DECODE_IMUSAMPLE		9551  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_IMUSAMPLE_AXIS_X_RATE_2		9486  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_IMUSAMPLE_AXIS_X_ACCELERATION_2		9498  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_IMUSAMPLE_AXIS_Y_RATE_2		9510  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_IMUSAMPLE_AXIS_Y_ACCELERATION_2		9522  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_IMUSAMPLE_AXIS_Z_RATE_2		9534  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_IMUSAMPLE_AXIS_Z_ACCELERATION_2		9546  /**/
flag IMUSample_Decode(IMUSample* pVal, BitStream* pBitStrm, int* pErrCode);
/*-- IMUMeasurement20 --------------------------------------------*/


typedef struct {
    int nCount; 
    
    IMUSample arr[20];
} IMUMeasurement20_samples;
typedef struct {
    SampleAttributes attributes;
    IMUMeasurement20_samples samples;
    T_UInt32 batch_size;

} IMUMeasurement20;

void IMUMeasurement20_samples_Initialize(IMUMeasurement20_samples* pVal);
void IMUMeasurement20_Initialize(IMUMeasurement20* pVal);

#define i3ds_asn1_ERR_IMUMEASUREMENT20		9796  /**/
#define i3ds_asn1_i3ds_asn1_ERR_IMUMEASUREMENT20_ATTRIBUTES_2		9683  /**/
#define i3ds_asn1_i3ds_asn1_ERR_IMUMEASUREMENT20_SAMPLES		9772  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_IMUMEASUREMENT20_SAMPLES_ELM_2		9767  /**/
#define i3ds_asn1_i3ds_asn1_ERR_IMUMEASUREMENT20_BATCH_SIZE_2_2		9791  /**/
flag IMUMeasurement20_IsConstraintValid(const IMUMeasurement20* pVal, int* pErrCode);

#define i3ds_asn1_ERR_UPER_ENCODE_IMUMEASUREMENT20		9797  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_IMUMEASUREMENT20_ATTRIBUTES_2		9684  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_IMUMEASUREMENT20_SAMPLES		9773  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_IMUMEASUREMENT20_SAMPLES_ELM_2		9768  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_IMUMEASUREMENT20_BATCH_SIZE_2_2		9792  /**/
#define i3ds_asn1_IMUMeasurement20_REQUIRED_BYTES_FOR_ENCODING       1631 
#define i3ds_asn1_IMUMeasurement20_REQUIRED_BITS_FOR_ENCODING        13042

flag IMUMeasurement20_Encode(const IMUMeasurement20* pVal, BitStream* pBitStrm, int* pErrCode, flag bCheckConstraints);

#define i3ds_asn1_ERR_UPER_DECODE_IMUMEASUREMENT20		9798  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_IMUMEASUREMENT20_ATTRIBUTES_2		9685  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_IMUMEASUREMENT20_SAMPLES		9774  /**/
#define i3ds_asn1_i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_IMUMEASUREMENT20_SAMPLES_ELM_2		9769  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_IMUMEASUREMENT20_BATCH_SIZE_2_2		9793  /**/
flag IMUMeasurement20_Decode(IMUMeasurement20* pVal, BitStream* pBitStrm, int* pErrCode);

 

/* ================= Encoding/Decoding function prototypes =================
 * These functions are placed at the end of the file to make sure all types
 * have been declared first, in case of parameterized ACN encodings
 * ========================================================================= */

 



} // namespace i3ds_asn1
#endif
