#ifndef i3ds_asn1_GENERATED_ASN1SCC_Trigger_H
#define i3ds_asn1_GENERATED_ASN1SCC_Trigger_H
/*
Code automatically generated by asn1scc tool
*/
#include <i3ds_asn1/asn1crt.hpp>
#include <i3ds_asn1/asn1crt_encoding.hpp>

#include <i3ds_asn1/taste-types.hpp>

namespace i3ds_asn1 {




typedef struct {
    
    T_Boolean arr[8];
} TriggerMask;

void TriggerMask_Initialize(TriggerMask* pVal);

#define i3ds_asn1_ERR_TRIGGERMASK		12485  /**/
#define i3ds_asn1_i3ds_asn1_ERR_TRIGGERMASK_ELM_2		12480  /**/
flag TriggerMask_IsConstraintValid(const TriggerMask* pVal, int* pErrCode);

#define i3ds_asn1_ERR_UPER_ENCODE_TRIGGERMASK		12486  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_TRIGGERMASK_ELM_2		12481  /**/
#define i3ds_asn1_TriggerMask_REQUIRED_BYTES_FOR_ENCODING       1 
#define i3ds_asn1_TriggerMask_REQUIRED_BITS_FOR_ENCODING        8

flag TriggerMask_Encode(const TriggerMask* pVal, BitStream* pBitStrm, int* pErrCode, flag bCheckConstraints);

#define i3ds_asn1_ERR_UPER_DECODE_TRIGGERMASK		12487  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_TRIGGERMASK_ELM_2		12482  /**/
flag TriggerMask_Decode(TriggerMask* pVal, BitStream* pBitStrm, int* pErrCode);
typedef asn1SccUint TriggerGenerator;


void TriggerGenerator_Initialize(TriggerGenerator* pVal);

#define i3ds_asn1_ERR_TRIGGERGENERATOR		12431  /**/
flag TriggerGenerator_IsConstraintValid(const TriggerGenerator* pVal, int* pErrCode);

#define i3ds_asn1_ERR_UPER_ENCODE_TRIGGERGENERATOR		12432  /**/
#define i3ds_asn1_TriggerGenerator_REQUIRED_BYTES_FOR_ENCODING       1 
#define i3ds_asn1_TriggerGenerator_REQUIRED_BITS_FOR_ENCODING        2

flag TriggerGenerator_Encode(const TriggerGenerator* pVal, BitStream* pBitStrm, int* pErrCode, flag bCheckConstraints);

#define i3ds_asn1_ERR_UPER_DECODE_TRIGGERGENERATOR		12433  /**/
flag TriggerGenerator_Decode(TriggerGenerator* pVal, BitStream* pBitStrm, int* pErrCode);
typedef asn1SccUint TriggerInput;


void TriggerInput_Initialize(TriggerInput* pVal);

#define i3ds_asn1_ERR_TRIGGERINPUT		12438  /**/
flag TriggerInput_IsConstraintValid(const TriggerInput* pVal, int* pErrCode);

#define i3ds_asn1_ERR_UPER_ENCODE_TRIGGERINPUT		12439  /**/
#define i3ds_asn1_TriggerInput_REQUIRED_BYTES_FOR_ENCODING       1 
#define i3ds_asn1_TriggerInput_REQUIRED_BITS_FOR_ENCODING        2

flag TriggerInput_Encode(const TriggerInput* pVal, BitStream* pBitStrm, int* pErrCode, flag bCheckConstraints);

#define i3ds_asn1_ERR_UPER_DECODE_TRIGGERINPUT		12440  /**/
flag TriggerInput_Decode(TriggerInput* pVal, BitStream* pBitStrm, int* pErrCode);
typedef asn1SccUint TriggerOutput;


void TriggerOutput_Initialize(TriggerOutput* pVal);

#define i3ds_asn1_ERR_TRIGGEROUTPUT		12445  /**/
flag TriggerOutput_IsConstraintValid(const TriggerOutput* pVal, int* pErrCode);

#define i3ds_asn1_ERR_UPER_ENCODE_TRIGGEROUTPUT		12446  /**/
#define i3ds_asn1_TriggerOutput_REQUIRED_BYTES_FOR_ENCODING       1 
#define i3ds_asn1_TriggerOutput_REQUIRED_BITS_FOR_ENCODING        3

flag TriggerOutput_Encode(const TriggerOutput* pVal, BitStream* pBitStrm, int* pErrCode, flag bCheckConstraints);

#define i3ds_asn1_ERR_UPER_DECODE_TRIGGEROUTPUT		12447  /**/
flag TriggerOutput_Decode(TriggerOutput* pVal, BitStream* pBitStrm, int* pErrCode);
typedef asn1SccUint TriggerPeriod;


void TriggerPeriod_Initialize(TriggerPeriod* pVal);

#define i3ds_asn1_ERR_TRIGGERPERIOD		12452  /**/
flag TriggerPeriod_IsConstraintValid(const TriggerPeriod* pVal, int* pErrCode);

#define i3ds_asn1_ERR_UPER_ENCODE_TRIGGERPERIOD		12453  /**/
#define i3ds_asn1_TriggerPeriod_REQUIRED_BYTES_FOR_ENCODING       3 
#define i3ds_asn1_TriggerPeriod_REQUIRED_BITS_FOR_ENCODING        24

flag TriggerPeriod_Encode(const TriggerPeriod* pVal, BitStream* pBitStrm, int* pErrCode, flag bCheckConstraints);

#define i3ds_asn1_ERR_UPER_DECODE_TRIGGERPERIOD		12454  /**/
flag TriggerPeriod_Decode(TriggerPeriod* pVal, BitStream* pBitStrm, int* pErrCode);
/*-- GeneratorSetup --------------------------------------------*/
typedef struct {
    TriggerGenerator source;
    TriggerPeriod period;

} GeneratorSetup;

void GeneratorSetup_Initialize(GeneratorSetup* pVal);

#define i3ds_asn1_ERR_GENERATORSETUP		12516  /**/
#define i3ds_asn1_i3ds_asn1_ERR_GENERATORSETUP_SOURCE_2		12499  /**/
#define i3ds_asn1_i3ds_asn1_ERR_GENERATORSETUP_PERIOD_2		12511  /**/
flag GeneratorSetup_IsConstraintValid(const GeneratorSetup* pVal, int* pErrCode);

#define i3ds_asn1_ERR_UPER_ENCODE_GENERATORSETUP		12517  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_GENERATORSETUP_SOURCE_2		12500  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_GENERATORSETUP_PERIOD_2		12512  /**/
#define i3ds_asn1_GeneratorSetup_REQUIRED_BYTES_FOR_ENCODING       4 
#define i3ds_asn1_GeneratorSetup_REQUIRED_BITS_FOR_ENCODING        26

flag GeneratorSetup_Encode(const GeneratorSetup* pVal, BitStream* pBitStrm, int* pErrCode, flag bCheckConstraints);

#define i3ds_asn1_ERR_UPER_DECODE_GENERATORSETUP		12518  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_GENERATORSETUP_SOURCE_2		12501  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_GENERATORSETUP_PERIOD_2		12513  /**/
flag GeneratorSetup_Decode(GeneratorSetup* pVal, BitStream* pBitStrm, int* pErrCode);
typedef asn1SccUint TriggerOffset;


void TriggerOffset_Initialize(TriggerOffset* pVal);

#define i3ds_asn1_ERR_TRIGGEROFFSET		12459  /**/
flag TriggerOffset_IsConstraintValid(const TriggerOffset* pVal, int* pErrCode);

#define i3ds_asn1_ERR_UPER_ENCODE_TRIGGEROFFSET		12460  /**/
#define i3ds_asn1_TriggerOffset_REQUIRED_BYTES_FOR_ENCODING       3 
#define i3ds_asn1_TriggerOffset_REQUIRED_BITS_FOR_ENCODING        24

flag TriggerOffset_Encode(const TriggerOffset* pVal, BitStream* pBitStrm, int* pErrCode, flag bCheckConstraints);

#define i3ds_asn1_ERR_UPER_DECODE_TRIGGEROFFSET		12461  /**/
flag TriggerOffset_Decode(TriggerOffset* pVal, BitStream* pBitStrm, int* pErrCode);
typedef asn1SccUint TriggerDuration;


void TriggerDuration_Initialize(TriggerDuration* pVal);

#define i3ds_asn1_ERR_TRIGGERDURATION		12466  /**/
flag TriggerDuration_IsConstraintValid(const TriggerDuration* pVal, int* pErrCode);

#define i3ds_asn1_ERR_UPER_ENCODE_TRIGGERDURATION		12467  /**/
#define i3ds_asn1_TriggerDuration_REQUIRED_BYTES_FOR_ENCODING       2 
#define i3ds_asn1_TriggerDuration_REQUIRED_BITS_FOR_ENCODING        10

flag TriggerDuration_Encode(const TriggerDuration* pVal, BitStream* pBitStrm, int* pErrCode, flag bCheckConstraints);

#define i3ds_asn1_ERR_UPER_DECODE_TRIGGERDURATION		12468  /**/
flag TriggerDuration_Decode(TriggerDuration* pVal, BitStream* pBitStrm, int* pErrCode);
/*-- ChannelInternal --------------------------------------------*/
typedef struct {
    TriggerOutput output_channel;
    TriggerGenerator source;
    TriggerOffset offset;
    TriggerDuration duration;
    T_Boolean invert;

} ChannelInternal;

void ChannelInternal_Initialize(ChannelInternal* pVal);

#define i3ds_asn1_ERR_CHANNELINTERNAL		12583  /**/
#define i3ds_asn1_i3ds_asn1_ERR_CHANNELINTERNAL_OUTPUT_CHANNEL_2		12530  /**/
#define i3ds_asn1_i3ds_asn1_ERR_CHANNELINTERNAL_SOURCE_2		12542  /**/
#define i3ds_asn1_i3ds_asn1_ERR_CHANNELINTERNAL_OFFSET_2		12554  /**/
#define i3ds_asn1_i3ds_asn1_ERR_CHANNELINTERNAL_DURATION_2		12566  /**/
#define i3ds_asn1_i3ds_asn1_ERR_CHANNELINTERNAL_INVERT_2		12578  /**/
flag ChannelInternal_IsConstraintValid(const ChannelInternal* pVal, int* pErrCode);

#define i3ds_asn1_ERR_UPER_ENCODE_CHANNELINTERNAL		12584  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_CHANNELINTERNAL_OUTPUT_CHANNEL_2		12531  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_CHANNELINTERNAL_SOURCE_2		12543  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_CHANNELINTERNAL_OFFSET_2		12555  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_CHANNELINTERNAL_DURATION_2		12567  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_CHANNELINTERNAL_INVERT_2		12579  /**/
#define i3ds_asn1_ChannelInternal_REQUIRED_BYTES_FOR_ENCODING       5 
#define i3ds_asn1_ChannelInternal_REQUIRED_BITS_FOR_ENCODING        40

flag ChannelInternal_Encode(const ChannelInternal* pVal, BitStream* pBitStrm, int* pErrCode, flag bCheckConstraints);

#define i3ds_asn1_ERR_UPER_DECODE_CHANNELINTERNAL		12585  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_CHANNELINTERNAL_OUTPUT_CHANNEL_2		12532  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_CHANNELINTERNAL_SOURCE_2		12544  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_CHANNELINTERNAL_OFFSET_2		12556  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_CHANNELINTERNAL_DURATION_2		12568  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_CHANNELINTERNAL_INVERT_2		12580  /**/
flag ChannelInternal_Decode(ChannelInternal* pVal, BitStream* pBitStrm, int* pErrCode);
/*-- ChannelExternal --------------------------------------------*/
typedef struct {
    TriggerOutput output_channel;
    TriggerInput source;
    TriggerOffset offset;
    TriggerDuration duration;
    T_Boolean bypass;
    T_Boolean invert;

} ChannelExternal;

void ChannelExternal_Initialize(ChannelExternal* pVal);

#define i3ds_asn1_ERR_CHANNELEXTERNAL		12662  /**/
#define i3ds_asn1_i3ds_asn1_ERR_CHANNELEXTERNAL_OUTPUT_CHANNEL_2		12597  /**/
#define i3ds_asn1_i3ds_asn1_ERR_CHANNELEXTERNAL_SOURCE_2		12609  /**/
#define i3ds_asn1_i3ds_asn1_ERR_CHANNELEXTERNAL_OFFSET_2		12621  /**/
#define i3ds_asn1_i3ds_asn1_ERR_CHANNELEXTERNAL_DURATION_2		12633  /**/
#define i3ds_asn1_i3ds_asn1_ERR_CHANNELEXTERNAL_BYPASS_2		12645  /**/
#define i3ds_asn1_i3ds_asn1_ERR_CHANNELEXTERNAL_INVERT_2		12657  /**/
flag ChannelExternal_IsConstraintValid(const ChannelExternal* pVal, int* pErrCode);

#define i3ds_asn1_ERR_UPER_ENCODE_CHANNELEXTERNAL		12663  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_CHANNELEXTERNAL_OUTPUT_CHANNEL_2		12598  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_CHANNELEXTERNAL_SOURCE_2		12610  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_CHANNELEXTERNAL_OFFSET_2		12622  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_CHANNELEXTERNAL_DURATION_2		12634  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_CHANNELEXTERNAL_BYPASS_2		12646  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_ENCODE_CHANNELEXTERNAL_INVERT_2		12658  /**/
#define i3ds_asn1_ChannelExternal_REQUIRED_BYTES_FOR_ENCODING       6 
#define i3ds_asn1_ChannelExternal_REQUIRED_BITS_FOR_ENCODING        41

flag ChannelExternal_Encode(const ChannelExternal* pVal, BitStream* pBitStrm, int* pErrCode, flag bCheckConstraints);

#define i3ds_asn1_ERR_UPER_DECODE_CHANNELEXTERNAL		12664  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_CHANNELEXTERNAL_OUTPUT_CHANNEL_2		12599  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_CHANNELEXTERNAL_SOURCE_2		12611  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_CHANNELEXTERNAL_OFFSET_2		12623  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_CHANNELEXTERNAL_DURATION_2		12635  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_CHANNELEXTERNAL_BYPASS_2		12647  /**/
#define i3ds_asn1_i3ds_asn1_ERR_UPER_DECODE_CHANNELEXTERNAL_INVERT_2		12659  /**/
flag ChannelExternal_Decode(ChannelExternal* pVal, BitStream* pBitStrm, int* pErrCode);

 

/* ================= Encoding/Decoding function prototypes =================
 * These functions are placed at the end of the file to make sure all types
 * have been declared first, in case of parameterized ACN encodings
 * ========================================================================= */

 



} // namespace i3ds_asn1
#endif
