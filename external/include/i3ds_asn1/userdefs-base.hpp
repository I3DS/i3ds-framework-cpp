#ifndef i3ds_asn1_GENERATED_ASN1SCC_userdefs_base_H
#define i3ds_asn1_GENERATED_ASN1SCC_userdefs_base_H
/*
Code automatically generated by asn1scc tool
*/
#include <i3ds_asn1/asn1crt.hpp>
#include <i3ds_asn1/asn1crt_encoding.hpp>

#include <i3ds_asn1/taste-types.hpp>

namespace i3ds_asn1 {


typedef T_UInt32 DummyBase_T;


void DummyBase_T_Initialize(DummyBase_T* pVal);

#define i3ds_asn1_ERR_DUMMYBASE_T_2		8925  /**/
flag DummyBase_T_IsConstraintValid(const DummyBase_T* pVal, int* pErrCode);

#define i3ds_asn1_ERR_UPER_ENCODE_DUMMYBASE_T_2		8926  /**/
#define i3ds_asn1_DummyBase_T_REQUIRED_BYTES_FOR_ENCODING       4 
#define i3ds_asn1_DummyBase_T_REQUIRED_BITS_FOR_ENCODING        32

flag DummyBase_T_Encode(const DummyBase_T* pVal, BitStream* pBitStrm, int* pErrCode, flag bCheckConstraints);

#define i3ds_asn1_ERR_UPER_DECODE_DUMMYBASE_T_2		8927  /**/
flag DummyBase_T_Decode(DummyBase_T* pVal, BitStream* pBitStrm, int* pErrCode);

extern const T_UInt32 numBase_JointTrajectory;
extern const T_UInt32 numStd_orogen_typekits_mtype_std_vector_base_JointTransform;
extern const T_UInt32 numStd_orogen_typekits_mtype_std_vector_base_Waypoint;
extern const T_UInt32 numStd_orogen_typekits_mtype_std_vector_base_Wrench;
extern const T_UInt32 numStd_vector_Wrappers_Vector4d;
extern const T_UInt32 numStd_orogen_typekits_mtype_std_vector_base_Trajectory;
extern const T_UInt32 numBase_JointLimits_names;
extern const T_UInt32 numBase_JointLimits_elements;
extern const T_UInt32 numBase_JointsTrajectory_names;
extern const T_UInt32 numBase_JointsTrajectory_elements;
extern const T_UInt32 numBase_JointsTrajectory_times_val;
extern const T_UInt32 numBase_NamedVector_Base_JointLimitRange_names;
extern const T_UInt32 numBase_NamedVector_Base_JointLimitRange_elements;
extern const T_UInt32 numBase_NamedVector_Base_JointState_names;
extern const T_UInt32 numBase_NamedVector_Base_Wrench_names;
extern const T_UInt32 numBase_NamedVector_Base_Wrench_elements;
extern const T_UInt32 numBase_NamedVector_Base_JointTrajectory_names;
extern const T_UInt32 numBase_NamedVector_Base_JointTrajectory_elements;
extern const T_UInt32 numBase_samples_DepthMap_timestamps;
extern const T_UInt32 numBase_samples_DepthMap_vertical_interval;
extern const T_UInt32 numBase_samples_DepthMap_horizontal_interval;
extern const T_UInt32 numBase_samples_DepthMap_distances;
extern const T_UInt32 numBase_samples_DepthMap_remissions;
extern const T_UInt32 numBase_samples_DistanceImage_data;
extern const T_UInt32 numBase_commands_Joints_names;
extern const T_UInt32 numBase_samples_LaserScan_ranges;
extern const T_UInt32 numBase_samples_LaserScan_remission;
extern const T_UInt32 numBase_samples_Pointcloud_points;
extern const T_UInt32 numBase_samples_Pointcloud_colors;
extern const T_UInt32 numBase_samples_Sonar_timestamps;
extern const T_UInt32 numBase_samples_Sonar_bearings;
extern const T_UInt32 numBase_samples_Sonar_bins;
extern const T_UInt32 numBase_samples_SonarBeam_beam;
extern const T_UInt32 numBase_samples_SonarScan_data;
extern const T_UInt32 numBase_samples_SonarScan_time_beams;
extern const T_UInt32 numBase_samples_Wrenches_names;
extern const T_UInt32 numBase_samples_Wrenches_elements;
extern const T_UInt32 numBase_JointTransformVector_names;
extern const T_UInt32 numBase_JointTransformVector_elements;
extern const T_UInt32 numBase_NamedVector_Base_JointTransform_names;
extern const T_UInt32 numBase_NamedVector_Base_JointTransform_elements;
extern const T_UInt32 numBase_samples_frame_Frame_image;
extern const T_UInt32 numBase_samples_frame_Frame_attributes;
extern const T_UInt32 numWrappers_MatrixXd_data;
extern const T_UInt32 numWrappers_VectorXd_data;
extern const T_UInt32 numBase_JointTransformVector_m_names;
extern const T_UInt32 numBase_NamedVector_base_JointTransform_m_names;
extern const T_UInt32 numBase_NamedVector_base_Wrench_m_names;
extern const T_UInt32 numBase_samples_Pointcloud_m_points;
extern const T_UInt32 numBase_samples_Pointcloud_m_colors;
extern const T_UInt32 numBase_samples_Wrenches_m_names;
extern const T_UInt32 numWrappers_geometry_Spline_knots;
extern const T_UInt32 numWrappers_geometry_Spline_vertices; 

/* ================= Encoding/Decoding function prototypes =================
 * These functions are placed at the end of the file to make sure all types
 * have been declared first, in case of parameterized ACN encodings
 * ========================================================================= */

 



} // namespace i3ds_asn1
#endif
