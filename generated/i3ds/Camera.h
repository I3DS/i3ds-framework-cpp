#ifndef GENERATED_ASN1SCC_Camera_H
#define GENERATED_ASN1SCC_Camera_H
/*
Code automatically generated by asn1scc tool
*/
#include "Region.h"
#include "taste-extended.h"
#include "taste-types.h"
#include "asn1crt.h"

#ifdef  __cplusplus
extern "C" {
#endif


typedef T_Float SensorGain;


void SensorGain_Initialize(SensorGain* pVal);

#define ERR_SENSORGAIN		1606  /**/
flag SensorGain_IsConstraintValid(const SensorGain* pVal, int* pErrCode);

#define ERR_UPER_ENCODE_SENSORGAIN_2		1613  /**/
#define SensorGain_REQUIRED_BYTES_FOR_ENCODING       13 
#define SensorGain_REQUIRED_BITS_FOR_ENCODING        104

flag SensorGain_Encode(const SensorGain* pVal, BitStream* pBitStrm, int* pErrCode, flag bCheckConstraints);

#define ERR_UPER_DECODE_SENSORGAIN_2		1614  /**/
flag SensorGain_Decode(SensorGain* pVal, BitStream* pBitStrm, int* pErrCode);
typedef T_UInt16 PatternSequence;


void PatternSequence_Initialize(PatternSequence* pVal);

#define ERR_PATTERNSEQUENCE		1819  /**/
flag PatternSequence_IsConstraintValid(const PatternSequence* pVal, int* pErrCode);

#define ERR_UPER_ENCODE_PATTERNSEQUENCE_2		1826  /**/
#define PatternSequence_REQUIRED_BYTES_FOR_ENCODING       2 
#define PatternSequence_REQUIRED_BITS_FOR_ENCODING        16

flag PatternSequence_Encode(const PatternSequence* pVal, BitStream* pBitStrm, int* pErrCode, flag bCheckConstraints);

#define ERR_UPER_DECODE_PATTERNSEQUENCE_2		1827  /**/
flag PatternSequence_Decode(PatternSequence* pVal, BitStream* pBitStrm, int* pErrCode);
typedef T_UInt16 PatternID;


void PatternID_Initialize(PatternID* pVal);

#define ERR_PATTERNID		1830  /**/
flag PatternID_IsConstraintValid(const PatternID* pVal, int* pErrCode);

#define ERR_UPER_ENCODE_PATTERNID_2		1837  /**/
#define PatternID_REQUIRED_BYTES_FOR_ENCODING       2 
#define PatternID_REQUIRED_BITS_FOR_ENCODING        16

flag PatternID_Encode(const PatternID* pVal, BitStream* pBitStrm, int* pErrCode, flag bCheckConstraints);

#define ERR_UPER_DECODE_PATTERNID_2		1838  /**/
flag PatternID_Decode(PatternID* pVal, BitStream* pBitStrm, int* pErrCode);
typedef T_UInt8 FlashStrength;


void FlashStrength_Initialize(FlashStrength* pVal);

#define ERR_FLASHSTRENGTH		1702  /**/
flag FlashStrength_IsConstraintValid(const FlashStrength* pVal, int* pErrCode);

#define ERR_UPER_ENCODE_FLASHSTRENGTH_2		1709  /**/
#define FlashStrength_REQUIRED_BYTES_FOR_ENCODING       1 
#define FlashStrength_REQUIRED_BITS_FOR_ENCODING        8

flag FlashStrength_Encode(const FlashStrength* pVal, BitStream* pBitStrm, int* pErrCode, flag bCheckConstraints);

#define ERR_UPER_DECODE_FLASHSTRENGTH_2		1710  /**/
flag FlashStrength_Decode(FlashStrength* pVal, BitStream* pBitStrm, int* pErrCode);
typedef T_UInt32 ShutterTime;


void ShutterTime_Initialize(ShutterTime* pVal);

#define ERR_SHUTTERTIME		1595  /**/
flag ShutterTime_IsConstraintValid(const ShutterTime* pVal, int* pErrCode);

#define ERR_UPER_ENCODE_SHUTTERTIME_2		1602  /**/
#define ShutterTime_REQUIRED_BYTES_FOR_ENCODING       4 
#define ShutterTime_REQUIRED_BITS_FOR_ENCODING        32

flag ShutterTime_Encode(const ShutterTime* pVal, BitStream* pBitStrm, int* pErrCode, flag bCheckConstraints);

#define ERR_UPER_DECODE_SHUTTERTIME_2		1603  /**/
flag ShutterTime_Decode(ShutterTime* pVal, BitStream* pBitStrm, int* pErrCode);
/*-- CameraExposure --------------------------------------------*/
typedef struct {
    T_UInt32 shutter;
    T_Float gain;

} CameraExposure;

void CameraExposure_Initialize(CameraExposure* pVal);

#define ERR_CAMERAEXPOSURE		1647  /**/
#define ERR_CAMERAEXPOSURE_SHUTTER		1617  /**/
#define ERR_CAMERAEXPOSURE_GAIN		1632  /**/
flag CameraExposure_IsConstraintValid(const CameraExposure* pVal, int* pErrCode);

#define ERR_UPER_ENCODE_CAMERAEXPOSURE		1648  /**/
#define ERR_UPER_ENCODE_CAMERAEXPOSURE_SHUTTER_2_2		1628  /**/
#define ERR_UPER_ENCODE_CAMERAEXPOSURE_GAIN_2_2		1643  /**/
#define CameraExposure_REQUIRED_BYTES_FOR_ENCODING       17 
#define CameraExposure_REQUIRED_BITS_FOR_ENCODING        136

flag CameraExposure_Encode(const CameraExposure* pVal, BitStream* pBitStrm, int* pErrCode, flag bCheckConstraints);

#define ERR_UPER_DECODE_CAMERAEXPOSURE		1649  /**/
#define ERR_UPER_DECODE_CAMERAEXPOSURE_SHUTTER_2_2		1629  /**/
#define ERR_UPER_DECODE_CAMERAEXPOSURE_GAIN_2_2		1644  /**/
flag CameraExposure_Decode(CameraExposure* pVal, BitStream* pBitStrm, int* pErrCode);
/*-- CameraAutoExposure --------------------------------------------*/
typedef struct {
    T_Boolean enable;
    T_UInt32 max_shutter;
    T_Float max_gain;

} CameraAutoExposure;

void CameraAutoExposure_Initialize(CameraAutoExposure* pVal);

#define ERR_CAMERAAUTOEXPOSURE		1695  /**/
#define ERR_CAMERAAUTOEXPOSURE_ENABLE		1654  /**/
#define ERR_CAMERAAUTOEXPOSURE_MAX_SHUTTER		1665  /**/
#define ERR_CAMERAAUTOEXPOSURE_MAX_GAIN		1680  /**/
flag CameraAutoExposure_IsConstraintValid(const CameraAutoExposure* pVal, int* pErrCode);

#define ERR_UPER_ENCODE_CAMERAAUTOEXPOSURE		1696  /**/
#define ERR_UPER_ENCODE_CAMERAAUTOEXPOSURE_ENABLE_2		1661  /**/
#define ERR_UPER_ENCODE_CAMERAAUTOEXPOSURE_MAX_SHUTTER_2_2		1676  /**/
#define ERR_UPER_ENCODE_CAMERAAUTOEXPOSURE_MAX_GAIN_2_2		1691  /**/
#define CameraAutoExposure_REQUIRED_BYTES_FOR_ENCODING       18 
#define CameraAutoExposure_REQUIRED_BITS_FOR_ENCODING        137

flag CameraAutoExposure_Encode(const CameraAutoExposure* pVal, BitStream* pBitStrm, int* pErrCode, flag bCheckConstraints);

#define ERR_UPER_DECODE_CAMERAAUTOEXPOSURE		1697  /**/
#define ERR_UPER_DECODE_CAMERAAUTOEXPOSURE_ENABLE_2		1662  /**/
#define ERR_UPER_DECODE_CAMERAAUTOEXPOSURE_MAX_SHUTTER_2_2		1677  /**/
#define ERR_UPER_DECODE_CAMERAAUTOEXPOSURE_MAX_GAIN_2_2		1692  /**/
flag CameraAutoExposure_Decode(CameraAutoExposure* pVal, BitStream* pBitStrm, int* pErrCode);
/*-- CameraFlash --------------------------------------------*/
typedef struct {
    T_Boolean enable;
    T_UInt8 strength;

} CameraFlash;

void CameraFlash_Initialize(CameraFlash* pVal);

#define ERR_CAMERAFLASH		1739  /**/
#define ERR_CAMERAFLASH_ENABLE		1713  /**/
#define ERR_CAMERAFLASH_STRENGTH		1724  /**/
flag CameraFlash_IsConstraintValid(const CameraFlash* pVal, int* pErrCode);

#define ERR_UPER_ENCODE_CAMERAFLASH		1740  /**/
#define ERR_UPER_ENCODE_CAMERAFLASH_ENABLE_2		1720  /**/
#define ERR_UPER_ENCODE_CAMERAFLASH_STRENGTH_2_2		1735  /**/
#define CameraFlash_REQUIRED_BYTES_FOR_ENCODING       2 
#define CameraFlash_REQUIRED_BITS_FOR_ENCODING        9

flag CameraFlash_Encode(const CameraFlash* pVal, BitStream* pBitStrm, int* pErrCode, flag bCheckConstraints);

#define ERR_UPER_DECODE_CAMERAFLASH		1741  /**/
#define ERR_UPER_DECODE_CAMERAFLASH_ENABLE_2		1721  /**/
#define ERR_UPER_DECODE_CAMERAFLASH_STRENGTH_2_2		1736  /**/
flag CameraFlash_Decode(CameraFlash* pVal, BitStream* pBitStrm, int* pErrCode);
/*-- CameraRegion --------------------------------------------*/
typedef struct {
    T_Boolean enable;
    PlanarRegion region;

} CameraRegion;

void CameraRegion_Initialize(CameraRegion* pVal);

#define ERR_CAMERAREGION		1812  /**/
#define ERR_CAMERAREGION_ENABLE		1746  /**/
#define ERR_CAMERAREGION_REGION		1801  /**/
#define ERR_CAMERAREGION_REGION_OFFSET_X		1757  /**/
#define ERR_CAMERAREGION_REGION_OFFSET_Y		1768  /**/
#define ERR_CAMERAREGION_REGION_SIZE_X		1779  /**/
#define ERR_CAMERAREGION_REGION_SIZE_Y		1790  /**/
flag CameraRegion_IsConstraintValid(const CameraRegion* pVal, int* pErrCode);

#define ERR_UPER_ENCODE_CAMERAREGION		1813  /**/
#define ERR_UPER_ENCODE_CAMERAREGION_ENABLE_2		1753  /**/
#define ERR_UPER_ENCODE_CAMERAREGION_REGION_2		1808  /**/
#define CameraRegion_REQUIRED_BYTES_FOR_ENCODING       9 
#define CameraRegion_REQUIRED_BITS_FOR_ENCODING        65

flag CameraRegion_Encode(const CameraRegion* pVal, BitStream* pBitStrm, int* pErrCode, flag bCheckConstraints);

#define ERR_UPER_DECODE_CAMERAREGION		1814  /**/
#define ERR_UPER_DECODE_CAMERAREGION_ENABLE_2		1754  /**/
#define ERR_UPER_DECODE_CAMERAREGION_REGION_2		1809  /**/
flag CameraRegion_Decode(CameraRegion* pVal, BitStream* pBitStrm, int* pErrCode);
/*-- CameraPattern --------------------------------------------*/
typedef struct {
    T_Boolean enable;
    T_UInt16 sequence;

} CameraPattern;

void CameraPattern_Initialize(CameraPattern* pVal);

#define ERR_CAMERAPATTERN		1867  /**/
#define ERR_CAMERAPATTERN_ENABLE		1841  /**/
#define ERR_CAMERAPATTERN_SEQUENCE		1852  /**/
flag CameraPattern_IsConstraintValid(const CameraPattern* pVal, int* pErrCode);

#define ERR_UPER_ENCODE_CAMERAPATTERN		1868  /**/
#define ERR_UPER_ENCODE_CAMERAPATTERN_ENABLE_2		1848  /**/
#define ERR_UPER_ENCODE_CAMERAPATTERN_SEQUENCE_2_2		1863  /**/
#define CameraPattern_REQUIRED_BYTES_FOR_ENCODING       3 
#define CameraPattern_REQUIRED_BITS_FOR_ENCODING        17

flag CameraPattern_Encode(const CameraPattern* pVal, BitStream* pBitStrm, int* pErrCode, flag bCheckConstraints);

#define ERR_UPER_DECODE_CAMERAPATTERN		1869  /**/
#define ERR_UPER_DECODE_CAMERAPATTERN_ENABLE_2		1849  /**/
#define ERR_UPER_DECODE_CAMERAPATTERN_SEQUENCE_2_2		1864  /**/
flag CameraPattern_Decode(CameraPattern* pVal, BitStream* pBitStrm, int* pErrCode);
/*-- CameraConfiguration --------------------------------------------*/
typedef struct {
    T_UInt32 shutter;
    T_Float gain;
    T_Boolean auto_exposure_enabled;
    T_UInt32 max_shutter;
    T_Float max_gain;
    T_Boolean region_enabled;
    PlanarRegion region;
    T_Boolean flash_enabled;
    T_UInt8 flash_strength;
    T_Boolean pattern_enabled;
    T_UInt16 pattern_sequence;

} CameraConfiguration;

void CameraConfiguration_Initialize(CameraConfiguration* pVal);

#define ERR_CAMERACONFIGURATION		2063  /**/
#define ERR_CAMERACONFIGURATION_SHUTTER		1874  /**/
#define ERR_CAMERACONFIGURATION_GAIN		1889  /**/
#define ERR_CAMERACONFIGURATION_AUTO_EXPOSURE_ENABLED		1904  /**/
#define ERR_CAMERACONFIGURATION_MAX_SHUTTER		1915  /**/
#define ERR_CAMERACONFIGURATION_MAX_GAIN		1930  /**/
#define ERR_CAMERACONFIGURATION_REGION_ENABLED		1945  /**/
#define ERR_CAMERACONFIGURATION_REGION		2000  /**/
#define ERR_CAMERACONFIGURATION_REGION_OFFSET_X		1956  /**/
#define ERR_CAMERACONFIGURATION_REGION_OFFSET_Y		1967  /**/
#define ERR_CAMERACONFIGURATION_REGION_SIZE_X		1978  /**/
#define ERR_CAMERACONFIGURATION_REGION_SIZE_Y		1989  /**/
#define ERR_CAMERACONFIGURATION_FLASH_ENABLED		2011  /**/
#define ERR_CAMERACONFIGURATION_FLASH_STRENGTH		2022  /**/
#define ERR_CAMERACONFIGURATION_PATTERN_ENABLED		2037  /**/
#define ERR_CAMERACONFIGURATION_PATTERN_SEQUENCE		2048  /**/
flag CameraConfiguration_IsConstraintValid(const CameraConfiguration* pVal, int* pErrCode);

#define ERR_UPER_ENCODE_CAMERACONFIGURATION		2064  /**/
#define ERR_UPER_ENCODE_CAMERACONFIGURATION_SHUTTER_2_2		1885  /**/
#define ERR_UPER_ENCODE_CAMERACONFIGURATION_GAIN_2_2		1900  /**/
#define ERR_UPER_ENCODE_CAMERACONFIGURATION_AUTO_EXPOSURE_ENABLED_2		1911  /**/
#define ERR_UPER_ENCODE_CAMERACONFIGURATION_MAX_SHUTTER_2_2		1926  /**/
#define ERR_UPER_ENCODE_CAMERACONFIGURATION_MAX_GAIN_2_2		1941  /**/
#define ERR_UPER_ENCODE_CAMERACONFIGURATION_REGION_ENABLED_2		1952  /**/
#define ERR_UPER_ENCODE_CAMERACONFIGURATION_REGION_2		2007  /**/
#define ERR_UPER_ENCODE_CAMERACONFIGURATION_FLASH_ENABLED_2		2018  /**/
#define ERR_UPER_ENCODE_CAMERACONFIGURATION_FLASH_STRENGTH_2_2		2033  /**/
#define ERR_UPER_ENCODE_CAMERACONFIGURATION_PATTERN_ENABLED_2		2044  /**/
#define ERR_UPER_ENCODE_CAMERACONFIGURATION_PATTERN_SEQUENCE_2_2		2059  /**/
#define CameraConfiguration_REQUIRED_BYTES_FOR_ENCODING       46 
#define CameraConfiguration_REQUIRED_BITS_FOR_ENCODING        364

flag CameraConfiguration_Encode(const CameraConfiguration* pVal, BitStream* pBitStrm, int* pErrCode, flag bCheckConstraints);

#define ERR_UPER_DECODE_CAMERACONFIGURATION		2065  /**/
#define ERR_UPER_DECODE_CAMERACONFIGURATION_SHUTTER_2_2		1886  /**/
#define ERR_UPER_DECODE_CAMERACONFIGURATION_GAIN_2_2		1901  /**/
#define ERR_UPER_DECODE_CAMERACONFIGURATION_AUTO_EXPOSURE_ENABLED_2		1912  /**/
#define ERR_UPER_DECODE_CAMERACONFIGURATION_MAX_SHUTTER_2_2		1927  /**/
#define ERR_UPER_DECODE_CAMERACONFIGURATION_MAX_GAIN_2_2		1942  /**/
#define ERR_UPER_DECODE_CAMERACONFIGURATION_REGION_ENABLED_2		1953  /**/
#define ERR_UPER_DECODE_CAMERACONFIGURATION_REGION_2		2008  /**/
#define ERR_UPER_DECODE_CAMERACONFIGURATION_FLASH_ENABLED_2		2019  /**/
#define ERR_UPER_DECODE_CAMERACONFIGURATION_FLASH_STRENGTH_2_2		2034  /**/
#define ERR_UPER_DECODE_CAMERACONFIGURATION_PATTERN_ENABLED_2		2045  /**/
#define ERR_UPER_DECODE_CAMERACONFIGURATION_PATTERN_SEQUENCE_2_2		2060  /**/
flag CameraConfiguration_Decode(CameraConfiguration* pVal, BitStream* pBitStrm, int* pErrCode);

 

/* ================= Encoding/Decoding function prototypes =================
 * These functions are placed at the end of the file to make sure all types
 * have been declared first, in case of parameterized ACN encodings
 * ========================================================================= */

 


#ifdef  __cplusplus
}

#endif

#endif
