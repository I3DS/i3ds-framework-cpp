#ifndef GENERATED_ASN1SCC_Analog_H
#define GENERATED_ASN1SCC_Analog_H
/*
Code automatically generated by asn1scc tool
*/
#include "Sensor.h"
#include "SampleAttribute.h"
#include "taste-types.h"
#include "asn1crt.h"

#ifdef  __cplusplus
extern "C" {
#endif


typedef T_UInt8 SeriesCount;


void SeriesCount_Initialize(SeriesCount* pVal);

#define ERR_SERIESCOUNT		487  /**/
flag SeriesCount_IsConstraintValid(const SeriesCount* pVal, int* pErrCode);

#define ERR_UPER_ENCODE_SERIESCOUNT_2		494  /**/
#define SeriesCount_REQUIRED_BYTES_FOR_ENCODING       1 
#define SeriesCount_REQUIRED_BITS_FOR_ENCODING        8

flag SeriesCount_Encode(const SeriesCount* pVal, BitStream* pBitStrm, int* pErrCode, flag bCheckConstraints);

#define ERR_UPER_DECODE_SERIESCOUNT_2		495  /**/
flag SeriesCount_Decode(SeriesCount* pVal, BitStream* pBitStrm, int* pErrCode);
/*-- AnalogSeriesDescriptor --------------------------------------------*/
typedef struct {
    SampleAttributes attributes;
    T_UInt8 series_count;
    T_UInt32 batch_size;

} AnalogSeriesDescriptor;

void AnalogSeriesDescriptor_Initialize(AnalogSeriesDescriptor* pVal);

#define ERR_ANALOGSERIESDESCRIPTOR		649  /**/
#define ERR_ANALOGSERIESDESCRIPTOR_ATTRIBUTES		608  /**/
#define ERR_ANALOGSERIESDESCRIPTOR_ATTRIBUTES_TIMESTAMP		498  /**/
#define ERR_ANALOGSERIESDESCRIPTOR_ATTRIBUTES_VALIDITY		513  /**/
#define ERR_ANALOGSERIESDESCRIPTOR_ATTRIBUTES_ATTRIBUTES		601  /**/
#define ERR_ANALOGSERIESDESCRIPTOR_ATTRIBUTES_ATTRIBUTES_ELM		590  /**/
#define ERR_ANALOGSERIESDESCRIPTOR_ATTRIBUTES_ATTRIBUTES_ELM_ATTRIBUTE_KEY		524  /**/
#define ERR_ANALOGSERIESDESCRIPTOR_ATTRIBUTES_ATTRIBUTES_ELM_ATTRIBUTE_VALUE		579  /**/
#define ERR_ANALOGSERIESDESCRIPTOR_ATTRIBUTES_ATTRIBUTES_ELM_ATTRIBUTE_VALUE_BOOLEAN_VALUE		535  /**/
#define ERR_ANALOGSERIESDESCRIPTOR_ATTRIBUTES_ATTRIBUTES_ELM_ATTRIBUTE_VALUE_DISCRETE_VALUE		546  /**/
#define ERR_ANALOGSERIESDESCRIPTOR_ATTRIBUTES_ATTRIBUTES_ELM_ATTRIBUTE_VALUE_REAL_VALUE		557  /**/
#define ERR_ANALOGSERIESDESCRIPTOR_ATTRIBUTES_ATTRIBUTES_ELM_ATTRIBUTE_VALUE_STRING_VALUE		568  /**/
#define ERR_ANALOGSERIESDESCRIPTOR_SERIES_COUNT		619  /**/
#define ERR_ANALOGSERIESDESCRIPTOR_BATCH_SIZE		634  /**/
flag AnalogSeriesDescriptor_IsConstraintValid(const AnalogSeriesDescriptor* pVal, int* pErrCode);

#define ERR_UPER_ENCODE_ANALOGSERIESDESCRIPTOR		650  /**/
#define ERR_UPER_ENCODE_ANALOGSERIESDESCRIPTOR_ATTRIBUTES_2		615  /**/
#define ERR_UPER_ENCODE_ANALOGSERIESDESCRIPTOR_SERIES_COUNT_2_2		630  /**/
#define ERR_UPER_ENCODE_ANALOGSERIESDESCRIPTOR_BATCH_SIZE_2_2		645  /**/
#define AnalogSeriesDescriptor_REQUIRED_BYTES_FOR_ENCODING       71 
#define AnalogSeriesDescriptor_REQUIRED_BITS_FOR_ENCODING        565

flag AnalogSeriesDescriptor_Encode(const AnalogSeriesDescriptor* pVal, BitStream* pBitStrm, int* pErrCode, flag bCheckConstraints);

#define ERR_UPER_DECODE_ANALOGSERIESDESCRIPTOR		651  /**/
#define ERR_UPER_DECODE_ANALOGSERIESDESCRIPTOR_ATTRIBUTES_2		616  /**/
#define ERR_UPER_DECODE_ANALOGSERIESDESCRIPTOR_SERIES_COUNT_2_2		631  /**/
#define ERR_UPER_DECODE_ANALOGSERIESDESCRIPTOR_BATCH_SIZE_2_2		646  /**/
flag AnalogSeriesDescriptor_Decode(AnalogSeriesDescriptor* pVal, BitStream* pBitStrm, int* pErrCode);

 

/* ================= Encoding/Decoding function prototypes =================
 * These functions are placed at the end of the file to make sure all types
 * have been declared first, in case of parameterized ACN encodings
 * ========================================================================= */

 


#ifdef  __cplusplus
}

#endif

#endif
