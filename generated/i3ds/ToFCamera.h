#ifndef GENERATED_ASN1SCC_ToFCamera_H
#define GENERATED_ASN1SCC_ToFCamera_H
/*
Code automatically generated by asn1scc tool
*/
#include "DepthMap.h"
#include "SampleAttribute.h"
#include "taste-extended.h"
#include "Region.h"
#include "taste-types.h"
#include "asn1crt.h"

#ifdef  __cplusplus
extern "C" {
#endif


/*-- ToFRange --------------------------------------------*/
typedef struct {
    T_Float min_depth;
    T_Float max_depth;

} ToFRange;

void ToFRange_Initialize(ToFRange* pVal);

#define ERR_TOFRANGE		3282  /**/
#define ERR_TOFRANGE_MIN_DEPTH		3260  /**/
#define ERR_TOFRANGE_MAX_DEPTH		3271  /**/
flag ToFRange_IsConstraintValid(const ToFRange* pVal, int* pErrCode);

#define ERR_UPER_ENCODE_TOFRANGE		3283  /**/
#define ERR_UPER_ENCODE_TOFRANGE_MIN_DEPTH_2		3267  /**/
#define ERR_UPER_ENCODE_TOFRANGE_MAX_DEPTH_2		3278  /**/
#define ToFRange_REQUIRED_BYTES_FOR_ENCODING       26 
#define ToFRange_REQUIRED_BITS_FOR_ENCODING        208

flag ToFRange_Encode(const ToFRange* pVal, BitStream* pBitStrm, int* pErrCode, flag bCheckConstraints);

#define ERR_UPER_DECODE_TOFRANGE		3284  /**/
#define ERR_UPER_DECODE_TOFRANGE_MIN_DEPTH_2		3268  /**/
#define ERR_UPER_DECODE_TOFRANGE_MAX_DEPTH_2		3279  /**/
flag ToFRange_Decode(ToFRange* pVal, BitStream* pBitStrm, int* pErrCode);
/*-- ToFMeasurement400K --------------------------------------------*/


typedef struct {
    int nCount; 
    
    T_Float arr[400000];
} ToFMeasurement400K_distances;


typedef struct {
    int nCount; 
    
    Depth_validity_t arr[400000];
} ToFMeasurement400K_validity;
typedef struct {
    SampleAttributes attributes;
    ToFMeasurement400K_distances distances;
    ToFMeasurement400K_validity validity;
    PlanarRegion region;

} ToFMeasurement400K;

void ToFMeasurement400K_distances_Initialize(ToFMeasurement400K_distances* pVal);
void ToFMeasurement400K_validity_Initialize(ToFMeasurement400K_validity* pVal);
void ToFMeasurement400K_Initialize(ToFMeasurement400K* pVal);

#define ERR_TOFMEASUREMENT400K		3596  /**/
#define ERR_TOFMEASUREMENT400K_ATTRIBUTES		3494  /**/
#define ERR_TOFMEASUREMENT400K_ATTRIBUTES_TIMESTAMP		3384  /**/
#define ERR_TOFMEASUREMENT400K_ATTRIBUTES_VALIDITY		3399  /**/
#define ERR_TOFMEASUREMENT400K_ATTRIBUTES_ATTRIBUTES		3487  /**/
#define ERR_TOFMEASUREMENT400K_ATTRIBUTES_ATTRIBUTES_ELM		3476  /**/
#define ERR_TOFMEASUREMENT400K_ATTRIBUTES_ATTRIBUTES_ELM_ATTRIBUTE_KEY		3410  /**/
#define ERR_TOFMEASUREMENT400K_ATTRIBUTES_ATTRIBUTES_ELM_ATTRIBUTE_VALUE		3465  /**/
#define ERR_TOFMEASUREMENT400K_ATTRIBUTES_ATTRIBUTES_ELM_ATTRIBUTE_VALUE_BOOLEAN_VALUE		3421  /**/
#define ERR_TOFMEASUREMENT400K_ATTRIBUTES_ATTRIBUTES_ELM_ATTRIBUTE_VALUE_DISCRETE_VALUE		3432  /**/
#define ERR_TOFMEASUREMENT400K_ATTRIBUTES_ATTRIBUTES_ELM_ATTRIBUTE_VALUE_REAL_VALUE		3443  /**/
#define ERR_TOFMEASUREMENT400K_ATTRIBUTES_ATTRIBUTES_ELM_ATTRIBUTE_VALUE_STRING_VALUE		3454  /**/
#define ERR_TOFMEASUREMENT400K_DISTANCES		3516  /**/
#define ERR_TOFMEASUREMENT400K_DISTANCES_ELM		3505  /**/
#define ERR_TOFMEASUREMENT400K_VALIDITY		3534  /**/
#define ERR_TOFMEASUREMENT400K_VALIDITY_ELM		3523  /**/
#define ERR_TOFMEASUREMENT400K_REGION		3585  /**/
#define ERR_TOFMEASUREMENT400K_REGION_OFFSET_X		3541  /**/
#define ERR_TOFMEASUREMENT400K_REGION_OFFSET_Y		3552  /**/
#define ERR_TOFMEASUREMENT400K_REGION_SIZE_X		3563  /**/
#define ERR_TOFMEASUREMENT400K_REGION_SIZE_Y		3574  /**/
flag ToFMeasurement400K_IsConstraintValid(const ToFMeasurement400K* pVal, int* pErrCode);

#define ERR_UPER_ENCODE_TOFMEASUREMENT400K		3597  /**/
#define ERR_UPER_ENCODE_TOFMEASUREMENT400K_ATTRIBUTES_2		3501  /**/
#define ERR_UPER_ENCODE_TOFMEASUREMENT400K_DISTANCES		3517  /**/
#define ERR_UPER_ENCODE_TOFMEASUREMENT400K_DISTANCES_ELM_2		3512  /**/
#define ERR_UPER_ENCODE_TOFMEASUREMENT400K_VALIDITY		3535  /**/
#define ERR_UPER_ENCODE_TOFMEASUREMENT400K_VALIDITY_ELM_2		3530  /**/
#define ERR_UPER_ENCODE_TOFMEASUREMENT400K_REGION_2		3592  /**/
#define ToFMeasurement400K_REQUIRED_BYTES_FOR_ENCODING       5300092 
#define ToFMeasurement400K_REQUIRED_BITS_FOR_ENCODING        42400733

flag ToFMeasurement400K_Encode(const ToFMeasurement400K* pVal, BitStream* pBitStrm, int* pErrCode, flag bCheckConstraints);

#define ERR_UPER_DECODE_TOFMEASUREMENT400K		3598  /**/
#define ERR_UPER_DECODE_TOFMEASUREMENT400K_ATTRIBUTES_2		3502  /**/
#define ERR_UPER_DECODE_TOFMEASUREMENT400K_DISTANCES		3518  /**/
#define ERR_UPER_DECODE_TOFMEASUREMENT400K_DISTANCES_ELM_2		3513  /**/
#define ERR_UPER_DECODE_TOFMEASUREMENT400K_VALIDITY		3536  /**/
#define ERR_UPER_DECODE_TOFMEASUREMENT400K_VALIDITY_ELM_2		3531  /**/
#define ERR_UPER_DECODE_TOFMEASUREMENT400K_REGION_2		3593  /**/
flag ToFMeasurement400K_Decode(ToFMeasurement400K* pVal, BitStream* pBitStrm, int* pErrCode);
/*-- ToFRegion --------------------------------------------*/
typedef struct {
    T_Boolean enable;
    PlanarRegion region;

} ToFRegion;

void ToFRegion_Initialize(ToFRegion* pVal);

#define ERR_TOFREGION		3253  /**/
#define ERR_TOFREGION_ENABLE		3187  /**/
#define ERR_TOFREGION_REGION		3242  /**/
#define ERR_TOFREGION_REGION_OFFSET_X		3198  /**/
#define ERR_TOFREGION_REGION_OFFSET_Y		3209  /**/
#define ERR_TOFREGION_REGION_SIZE_X		3220  /**/
#define ERR_TOFREGION_REGION_SIZE_Y		3231  /**/
flag ToFRegion_IsConstraintValid(const ToFRegion* pVal, int* pErrCode);

#define ERR_UPER_ENCODE_TOFREGION		3254  /**/
#define ERR_UPER_ENCODE_TOFREGION_ENABLE_2		3194  /**/
#define ERR_UPER_ENCODE_TOFREGION_REGION_2		3249  /**/
#define ToFRegion_REQUIRED_BYTES_FOR_ENCODING       9 
#define ToFRegion_REQUIRED_BITS_FOR_ENCODING        65

flag ToFRegion_Encode(const ToFRegion* pVal, BitStream* pBitStrm, int* pErrCode, flag bCheckConstraints);

#define ERR_UPER_DECODE_TOFREGION		3255  /**/
#define ERR_UPER_DECODE_TOFREGION_ENABLE_2		3195  /**/
#define ERR_UPER_DECODE_TOFREGION_REGION_2		3250  /**/
flag ToFRegion_Decode(ToFRegion* pVal, BitStream* pBitStrm, int* pErrCode);
/*-- ToFConfiguration --------------------------------------------*/
typedef struct {
    T_Boolean region_enabled;
    PlanarRegion region;
    T_Float min_depth;
    T_Float max_depth;

} ToFConfiguration;

void ToFConfiguration_Initialize(ToFConfiguration* pVal);

#define ERR_TOFCONFIGURATION		3377  /**/
#define ERR_TOFCONFIGURATION_REGION_ENABLED		3289  /**/
#define ERR_TOFCONFIGURATION_REGION		3344  /**/
#define ERR_TOFCONFIGURATION_REGION_OFFSET_X		3300  /**/
#define ERR_TOFCONFIGURATION_REGION_OFFSET_Y		3311  /**/
#define ERR_TOFCONFIGURATION_REGION_SIZE_X		3322  /**/
#define ERR_TOFCONFIGURATION_REGION_SIZE_Y		3333  /**/
#define ERR_TOFCONFIGURATION_MIN_DEPTH		3355  /**/
#define ERR_TOFCONFIGURATION_MAX_DEPTH		3366  /**/
flag ToFConfiguration_IsConstraintValid(const ToFConfiguration* pVal, int* pErrCode);

#define ERR_UPER_ENCODE_TOFCONFIGURATION		3378  /**/
#define ERR_UPER_ENCODE_TOFCONFIGURATION_REGION_ENABLED_2		3296  /**/
#define ERR_UPER_ENCODE_TOFCONFIGURATION_REGION_2		3351  /**/
#define ERR_UPER_ENCODE_TOFCONFIGURATION_MIN_DEPTH_2		3362  /**/
#define ERR_UPER_ENCODE_TOFCONFIGURATION_MAX_DEPTH_2		3373  /**/
#define ToFConfiguration_REQUIRED_BYTES_FOR_ENCODING       35 
#define ToFConfiguration_REQUIRED_BITS_FOR_ENCODING        273

flag ToFConfiguration_Encode(const ToFConfiguration* pVal, BitStream* pBitStrm, int* pErrCode, flag bCheckConstraints);

#define ERR_UPER_DECODE_TOFCONFIGURATION		3379  /**/
#define ERR_UPER_DECODE_TOFCONFIGURATION_REGION_ENABLED_2		3297  /**/
#define ERR_UPER_DECODE_TOFCONFIGURATION_REGION_2		3352  /**/
#define ERR_UPER_DECODE_TOFCONFIGURATION_MIN_DEPTH_2		3363  /**/
#define ERR_UPER_DECODE_TOFCONFIGURATION_MAX_DEPTH_2		3374  /**/
flag ToFConfiguration_Decode(ToFConfiguration* pVal, BitStream* pBitStrm, int* pErrCode);

 

/* ================= Encoding/Decoding function prototypes =================
 * These functions are placed at the end of the file to make sure all types
 * have been declared first, in case of parameterized ACN encodings
 * ========================================================================= */

 


#ifdef  __cplusplus
}

#endif

#endif
