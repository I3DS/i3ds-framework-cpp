#ifndef GENERATED_ASN1SCC_Time_H
#define GENERATED_ASN1SCC_Time_H
/*
Code automatically generated by asn1scc tool
*/
#include "taste-types.h"
#include "taste-extended.h"
#include "asn1crt.h"

#ifdef  __cplusplus
extern "C" {
#endif


/*-- Time --------------------------------------------*/
typedef struct {
    T_Int64 microseconds;
    T_Int32 usecPerSec;

} Time;

void Time_Initialize(Time* pVal);

#define ERR_TIME		480  /**/
#define ERR_TIME_MICROSECONDS		458  /**/
#define ERR_TIME_USECPERSEC		469  /**/
flag Time_IsConstraintValid(const Time* pVal, int* pErrCode);

#define ERR_UPER_ENCODE_TIME		481  /**/
#define ERR_UPER_ENCODE_TIME_MICROSECONDS_2		465  /**/
#define ERR_UPER_ENCODE_TIME_USECPERSEC_2		476  /**/
#define Time_REQUIRED_BYTES_FOR_ENCODING       12 
#define Time_REQUIRED_BITS_FOR_ENCODING        96

flag Time_Encode(const Time* pVal, BitStream* pBitStrm, int* pErrCode, flag bCheckConstraints);

#define ERR_UPER_DECODE_TIME		482  /**/
#define ERR_UPER_DECODE_TIME_MICROSECONDS_2		466  /**/
#define ERR_UPER_DECODE_TIME_USECPERSEC_2		477  /**/
flag Time_Decode(Time* pVal, BitStream* pBitStrm, int* pErrCode);
typedef enum {
    seconds = 0,
    milliseconds = 1,
    microseconds = 2
} Resolution;

// please use the following macros to avoid breaking code.
#define Resolution_seconds seconds
#define Resolution_milliseconds milliseconds
#define Resolution_microseconds microseconds

void Resolution_Initialize(Resolution* pVal);

#define ERR_RESOLUTION		451  /**/
flag Resolution_IsConstraintValid(const Resolution* pVal, int* pErrCode);

#define ERR_UPER_ENCODE_RESOLUTION		452  /**/
#define Resolution_REQUIRED_BYTES_FOR_ENCODING       1 
#define Resolution_REQUIRED_BITS_FOR_ENCODING        2

flag Resolution_Encode(const Resolution* pVal, BitStream* pBitStrm, int* pErrCode, flag bCheckConstraints);

#define ERR_UPER_DECODE_RESOLUTION		453  /**/
flag Resolution_Decode(Resolution* pVal, BitStream* pBitStrm, int* pErrCode);

 

/* ================= Encoding/Decoding function prototypes =================
 * These functions are placed at the end of the file to make sure all types
 * have been declared first, in case of parameterized ACN encodings
 * ========================================================================= */

 


#ifdef  __cplusplus
}

#endif

#endif
