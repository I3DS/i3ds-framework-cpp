#ifndef GENERATED_ASN1SCC_PoseEstimator_H
#define GENERATED_ASN1SCC_PoseEstimator_H
/*
Code automatically generated by asn1scc tool
*/
#include "base.h"
#include "SampleAttribute.h"
#include "taste-types.h"
#include "asn1crt.h"

#ifdef  __cplusplus
extern "C" {
#endif


/*-- PoseEstimatorMeasurement --------------------------------------------*/
typedef struct {
    SampleAttributes attributes;
    Base_Pose estimated_pose;

} PoseEstimatorMeasurement;

void PoseEstimatorMeasurement_Initialize(PoseEstimatorMeasurement* pVal);

#define ERR_POSEESTIMATORMEASUREMENT		10555  /**/
#define ERR_POSEESTIMATORMEASUREMENT_ATTRIBUTES		10464  /**/
#define ERR_POSEESTIMATORMEASUREMENT_ATTRIBUTES_TIMESTAMP		10354  /**/
#define ERR_POSEESTIMATORMEASUREMENT_ATTRIBUTES_VALIDITY		10369  /**/
#define ERR_POSEESTIMATORMEASUREMENT_ATTRIBUTES_ATTRIBUTES		10457  /**/
#define ERR_POSEESTIMATORMEASUREMENT_ATTRIBUTES_ATTRIBUTES_ELM		10446  /**/
#define ERR_POSEESTIMATORMEASUREMENT_ATTRIBUTES_ATTRIBUTES_ELM_ATTRIBUTE_KEY		10380  /**/
#define ERR_POSEESTIMATORMEASUREMENT_ATTRIBUTES_ATTRIBUTES_ELM_ATTRIBUTE_VALUE		10435  /**/
#define ERR_POSEESTIMATORMEASUREMENT_ATTRIBUTES_ATTRIBUTES_ELM_ATTRIBUTE_VALUE_BOOLEAN_VALUE		10391  /**/
#define ERR_POSEESTIMATORMEASUREMENT_ATTRIBUTES_ATTRIBUTES_ELM_ATTRIBUTE_VALUE_DISCRETE_VALUE		10402  /**/
#define ERR_POSEESTIMATORMEASUREMENT_ATTRIBUTES_ATTRIBUTES_ELM_ATTRIBUTE_VALUE_REAL_VALUE		10413  /**/
#define ERR_POSEESTIMATORMEASUREMENT_ATTRIBUTES_ATTRIBUTES_ELM_ATTRIBUTE_VALUE_STRING_VALUE		10424  /**/
#define ERR_POSEESTIMATORMEASUREMENT_ESTIMATED_POSE		10544  /**/
#define ERR_POSEESTIMATORMEASUREMENT_ESTIMATED_POSE_POSITION		10493  /**/
#define ERR_POSEESTIMATORMEASUREMENT_ESTIMATED_POSE_POSITION_DATA		10486  /**/
#define ERR_POSEESTIMATORMEASUREMENT_ESTIMATED_POSE_POSITION_DATA_ELM		10475  /**/
#define ERR_POSEESTIMATORMEASUREMENT_ESTIMATED_POSE_ORIENTATION		10533  /**/
#define ERR_POSEESTIMATORMEASUREMENT_ESTIMATED_POSE_ORIENTATION_IM		10515  /**/
#define ERR_POSEESTIMATORMEASUREMENT_ESTIMATED_POSE_ORIENTATION_IM_ELM		10504  /**/
#define ERR_POSEESTIMATORMEASUREMENT_ESTIMATED_POSE_ORIENTATION_RE		10522  /**/
flag PoseEstimatorMeasurement_IsConstraintValid(const PoseEstimatorMeasurement* pVal, int* pErrCode);

#define ERR_UPER_ENCODE_POSEESTIMATORMEASUREMENT		10556  /**/
#define ERR_UPER_ENCODE_POSEESTIMATORMEASUREMENT_ATTRIBUTES_2		10471  /**/
#define ERR_UPER_ENCODE_POSEESTIMATORMEASUREMENT_ESTIMATED_POSE_2		10551  /**/
#define PoseEstimatorMeasurement_REQUIRED_BYTES_FOR_ENCODING       158 
#define PoseEstimatorMeasurement_REQUIRED_BITS_FOR_ENCODING        1257

flag PoseEstimatorMeasurement_Encode(const PoseEstimatorMeasurement* pVal, BitStream* pBitStrm, int* pErrCode, flag bCheckConstraints);

#define ERR_UPER_DECODE_POSEESTIMATORMEASUREMENT		10557  /**/
#define ERR_UPER_DECODE_POSEESTIMATORMEASUREMENT_ATTRIBUTES_2		10472  /**/
#define ERR_UPER_DECODE_POSEESTIMATORMEASUREMENT_ESTIMATED_POSE_2		10552  /**/
flag PoseEstimatorMeasurement_Decode(PoseEstimatorMeasurement* pVal, BitStream* pBitStrm, int* pErrCode);
/*-- PoseEstimatorImagingMode --------------------------------------------*/
typedef struct {
    T_Boolean imaging_mode;

} PoseEstimatorImagingMode;

void PoseEstimatorImagingMode_Initialize(PoseEstimatorImagingMode* pVal);

#define ERR_POSEESTIMATORIMAGINGMODE		10300  /**/
#define ERR_POSEESTIMATORIMAGINGMODE_IMAGING_MODE		10289  /**/
flag PoseEstimatorImagingMode_IsConstraintValid(const PoseEstimatorImagingMode* pVal, int* pErrCode);

#define ERR_UPER_ENCODE_POSEESTIMATORIMAGINGMODE		10301  /**/
#define ERR_UPER_ENCODE_POSEESTIMATORIMAGINGMODE_IMAGING_MODE_2		10296  /**/
#define PoseEstimatorImagingMode_REQUIRED_BYTES_FOR_ENCODING       1 
#define PoseEstimatorImagingMode_REQUIRED_BITS_FOR_ENCODING        1

flag PoseEstimatorImagingMode_Encode(const PoseEstimatorImagingMode* pVal, BitStream* pBitStrm, int* pErrCode, flag bCheckConstraints);

#define ERR_UPER_DECODE_POSEESTIMATORIMAGINGMODE		10302  /**/
#define ERR_UPER_DECODE_POSEESTIMATORIMAGINGMODE_IMAGING_MODE_2		10297  /**/
flag PoseEstimatorImagingMode_Decode(PoseEstimatorImagingMode* pVal, BitStream* pBitStrm, int* pErrCode);
/*-- PoseEstimatorCameraSelect --------------------------------------------*/
typedef struct {
    T_UInt8 camera_select;

} PoseEstimatorCameraSelect;

void PoseEstimatorCameraSelect_Initialize(PoseEstimatorCameraSelect* pVal);

#define ERR_POSEESTIMATORCAMERASELECT		10318  /**/
#define ERR_POSEESTIMATORCAMERASELECT_CAMERA_SELECT		10307  /**/
flag PoseEstimatorCameraSelect_IsConstraintValid(const PoseEstimatorCameraSelect* pVal, int* pErrCode);

#define ERR_UPER_ENCODE_POSEESTIMATORCAMERASELECT		10319  /**/
#define ERR_UPER_ENCODE_POSEESTIMATORCAMERASELECT_CAMERA_SELECT_2		10314  /**/
#define PoseEstimatorCameraSelect_REQUIRED_BYTES_FOR_ENCODING       1 
#define PoseEstimatorCameraSelect_REQUIRED_BITS_FOR_ENCODING        8

flag PoseEstimatorCameraSelect_Encode(const PoseEstimatorCameraSelect* pVal, BitStream* pBitStrm, int* pErrCode, flag bCheckConstraints);

#define ERR_UPER_DECODE_POSEESTIMATORCAMERASELECT		10320  /**/
#define ERR_UPER_DECODE_POSEESTIMATORCAMERASELECT_CAMERA_SELECT_2		10315  /**/
flag PoseEstimatorCameraSelect_Decode(PoseEstimatorCameraSelect* pVal, BitStream* pBitStrm, int* pErrCode);
/*-- PoseEstimatorConfiguration --------------------------------------------*/
typedef struct {
    T_Boolean imaging_mode;
    T_UInt8 camera_select;

} PoseEstimatorConfiguration;

void PoseEstimatorConfiguration_Initialize(PoseEstimatorConfiguration* pVal);

#define ERR_POSEESTIMATORCONFIGURATION		10347  /**/
#define ERR_POSEESTIMATORCONFIGURATION_IMAGING_MODE		10325  /**/
#define ERR_POSEESTIMATORCONFIGURATION_CAMERA_SELECT		10336  /**/
flag PoseEstimatorConfiguration_IsConstraintValid(const PoseEstimatorConfiguration* pVal, int* pErrCode);

#define ERR_UPER_ENCODE_POSEESTIMATORCONFIGURATION		10348  /**/
#define ERR_UPER_ENCODE_POSEESTIMATORCONFIGURATION_IMAGING_MODE_2		10332  /**/
#define ERR_UPER_ENCODE_POSEESTIMATORCONFIGURATION_CAMERA_SELECT_2		10343  /**/
#define PoseEstimatorConfiguration_REQUIRED_BYTES_FOR_ENCODING       2 
#define PoseEstimatorConfiguration_REQUIRED_BITS_FOR_ENCODING        9

flag PoseEstimatorConfiguration_Encode(const PoseEstimatorConfiguration* pVal, BitStream* pBitStrm, int* pErrCode, flag bCheckConstraints);

#define ERR_UPER_DECODE_POSEESTIMATORCONFIGURATION		10349  /**/
#define ERR_UPER_DECODE_POSEESTIMATORCONFIGURATION_IMAGING_MODE_2		10333  /**/
#define ERR_UPER_DECODE_POSEESTIMATORCONFIGURATION_CAMERA_SELECT_2		10344  /**/
flag PoseEstimatorConfiguration_Decode(PoseEstimatorConfiguration* pVal, BitStream* pBitStrm, int* pErrCode);

 

/* ================= Encoding/Decoding function prototypes =================
 * These functions are placed at the end of the file to make sure all types
 * have been declared first, in case of parameterized ACN encodings
 * ========================================================================= */

 


#ifdef  __cplusplus
}

#endif

#endif
